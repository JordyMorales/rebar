{"version":3,"sources":["../../../units/urb-appbase-universal/fetcherBase.js"],"names":["FetcherBase","constructor","url","UserToken1","UserToken2","fetch","operation","variables","request","method","credentials","headers","body","JSON","stringify","query","text","response","json"],"mappings":";;AAEA;;AAEe,MAAMA,WAAN,CAAkB;;;;;;AAM/BC,cAAaC,GAAb,EAA0BC,UAA1B,EAA+CC,UAA/C,EAAoE;AAClE,SAAKF,GAAL,GAAWA,GAAX;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACD;;AAED,QAAMC,KAAN,CAAaC,SAAb,EAA0CC,SAA1C,EAA2D;AACzD,UAAMC,UAAU;AACdC,cAAQ,MADM;AAEdC,mBAAa,aAFC;AAGdC,eAAS;AACP,wBAAgB,kBADT;AAEPP,oBAAY,KAAKA,UAFV,EAHK;;AAOdQ,YAAMC,KAAKC,SAAL,CAAe,EAAEC,OAAOT,UAAUU,IAAnB,EAAyBT,SAAzB,EAAf;;;AAGR;AAVgB,KAAhB,CAWA,IAAK,KAAKJ,UAAV,EAAuBK,QAAQG,OAAR,CAAgBR,UAAhB,GAA6B,KAAKA,UAAlC;;AAEvB,UAAMc,WAAW,MAAMZ,MAAO,KAAKH,GAAZ,EAAiBM,OAAjB,CAAvB;;AAEA,WAAOS,SAASC,IAAT,EAAP;AACD,GA7B8B,C,kBAAZlB,W","file":"fetcherBase.js","sourcesContent":["// @flow\n\nimport 'isomorphic-fetch'\n\nexport default class FetcherBase {\n  url: string\n  UserToken1: ?string\n  UserToken2: string\n  payloads: Array<any>\n\n  constructor( url: string, UserToken1: ?string, UserToken2: string ) {\n    this.url = url\n    this.UserToken1 = UserToken1\n    this.UserToken2 = UserToken2\n  }\n\n  async fetch( operation: { text: string }, variables: any ) {\n    const request = {\n      method: 'POST',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n        UserToken2: this.UserToken2,\n      },\n      body: JSON.stringify({ query: operation.text, variables }),\n    }\n\n    // $AssureFlow we can add the cookie, will be used on server\n    if ( this.UserToken1 ) request.headers.UserToken1 = this.UserToken1\n\n    const response = await fetch( this.url, request )\n\n    return response.json()\n  }\n}\n"]}