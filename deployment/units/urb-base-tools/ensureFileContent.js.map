{"version":3,"sources":["../../../units/urb-base-tools/ensureFileContent.js"],"names":["readFileAsync","fs","readFile","writeFileAsync","writeFile","ensureFileContent","fileName","currentFileContent","newFileContent","toString","err","code","console","log"],"mappings":";;AAEA,wB;AACA,4B;;AAEA,MAAMA,gBAAgB,qBAAWC,aAAGC,QAAd,CAAtB;AACA,MAAMC,iBAAiB,qBAAWF,aAAGG,SAAd,CAAvB,C;;AAEiB,eAAeC,iBAAf;AACfC,QADe;AAEfC,kBAFe;AAGfC,cAHe;AAIf;AACA;AACA,MAAKD,sBAAsB,IAA3B,EAAkC;AAChC,QAAI;AACFA,2BAAqB,CAAE,MAAMP,cAAeM,QAAf,CAAR,EAAoCG,QAApC,EAArB;AACD,KAFD,CAEE,OAAQC,GAAR,EAAc;AACd,UAAKA,IAAIC,IAAJ,KAAa,QAAlB,EAA6B,MAAMD,GAAN;AAC9B;AACF;;AAED,MAAKH,uBAAuBC,cAA5B,EAA6C;AAC3CI,YAAQC,GAAR,CAAa,mBAAmBP,QAAhC;AACA,UAAMH,eAAgBG,QAAhB,EAA0BE,cAA1B,EAA0C,MAA1C,CAAN;AACD,GAHD,MAGO;AACLI,YAAQC,GAAR,CAAa,mBAAmBP,QAAhC;AACD;AACF,C","file":"ensureFileContent.js","sourcesContent":["// @flow\n\nimport fs from 'fs'\nimport { promisify } from 'util'\n\nconst readFileAsync = promisify( fs.readFile )\nconst writeFileAsync = promisify( fs.writeFile )\n\nexport default ( async function ensureFileContent(\n  fileName: string,\n  currentFileContent: ?string,\n  newFileContent: string,\n) {\n  // If the current file content is not provided, get it\n  if ( currentFileContent == null ) {\n    try {\n      currentFileContent = ( await readFileAsync( fileName ) ).toString()\n    } catch ( err ) {\n      if ( err.code !== 'ENOENT' ) throw err\n    }\n  }\n\n  if ( currentFileContent !== newFileContent ) {\n    console.log( '‚úçÔ∏è  written:  ' + fileName )\n    await writeFileAsync( fileName, newFileContent, 'utf8' )\n  } else {\n    console.log( 'üìé  skipped:  ' + fileName )\n  }\n})\n"]}