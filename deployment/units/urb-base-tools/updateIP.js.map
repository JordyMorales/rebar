{"version":3,"sources":["../../../units/urb-base-tools/updateIP.js"],"names":["require","load","port","process","env","PORT","Error","IPAddress","argv","undefined","console","log","updateIPInFile","fileName","searchString","newContentOfLine","fileLines","fs","readFileSync","split","index","length","indexOf","writeFileSync","join","err"],"mappings":";;AAEA;;;AAGA,mF,8FADA;;AAGA;AACAA,OAAO,CAAE,QAAF,CAAP,CAAoBC,IAApB;;AAEA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAzB;AACA,IAAKH,IAAI,IAAI,IAAR,IAAgB,OAAOA,IAAP,KAAgB,QAArC;AACE,MAAM,IAAII,KAAJ,CAAW,mEAAX,CAAN;;AAEF,IAAIC,SAAS,GAAGJ,OAAO,CAACK,IAAR,CAAa,CAAb,CAAhB;;AAEA,IAAKD,SAAS,KAAKE,SAAnB,EAA+BF,SAAS,GAAG,0BAAZ;;AAE/B,IAAKA,SAAS,KAAKE,SAAnB,EAA+B;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAa,gBAAgBJ,SAA7B;AACA;;;;;;;;;;;;;;;;AAgBAK,EAAAA,cAAc,CAAE,QAAF,EAAY,aAAZ,EAA2B,uBAAuBL,SAAvB,GAAmC,GAAnC,GAAyCL,IAApE,EAA0EK,SAA1E,CAAd;AACAK,EAAAA,cAAc,CAAE,QAAF,EAAY,OAAZ,EAAqB,UAAUL,SAA/B,EAA0CA,SAA1C,CAAd;AACD,CApBD,MAoBOG,OAAO,CAACC,GAAR,CAAa,iDAAb;;AAEP,SAASC,cAAT,CAAyBC,QAAzB,EAAmCC,YAAnC,EAAiDC,gBAAjD,EAAmER,SAAnE,EAA+E;AAC7E,MAAI;AACF,QAAIS,SAAS,GAAGC,YAAGC,YAAH,CAAiBL,QAAjB,EAA2B,MAA3B,EAAoCM,KAApC,CAA2C,IAA3C,CAAhB;AACA,QAAIC,KAAK,GAAG,CAAZ;;AAEA,WAAQA,KAAK,GAAGJ,SAAS,CAACK,MAA1B,EAAmC;AACjC,UAAKL,SAAS,CAACI,KAAD,CAAT,CAAiBE,OAAjB,CAA0BR,YAA1B,IAA2C,CAAC,CAAjD,EAAqD;AACnD,YAAKE,SAAS,CAACI,KAAD,CAAT,KAAqBL,gBAA1B;AACEL,QAAAA,OAAO,CAACC,GAAR,CAAa,MAAME,QAAN,GAAiB,yBAA9B,EADF;AAEK;AACHG,UAAAA,SAAS,CAACI,KAAD,CAAT,GAAmBL,gBAAnB;AACAE,sBAAGM,aAAH,CAAkBV,QAAlB,EAA4BG,SAAS,CAACQ,IAAV,CAAgB,IAAhB,CAA5B;;AAEAd,UAAAA,OAAO,CAACC,GAAR,CAAa,MAAME,QAAN,GAAiB,mCAAjB,GAAuDN,SAApE;AACD;AACD;AACD,OAVD,MAUO;AACLa,QAAAA,KAAK;AACN;AACF;AACF,GAnBD,CAmBE,OAAQK,GAAR,EAAc;AACdf,IAAAA,OAAO,CAACC,GAAR,CAAa,MAAME,QAAN,GAAiB,oDAAjB,GAAwEY,GAArF;AACD;AACF","sourcesContent":["// @flow\n\nimport fs from 'fs'\n\n//import AppRegistryName from '../_configuration/urb-base-app/AppRegistryName'\nimport getLocalIP from '../urb-base-server/getLocalIP'\n\n// Read environment\nrequire( 'dotenv' ).load()\n\nconst port = process.env.PORT\nif ( port == null || typeof port !== 'string' )\n  throw new Error( 'Error: update-ip requires the environment variable PORT to be set' )\n\nlet IPAddress = process.argv[2]\n\nif ( IPAddress === undefined ) IPAddress = getLocalIP()\n\nif ( IPAddress !== undefined ) {\n  console.log( 'IP Address:' + IPAddress )\n  /*\n  updateIPInFile(\n    './ios/' + AppRegistryName + '/AppDelegate.m',\n    'jsCodeLocation = [NSURL URLWithString:@\"http:',\n    '  jsCodeLocation = [NSURL URLWithString:@\"http://' +\n      IPAddress +\n      ':8081/index.ios.bundle?platform=ios&dev=true\"];',\n    IPAddress,\n  )\n  updateIPInFile(\n    './units/_configuration/urb-base-app/publicURL.js',\n    'const publicURL',\n    'const publicURL = \\'http://' + IPAddress + ':' + port + '\\'',\n    IPAddress,\n  )\n  */\n  updateIPInFile( './.env', 'PUBLIC_URL=', 'PUBLIC_URL=http://' + IPAddress + ':' + port, IPAddress )\n  updateIPInFile( './.env', 'HOST=', 'HOST=' + IPAddress, IPAddress )\n} else console.log( 'IP Address not specified and could not be found' )\n\nfunction updateIPInFile( fileName, searchString, newContentOfLine, IPAddress ) {\n  try {\n    let fileLines = fs.readFileSync( fileName, 'utf8' ).split( '\\n' )\n    let index = 0\n\n    while ( index < fileLines.length ) {\n      if ( fileLines[index].indexOf( searchString ) > -1 ) {\n        if ( fileLines[index] === newContentOfLine )\n          console.log( '[' + fileName + '] is already up to date' )\n        else {\n          fileLines[index] = newContentOfLine\n          fs.writeFileSync( fileName, fileLines.join( '\\n' ) )\n\n          console.log( '[' + fileName + '] has been updated with local IP ' + IPAddress )\n        }\n        break\n      } else {\n        index++\n      }\n    }\n  } catch ( err ) {\n    console.log( '[' + fileName + '] has not been been updated with local IP because ' + err )\n  }\n}\n"],"file":"updateIP.js"}