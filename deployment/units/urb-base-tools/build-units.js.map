{"version":3,"sources":["../../../units/urb-base-tools/build-units.js"],"names":["existsAsync","exists","readFileAsync","readFile","readdirAsync","readdir","prettierESLintOptions","eslintConfig","prettierOptions","prettier","sortObject","object","t","Object","keys","sort","forEach","k","orderPackages","packageAsObject","scripts","dependencies","devDependencies","mergeScripts","scripts1","scripts2","assign","scriptName","script","script2","createPackageJson","units","packageJsonFileName","resolve","currentPackageAsJSONString","toString","currentPackageAsObject","JSON","parse","engines","name","version","unitName","packageAsObjectName","packageToAddAsObject","stringify","createMutations","mutationsImports","mutationsExports","endsWith","mutationsDir","mutationFileNames","mutationFileName","mutation","substring","length","push","replace","mutations","concat","text","join","createSchemas","schemasImports","schemasDir","objectTypeFileNames","objectTypeFileName","objectType","schemas","createViewerFields","viewerFieldsImports","viewerFieldsExports","viewerFieldsFileName","viewerFieldsImportName","viewerFields","createRoutes","routesAppFrameImports","routesRootImports","routesAppFrameExports","routesRootExports","routesDir","routeFileNames","routeFileName","startsWith","route","Promise","all","createRouteFile","fileName","imports","exports","routesAppFrame","getUnits","filter","main","taskPromises","then","console","log"],"mappings":"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","file":"build-units.js","sourcesContent":["// @flow\n\nimport fs from 'fs'\nimport path from 'path'\nimport { promisify } from 'util'\n\nimport prettierESLint from 'prettier-eslint'\n\n// $FlowIssue Not sure why it gives an error. The file does exist\nimport packageJSON from '../../package.json'\n// $FlowIssue Not sure why it gives an error. The file does exist\nimport eslintRC from '../../.eslintrc.json'\n\nimport ensureFileContent from './ensureFileContent'\n\nconst existsAsync = promisify( fs.exists )\nconst readFileAsync = promisify( fs.readFile )\nconst readdirAsync = promisify( fs.readdir )\n\nconst prettierESLintOptions = { eslintConfig: eslintRC, prettierOptions: packageJSON.prettier }\n\nfunction sortObject( object: Object ) {\n  var t = {}\n  Object.keys( object )\n    .sort()\n    .forEach( function( k ) {\n      t[k] = object[k]\n    })\n  return t\n}\n\nfunction orderPackages( packageAsObject ) {\n  packageAsObject.scripts = sortObject( packageAsObject.scripts )\n  packageAsObject.dependencies = sortObject( packageAsObject.dependencies )\n  packageAsObject.devDependencies = sortObject( packageAsObject.devDependencies )\n}\n\nfunction mergeScripts( scripts1, scripts2 ) {\n  const scripts = Object.assign({}, scripts1 )\n\n  for ( let scriptName in scripts2 ) {\n    const script = scripts[scriptName]\n    const script2 = scripts2[scriptName]\n\n    if ( script && script2 ) {\n      scripts[scriptName] = script + ' && ' + script2\n    } else if ( script2 ) {\n      scripts[scriptName] = script2\n    }\n  }\n\n  return scripts\n}\n\nasync function createPackageJson( units: Array<string> ) {\n  const packageJsonFileName = path.resolve( './package.json' )\n  const currentPackageAsJSONString = ( await readFileAsync( packageJsonFileName ) ).toString()\n  const currentPackageAsObject = JSON.parse( currentPackageAsJSONString )\n  const packageAsObject = {\n    dependencies: {},\n    devDependencies: {},\n    engines: {},\n    'lint-staged': {},\n    name: null,\n    prettier: {},\n    scripts: {},\n    version: null,\n  }\n\n  // Make sure not to overwrite version information\n  packageAsObject.version = currentPackageAsObject.version\n  packageAsObject.name = currentPackageAsObject.name\n\n  // Add packages to object\n  for ( let unitName of units ) {\n    const packageAsObjectName = path.resolve( './units', unitName, 'package.part.json' )\n    if ( await existsAsync( packageAsObjectName ) ) {\n      const packageToAddAsObject = JSON.parse( ( await readFileAsync( packageAsObjectName ) ).toString() )\n\n      if ( packageToAddAsObject.dependencies )\n        Object.assign( packageAsObject.dependencies, packageToAddAsObject.dependencies )\n      if ( packageToAddAsObject.devDependencies )\n        Object.assign( packageAsObject.devDependencies, packageToAddAsObject.devDependencies )\n      if ( packageToAddAsObject.engines )\n        Object.assign( packageAsObject.engines, packageToAddAsObject.engines )\n      if ( packageToAddAsObject['lint-staged'])\n        Object.assign( packageAsObject['lint-staged'], packageToAddAsObject['lint-staged'])\n      if ( packageToAddAsObject.prettier )\n        Object.assign( packageAsObject.prettier, packageToAddAsObject.prettier )\n      if ( packageToAddAsObject.scripts )\n        packageAsObject.scripts = mergeScripts(\n          packageAsObject.scripts,\n          packageToAddAsObject.scripts,\n        )\n    }\n  }\n\n  // Make them pretty\n  orderPackages( packageAsObject )\n\n  await ensureFileContent(\n    packageJsonFileName,\n    currentPackageAsJSONString,\n    JSON.stringify( packageAsObject, null, 2 ),\n  )\n}\n\nasync function createMutations( units: Array<string> ) {\n  const mutationsImports = []\n  const mutationsExports = []\n\n  for ( let unitName of units )\n    if ( unitName.endsWith( '-server' ) ) {\n      const mutationsDir = path.resolve( './units', unitName, 'graphql/mutation' )\n      if ( await existsAsync( mutationsDir ) ) {\n        const mutationFileNames = await readdirAsync( mutationsDir )\n\n        for ( let mutationFileName of mutationFileNames ) {\n          if ( mutationFileName.endsWith( '.js' ) ) {\n            const mutation = mutationFileName.substring( 0, mutationFileName.length - 3 )\n            mutationsImports.push(\n              'import ' +\n                mutation.replace( '.', '_' ) +\n                ' from \\'../../../' +\n                unitName +\n                '/graphql/mutation/' +\n                mutation +\n                '\\'',\n            )\n            mutationsExports.push( '  ' + mutation + ',' )\n          }\n        }\n      }\n    }\n\n  let mutations = [ '// @flow', '' ]\n  mutations = mutations.concat( mutationsImports )\n  mutations = mutations.concat([ '', 'export default {' ])\n  mutations = mutations.concat( mutationsExports )\n  mutations = mutations.concat([ '}' ])\n\n  await ensureFileContent(\n    path.resolve( './units/_configuration/urb-base-server/graphql/_mutations.js' ),\n    null,\n    prettierESLint({ text: mutations.join( '\\r\\n' ), ...prettierESLintOptions }),\n  )\n}\n\nasync function createSchemas( units: Array<string> ) {\n  const schemasImports = []\n\n  for ( let unitName of units )\n    if ( unitName.endsWith( '-server' ) ) {\n      const schemasDir = path.resolve( './units', unitName, 'graphql/model' )\n      if ( await existsAsync( schemasDir ) ) {\n        const objectTypeFileNames = await readdirAsync( schemasDir )\n\n        for ( let objectTypeFileName of objectTypeFileNames ) {\n          if ( objectTypeFileName.endsWith( '.js' ) ) {\n            const objectType = objectTypeFileName.substring( 0, objectTypeFileName.length - 3 )\n            schemasImports.push(\n              'import \\'../../../' + unitName + '/graphql/model/' + objectType + '\\'',\n            )\n          }\n        }\n      }\n    }\n\n  let schemas = [ '// @flow', '' ]\n  schemas = schemas.concat( schemasImports )\n  schemas = schemas.concat([ '', 'export default true' ])\n\n  await ensureFileContent(\n    path.resolve( './units/_configuration/urb-base-server/graphql/_schemas.js' ),\n    null,\n    prettierESLint({ text: schemas.join( '\\r\\n' ), ...prettierESLintOptions }),\n  )\n}\n\nasync function createViewerFields( units: Array<string> ) {\n  const viewerFieldsImports = []\n  const viewerFieldsExports = []\n\n  for ( let unitName of units )\n    if ( unitName.endsWith( '-server' ) ) {\n      const viewerFieldsFileName = path.resolve(\n        './units',\n        unitName,\n        'graphql/type/_ViewerFields.js',\n      )\n      if ( await existsAsync( viewerFieldsFileName ) ) {\n        const viewerFieldsImportName = unitName.replace( /-/g, '_' )\n        viewerFieldsImports.push(\n          'import ' +\n            viewerFieldsImportName +\n            ' from \\'../../../' +\n            unitName +\n            '/graphql/type/_ViewerFields\\'',\n        )\n        viewerFieldsExports.push( '  ...' + viewerFieldsImportName + ',' )\n      }\n    }\n\n  let viewerFields = [ '// @flow', '' ]\n  viewerFields = viewerFields.concat( viewerFieldsImports )\n  viewerFields = viewerFields.concat([ '', 'export default {' ])\n  viewerFields = viewerFields.concat( viewerFieldsExports )\n  viewerFields = viewerFields.concat([ '}' ])\n\n  await ensureFileContent(\n    path.resolve( './units/_configuration/urb-base-server/graphql/_ViewerFields.js' ),\n    null,\n    prettierESLint({ text: viewerFields.join( '\\r\\n' ), ...prettierESLintOptions }),\n  )\n}\n\nasync function createRoutes( units: Array<string> ) {\n  const routesAppFrameImports = []\n  const routesRootImports = []\n  const routesAppFrameExports = []\n  const routesRootExports = []\n\n  for ( let unitName of units )\n    if ( unitName.endsWith( '-webapp' ) ) {\n      const routesDir = path.resolve( './units', unitName )\n      if ( await existsAsync( routesDir ) ) {\n        const routeFileNames = await readdirAsync( routesDir )\n\n        for ( let routeFileName of routeFileNames ) {\n          if ( routeFileName.endsWith( '.jsx' ) )\n            if ( routeFileName.startsWith( 'routeAppFrame' ) ) {\n              const route = routeFileName.substring( 0, routeFileName.length - 4 )\n              routesAppFrameImports.push(\n                'import ' + route + ' from \\'../../' + unitName + '/' + route + '\\'',\n              )\n              routesAppFrameExports.push( '  ' + route + ',' )\n            } else if ( routeFileName.startsWith( 'routeRoot' ) ) {\n              const route = routeFileName.substring( 0, routeFileName.length - 4 )\n              routesRootImports.push(\n                'import ' + route + ' from \\'../../' + unitName + '/' + route + '\\'',\n              )\n              routesRootExports.push( '  ' + route + ',' )\n            }\n        }\n      }\n    }\n\n  await Promise.all([\n    createRouteFile(\n      path.resolve( './units/_configuration/urb-base-webapp/routesAppFrame.js' ),\n      routesAppFrameImports,\n      routesAppFrameExports,\n    ),\n    createRouteFile(\n      path.resolve( './units/_configuration/urb-base-webapp/routesRoot.js' ),\n      routesRootImports,\n      routesRootExports,\n    ),\n  ])\n}\n\nasync function createRouteFile( fileName: string, imports: Array<string>, exports: Array<string> ) {\n  let routesAppFrame = [ '// @flow', '' ]\n  routesAppFrame = routesAppFrame.concat( imports )\n  routesAppFrame = routesAppFrame.concat([ '', 'export default [' ])\n  routesAppFrame = routesAppFrame.concat( exports )\n  routesAppFrame = routesAppFrame.concat([ ']' ])\n\n  await ensureFileContent(\n    fileName,\n    null,\n    prettierESLint({ text: routesAppFrame.join( '\\r\\n' ), ...prettierESLintOptions }),\n  )\n}\n\nasync function getUnits() {\n  const units = ( await readdirAsync( './units/' ) ).filter(\n    fileName => fileName !== '.DS_Store' && fileName !== '_configuration',\n  )\n  return units\n}\n\nasync function main() {\n  const units = await getUnits()\n\n  const taskPromises = [\n    createPackageJson( units ),\n    createViewerFields( units ),\n    createSchemas( units ),\n    createMutations( units ),\n    createRoutes( units ),\n  ]\n\n  await Promise.all( taskPromises )\n}\n\nmain().then( () => console.log( 'Fin.' ) )\n"]}