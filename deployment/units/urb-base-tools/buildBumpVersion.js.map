{"version":3,"sources":["../../../units/urb-base-tools/buildBumpVersion.js"],"names":["require","load","console","log","process","env","npm_package_version","version","arrVersion","split","versionBuildNumber","newVersion","fileName","searchString","newContentOfLine","fileLines","fs","readFileSync","index","length","indexOf","writeFileSync","join"],"mappings":"aAAA;;AAEA,uD;;AAEA;AACAA,OAAO,CAAE,QAAF,CAAP,CAAoBC,IAApB;;AAEAC,OAAO,CAACC,GAAR,CAAa,sCAAsCC,OAAO,CAACC,GAAR,CAAYC,mBAA/D;AACAJ,OAAO,CAACC,GAAR,CAAa,sCAAsCI,gBAAnD;;AAEA,MAAMC,UAAU,GAAGD,iBAAQE,KAAR,CAAe,GAAf,CAAnB;AACA,IAAIC,kBAAkB,GAAGF,UAAU,CAAC,CAAD,CAAnC;;AAEA,IAAKE,kBAAkB,IAAI,IAA3B,EAAkCA,kBAAkB,GAAG,CAAC,CAAtB;;AAElC;AACA;AACA;;AAEA;AACAA,kBAAkB;AAClB,MAAMC,UAAU,GAAGP,OAAO,CAACC,GAAR,CAAYC,mBAAZ,GAAkC,GAAlC,GAAwCI,kBAA3D;;AAEA,MAAME,QAAQ,GAAG,mCAAjB;AACA,MAAMC,YAAY,GAAG,yBAArB;AACA,MAAMC,gBAAgB,GAAG,8BAA8BH,UAA9B,GAA2C,IAApE;;AAEA,IAAII,SAAS,GAAGC,YAAGC,YAAH,CAAiBL,QAAjB,EAA2B,MAA3B,EAAoCH,KAApC,CAA2C,IAA3C,CAAhB;AACA,IAAIS,KAAK,GAAG,CAAZ;;AAEA,OAAQA,KAAK,GAAGH,SAAS,CAACI,MAA1B,EAAmC;AACjC,MAAKJ,SAAS,CAACG,KAAD,CAAT,CAAiBE,OAAjB,CAA0BP,YAA1B,IAA2C,CAAC,CAAjD,EAAqD;AACnD,QAAKE,SAAS,CAACG,KAAD,CAAT,KAAqBJ,gBAA1B;AACEZ,IAAAA,OAAO,CAACC,GAAR,CAAa,MAAMS,QAAN,GAAiB,yBAA9B,EADF;AAEK;AACHG,MAAAA,SAAS,CAACG,KAAD,CAAT,GAAmBJ,gBAAnB;AACAE,kBAAGK,aAAH,CAAkBT,QAAlB,EAA4BG,SAAS,CAACO,IAAV,CAAgB,IAAhB,CAA5B;;AAEApB,MAAAA,OAAO,CAACC,GAAR,CAAa,sCAAsCQ,UAAnD;AACD;AACD;AACD,GAVD,MAUOO,KAAK;AACb","sourcesContent":["import fs from 'fs'\n\nimport { version } from '../_configuration/package.js'\n\n// Read environment\nrequire( 'dotenv' ).load()\n\nconsole.log( 'Current version in package.json: ' + process.env.npm_package_version )\nconsole.log( 'Current version in package.js:   ' + version )\n\nconst arrVersion = version.split( '.' )\nlet versionBuildNumber = arrVersion[3]\n\nif ( versionBuildNumber == null ) versionBuildNumber = -1\n\n// Reset build for new version - commented out. Makes sense not to reset.\n// if ( process.env.npm_package_version != arrVersion[0] + '.' + arrVersion[1] + '.' + arrVersion[2])\n//   versionBuildNumber = -1\n\n// Increment build\nversionBuildNumber++\nconst newVersion = process.env.npm_package_version + '.' + versionBuildNumber\n\nconst fileName = './units/_configuration/package.js'\nconst searchString = 'export const version = '\nconst newContentOfLine = 'export const version = \\'' + newVersion + '\\''\n\nlet fileLines = fs.readFileSync( fileName, 'utf8' ).split( '\\n' )\nlet index = 0\n\nwhile ( index < fileLines.length ) {\n  if ( fileLines[index].indexOf( searchString ) > -1 ) {\n    if ( fileLines[index] === newContentOfLine )\n      console.log( '[' + fileName + '] is already up to date' )\n    else {\n      fileLines[index] = newContentOfLine\n      fs.writeFileSync( fileName, fileLines.join( '\\n' ) )\n\n      console.log( 'New version in package.js:       ' + newVersion )\n    }\n    break\n  } else index++\n}\n"],"file":"buildBumpVersion.js"}