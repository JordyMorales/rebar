{"version":3,"sources":["../../../units/urb-base-tools/update-ip.js"],"names":["require","load","port","process","env","PORT","Error","IPAddress","argv","undefined","console","log","updateIPInFile","AppRegistryName","fileName","searchString","newContentOfLine","fileLines","fs","readFileSync","split","index","length","indexOf","writeFileSync","join","err"],"mappings":";;AAEA,wB;;AAEA,iF;AACA,2D;;AAEA;AACAA,QAAS,QAAT,EAAoBC,IAApB;;AAEA,MAAMC,OAAOC,QAAQC,GAAR,CAAYC,IAAzB;AACA,IAAKH,QAAQ,IAAR,IAAgB,OAAOA,IAAP,KAAgB,QAArC;AACE,MAAM,IAAII,KAAJ,CAAW,mEAAX,CAAN;;AAEF,IAAIC,YAAYJ,QAAQK,IAAR,CAAa,CAAb,CAAhB;;AAEA,IAAKD,cAAcE,SAAnB,EAA+BF,YAAY,2BAAZ;;AAE/B,IAAKA,cAAcE,SAAnB,EAA+B;AAC7BC,UAAQC,GAAR,CAAa,gBAAgBJ,SAA7B;AACAK;AACE,aAAWC,yBAAX,GAA6B,gBAD/B;AAEE,iDAFF;AAGE;AACEN,WADF;AAEE,mDALJ;AAMEA,WANF;;AAQAK;AACE,oDADF;AAEE,mBAFF;AAGE,kCAAgCL,SAAhC,GAA4C,GAA5C,GAAkDL,IAAlD,GAAyD,IAH3D;AAIEK,WAJF;;AAMAK,iBAAgB,QAAhB,EAA0B,aAA1B,EAAyC,uBAAuBL,SAAvB,GAAmC,GAAnC,GAAyCL,IAAlF,EAAwFK,SAAxF;AACAK,iBAAgB,QAAhB,EAA0B,OAA1B,EAAmC,UAAUL,SAA7C,EAAwDA,SAAxD;AACD,CAlBD,MAkBOG,QAAQC,GAAR,CAAa,iDAAb;;AAEP,SAASC,cAAT,CAAyBE,QAAzB,EAAmCC,YAAnC,EAAiDC,gBAAjD,EAAmET,SAAnE,EAA+E;AAC7E,MAAI;AACF,QAAIU,YAAYC,aAAGC,YAAH,CAAiBL,QAAjB,EAA2B,MAA3B,EAAoCM,KAApC,CAA2C,IAA3C,CAAhB;AACA,QAAIC,QAAQ,CAAZ;;AAEA,WAAQA,QAAQJ,UAAUK,MAA1B,EAAmC;AACjC,UAAKL,UAAUI,KAAV,EAAiBE,OAAjB,CAA0BR,YAA1B,IAA2C,CAAC,CAAjD,EAAqD;AACnD,YAAKE,UAAUI,KAAV,MAAqBL,gBAA1B;AACEN,gBAAQC,GAAR,CAAa,MAAMG,QAAN,GAAiB,yBAA9B,EADF;AAEK;AACHG,oBAAUI,KAAV,IAAmBL,gBAAnB;AACAE,uBAAGM,aAAH,CAAkBV,QAAlB,EAA4BG,UAAUQ,IAAV,CAAgB,IAAhB,CAA5B;;AAEAf,kBAAQC,GAAR,CAAa,MAAMG,QAAN,GAAiB,mCAAjB,GAAuDP,SAApE;AACD;AACD;AACD,OAVD,MAUO;AACLc;AACD;AACF;AACF,GAnBD,CAmBE,OAAQK,GAAR,EAAc;AACdhB,YAAQC,GAAR,CAAa,MAAMG,QAAN,GAAiB,oDAAjB,GAAwEY,GAArF;AACD;AACF","file":"update-ip.js","sourcesContent":["// @flow\n\nimport fs from 'fs'\n\nimport AppRegistryName from '../_configuration/urb-base-app/AppRegistryName'\nimport getLocalIP from '../urb-base-server/getLocalIP'\n\n// Read environment\nrequire( 'dotenv' ).load()\n\nconst port = process.env.PORT\nif ( port == null || typeof port !== 'string' )\n  throw new Error( 'Error: update-ip requires the environment variable PORT to be set' )\n\nlet IPAddress = process.argv[2]\n\nif ( IPAddress === undefined ) IPAddress = getLocalIP()\n\nif ( IPAddress !== undefined ) {\n  console.log( 'IP Address:' + IPAddress )\n  updateIPInFile(\n    './ios/' + AppRegistryName + '/AppDelegate.m',\n    'jsCodeLocation = [NSURL URLWithString:@\"http:',\n    '  jsCodeLocation = [NSURL URLWithString:@\"http://' +\n      IPAddress +\n      ':8081/index.ios.bundle?platform=ios&dev=true\"];',\n    IPAddress,\n  )\n  updateIPInFile(\n    './units/_configuration/urb-base-app/publicURL.js',\n    'const publicURL',\n    'const publicURL = \\'http://' + IPAddress + ':' + port + '\\'',\n    IPAddress,\n  )\n  updateIPInFile( './.env', 'PUBLIC_URL=', 'PUBLIC_URL=http://' + IPAddress + ':' + port, IPAddress )\n  updateIPInFile( './.env', 'HOST=', 'HOST=' + IPAddress, IPAddress )\n} else console.log( 'IP Address not specified and could not be found' )\n\nfunction updateIPInFile( fileName, searchString, newContentOfLine, IPAddress ) {\n  try {\n    let fileLines = fs.readFileSync( fileName, 'utf8' ).split( '\\n' )\n    let index = 0\n\n    while ( index < fileLines.length ) {\n      if ( fileLines[index].indexOf( searchString ) > -1 ) {\n        if ( fileLines[index] === newContentOfLine )\n          console.log( '[' + fileName + '] is already up to date' )\n        else {\n          fileLines[index] = newContentOfLine\n          fs.writeFileSync( fileName, fileLines.join( '\\n' ) )\n\n          console.log( '[' + fileName + '] has been updated with local IP ' + IPAddress )\n        }\n        break\n      } else {\n        index++\n      }\n    }\n  } catch ( err ) {\n    console.log( '[' + fileName + '] has not been been updated with local IP because ' + err )\n  }\n}\n"]}