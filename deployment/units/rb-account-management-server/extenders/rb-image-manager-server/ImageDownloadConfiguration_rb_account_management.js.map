{"version":3,"sources":["../../../../../units/rb-account-management-server/extenders/rb-image-manager-server/ImageDownloadConfiguration_rb_account_management.js"],"names":["fs","fsWithCallbacks","promises","require","config","envRebarDataFilesLocation","process","env","REBAR_DATA_FILES_LOCATION","Error","designerFilesLocation","path","resolve","noProfilePicFileName","ImageDownloadConfiguration_rb_account_management","ImageDownloadConfiguration","isProperConfiguration","req","query","isUserProfilePhoto","verifyUserPermissions","objectManager","getLocalFileName_async","viewerUserIDAsString","getViewerUserId","toString","localImageFileName","substring","localImageFileExists","stats","stat","isFile","err","code","NestedError"],"mappings":";;AAEA;AACA;;AAEA;;AAEA;AACA,8F;;AAEA;;AAEA,MAAMA,EAAE,GAAGC,YAAgBC,QAA3B;;AAEA;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA;;AAEA,MAAMC,yBAAyB,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAA9C;AACA,IAAIH,yBAAyB,IAAI,IAA7B,IAAqC,OAAOA,yBAAP,KAAqC,QAA9E;AACE,MAAM,IAAII,KAAJ;AACJ,8FADI,CAAN;;;AAIF,MAAMC,qBAAqB,GAAGC,cAAKC,OAAL,CAAaP,yBAAb,EAAwC,MAAxC,CAA9B;;AAEA;;AAEA,MAAMQ,oBAAoB,GAAGF,cAAKC,OAAL;AAC3B,sEAD2B,CAA7B;;;AAIA;;AAEe,MAAME,gDAAN,SAA+DC,mCAA/D,CAA0F;AACvGC,EAAAA,qBAAqB,CAACC,GAAD,EAAuB;AAC1C,QAAIA,GAAG,CAACC,KAAJ,IAAaD,GAAG,CAACC,KAAJ,CAAUC,kBAAV,KAAiC,MAAlD,EAA0D,OAAO,IAAP,CAA1D;AACK,WAAO,KAAP;AACN;;AAED,QAAMC,qBAAN,CAA4BC,aAA5B,EAA0DJ,GAA1D,EAAuE,CAAE;;AAEzE,QAAMK,sBAAN,CAA6BD,aAA7B,EAA2DJ,GAA3D,EAAyF;AACvF,UAAMM,oBAAoB,GAAGF,aAAa,CAACG,eAAd,GAAgCC,QAAhC,EAA7B;;AAEA,QAAIC,kBAAkB,GAAGf,cAAKC,OAAL;AACvBF,IAAAA,qBADuB;AAEvBa,IAAAA,oBAAoB,CAACI,SAArB,CAA+B,CAA/B,EAAkC,CAAlC,CAFuB;AAGvBJ,IAAAA,oBAHuB;AAIvB,aAJuB;AAKvB,eALuB,CAAzB;;;AAQA,QAAIK,oBAAoB,GAAG,KAA3B;AACA,QAAI;AACF,YAAMC,KAAK,GAAG,MAAM7B,EAAE,CAAC8B,IAAH,CAAQJ,kBAAR,CAApB;AACA,UAAIG,KAAK,CAACE,MAAN,EAAJ,EAAoB;AAClBH,QAAAA,oBAAoB,GAAG,IAAvB;AACD;AACF,KALD,CAKE,OAAOI,GAAP,EAAY;AACZ;AACA,UAAIA,GAAG,CAACC,IAAJ,KAAa,QAAjB;AACE,YAAM,IAAIC,0BAAJ;AACJ,6FADI;AAEJF,MAAAA,GAFI,CAAN;;AAIH;;AAED;AACA,QAAI,CAACJ,oBAAL,EAA2B;AACzBF,MAAAA,kBAAkB,GAAGb,oBAArB;AACD;;AAED,WAAOa,kBAAP;AACD,GAxCsG,C","sourcesContent":["// @flow\n\nimport fsWithCallbacks from 'fs'\nimport path from 'path'\n\nimport NestedError from 'nested-error-stacks'\n\nimport ImageDownloadConfiguration from '../../../rb-image-manager-server/ImageDownloadConfiguration'\nimport ObjectManager from '../../../rb-base-server/ObjectManager'\n\n//\n\nconst fs = fsWithCallbacks.promises\n\n// Read environment\nrequire('dotenv').config()\n\n//\n\nconst envRebarDataFilesLocation = process.env.REBAR_DATA_FILES_LOCATION\nif (envRebarDataFilesLocation == null || typeof envRebarDataFilesLocation !== 'string')\n  throw new Error(\n    'Error: Machine Acuity unit requires environment variable REBAR_DATA_FILES_LOCATION to be set',\n  )\n\nconst designerFilesLocation = path.resolve(envRebarDataFilesLocation, 'user')\n\n//\n\nconst noProfilePicFileName = path.resolve(\n  'units/rb-account-management-server/assets/user_photo_unavailable.png',\n)\n\n//\n\nexport default class ImageDownloadConfiguration_rb_account_management extends ImageDownloadConfiguration {\n  isProperConfiguration(req: Object): boolean {\n    if (req.query && req.query.isUserProfilePhoto === 'true') return true\n    else return false\n  }\n\n  async verifyUserPermissions(objectManager: ObjectManager, req: Object) {}\n\n  async getLocalFileName_async(objectManager: ObjectManager, req: Object): Promise<string> {\n    const viewerUserIDAsString = objectManager.getViewerUserId().toString()\n\n    let localImageFileName = path.resolve(\n      designerFilesLocation,\n      viewerUserIDAsString.substring(0, 2),\n      viewerUserIDAsString,\n      'profile',\n      'photo.jpg',\n    )\n\n    let localImageFileExists = false\n    try {\n      const stats = await fs.stat(localImageFileName)\n      if (stats.isFile()) {\n        localImageFileExists = true\n      }\n    } catch (err) {\n      // If file not found it is OK - otherwise throw exception\n      if (err.code !== 'ENOENT')\n        throw new NestedError(\n          'rb-account-management-server/ImageDownloadConfiguration_rb_account_management: Failed',\n          err,\n        )\n    }\n\n    // Proviode stand-in for profile picture\n    if (!localImageFileExists) {\n      localImageFileName = noProfilePicFileName\n    }\n\n    return localImageFileName\n  }\n}\n"],"file":"ImageDownloadConfiguration_rb_account_management.js"}