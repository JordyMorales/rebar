{"version":3,"sources":["../../../../units/urb-account-management-webapp/components/NewUserScreen.jsx"],"names":["styles","theme","card","minWidth","userName","borderWidth","borderColor","fontWeight","paddingLeft","paddingRight","NewUserScreen","React","Component","constructor","props","context","_handle_onClick_Create","UserAccount_Identifier","User_Secret","state","setState","currentOperation","loc","window","location","host","protocol","hostname","port","response","fetch","method","credentials","headers","body","JSON","stringify","responseData","json","console","log","success","errorMessage","error","err","message","_handle_onClick_CancelCreation","_handle_onClick_TryAgain","_handle_onClick_Continue","replace","renderCreating","classes","renderSuccess","renderFailure","renderPrompt","event","target","value","render"],"mappings":"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","sourcesContent":["// @flow\n\nimport Button from '@material-ui/core/Button'\n\nimport Card from '@material-ui/core/Card'\n\nimport CardActions from '@material-ui/core/CardActions'\n\nimport CardContent from '@material-ui/core/CardContent'\n\nimport CardHeader from '@material-ui/core/CardHeader'\n\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport TextField from '@material-ui/core/TextField'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport React from 'react'\n\nimport ResponsiveContentArea from '../../urb-appbase-webapp/components/ResponsiveContentArea'\n\nconst styles = theme => ({\n  card: {\n    minWidth: 320,\n  },\n  userName: {\n    borderWidth: 1,\n    borderColor: '#c0c0c0',\n    fontWeight: 'bold',\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n})\n\nclass NewUserScreen extends React.Component<\n  {\n    classes: Object,\n  },\n  {\n    currentOperation: 'prompt' | 'creating' | 'success' | 'failure',\n    errorMessage: string,\n    UserAccount_Identifier: string,\n    User_Secret: string,\n  },\n> {\n  constructor( props: Object, context: Object ) {\n    super( props, context )\n\n    this.state = {\n      currentOperation: 'prompt',\n      errorMessage: '',\n      UserAccount_Identifier: '',\n      User_Secret: '',\n    }\n  }\n\n  _handle_onClick_Create = async() => {\n    const { UserAccount_Identifier, User_Secret } = this.state\n\n    this.setState({\n      currentOperation: 'creating',\n      User_Secret: '', // In order to prevent the password from being accessed later\n    })\n\n    try {\n      const loc = window.location\n      const host = loc.protocol + '//' + loc.hostname + ':' + loc.port\n\n      const response = await fetch( host + '/auth/createuser', {\n        method: 'POST',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          UserAccount_Identifier: UserAccount_Identifier,\n          User_Secret: User_Secret,\n        }),\n      })\n\n      const responseData = await response.json()\n\n      console.log( 'CREATE USER RESPONSE' )\n      console.log( responseData )\n\n      if ( responseData.success ) {\n        // In case of success, notify user\n        this.setState({ currentOperation: 'success' })\n      } else {\n        // In case of error, tell user what the error is\n        this.setState({\n          currentOperation: 'failure',\n          errorMessage: responseData.error,\n        })\n      }\n    } catch ( err ) {\n      // In case response could not be received properly, tell the user\n      // In case of error, tell user what the error is\n      this.setState({\n        currentOperation: 'failure',\n        errorMessage:\n          'Did not receive proper response from server. Please try again. Message:' + err.message,\n      })\n    }\n  }\n\n  _handle_onClick_CancelCreation = () => {\n    this.setState({\n      currentOperation: 'failure',\n      errorMessage: 'User creation has been canceled',\n    })\n  }\n\n  _handle_onClick_TryAgain = () => {\n    this.setState({\n      currentOperation: 'prompt',\n      errorMessage: '',\n    })\n  }\n\n  _handle_onClick_Continue = () => {\n    window.location.replace( '/' )\n  }\n\n  renderCreating() {\n    const { classes } = this.props\n    const { UserAccount_Identifier } = this.state\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader title=\"Creating user\" />\n        <CardContent>\n          <Typography component=\"p\">\n            Creating user\n            <span class={classes.userName}>{UserAccount_Identifier}</span>, please wait.\n          </Typography>\n          <br />\n          <br />\n          <LinearProgress mode=\"query\" />\n        </CardContent>\n        <CardActions>\n          <Button onClick={this._handle_onClick_CancelCreation}>Cancel</Button>\n        </CardActions>\n      </Card>\n    )\n  }\n\n  renderSuccess() {\n    const { classes } = this.props\n    const { UserAccount_Identifier } = this.state\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader title=\"Creating user\" />\n        <CardContent>\n          <Typography component=\"p\">\n            Created user\n            <span class={classes.userName}>{UserAccount_Identifier}</span>.\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button onClick={this._handle_onClick_Continue}>Continue</Button>\n        </CardActions>\n      </Card>\n    )\n  }\n\n  renderFailure() {\n    const { classes } = this.props\n    const { UserAccount_Identifier, errorMessage } = this.state\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader title=\"Creating user\" />\n        <CardContent>\n          <Typography component=\"p\">\n            Failed creating user\n            <span class={classes.userName}>{UserAccount_Identifier}</span>\n            because {errorMessage}.\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button onClick={this._handle_onClick_TryAgain}>Try Again</Button>\n        </CardActions>\n      </Card>\n    )\n  }\n\n  renderPrompt() {\n    const { classes } = this.props\n    const { UserAccount_Identifier, User_Secret } = this.state\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader title=\"Create New User\" />\n        <CardContent>\n          <TextField\n            label=\"E-Mail Address\"\n            fullWidth={true}\n            value={UserAccount_Identifier}\n            onChange={event => this.setState({ UserAccount_Identifier: event.target.value })}\n          />\n          <TextField\n            label=\"Password\"\n            type=\"password\"\n            fullWidth={true}\n            value={User_Secret}\n            onChange={event => this.setState({ User_Secret: event.target.value })}\n          />\n        </CardContent>\n        <CardActions>\n          <Button onClick={this._handle_onClick_Create}>Create</Button>\n        </CardActions>\n      </Card>\n    )\n  }\n\n  render() {\n    const { currentOperation } = this.state\n\n    return (\n      <ResponsiveContentArea>\n        {currentOperation === 'prompt' && this.renderPrompt()}\n        {currentOperation === 'creating' && this.renderCreating()}\n        {currentOperation === 'success' && this.renderSuccess()}\n        {currentOperation === 'failure' && this.renderFailure()}\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default withStyles( styles )( NewUserScreen )\n"],"file":"NewUserScreen.js"}