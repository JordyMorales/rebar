{"version":3,"sources":["../../../../units/urb-account-management-webapp/components/NavBarLoginButton.jsx"],"names":["styles","theme","buttonRoot","color","NavBarLoginButton","React","Component","constructor","props","context","_handle_onClick_Login","setState","loginDialogIsOpen","userMenuIsOpen","_handle_onClick_Profile","_handle_Login_Close","_handle_onClick_UserMenu","event","anchorEl","currentTarget","_handle_UserMenu_Close","_handle_onClick_Logout","router","push","_handle_Login_NewUser","state","undefined","UNSAFE_componentWillMount","componentWillUnmount","render","classes","User_IsAnonymous","User_DisplayName","Viewer","root"],"mappings":"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","sourcesContent":["// @flow\n\nimport Button from '@material-ui/core/Button'\n\nimport Menu from '@material-ui/core/Menu'\n\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { withRouter } from 'found'\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport {\n  registerAuthenticationRequiredCallback,\n  unregisterAuthenticationRequiredCallback,\n} from './RequiresAuthentication'\nimport LoginDialog from './LoginDialog'\n\nconst styles = theme => ({\n  buttonRoot: {\n    color: '#ffffff',\n  },\n})\n\nclass NavBarLoginButton extends React.Component<\n  {\n    classes: Object,\n    Viewer: Object,\n    relay: Object,\n    router: Object,\n  },\n  {\n    anchorEl: ?Object,\n    loginDialogIsOpen: boolean,\n    userMenuIsOpen: boolean,\n  },\n> {\n  constructor( props: Object, context: Object ) {\n    super( props, context )\n\n    this.state = {\n      anchorEl: undefined,\n      loginDialogIsOpen: false,\n      userMenuIsOpen: false,\n    }\n  }\n\n  // Handle popping open the login dialog if authentication is required\n  UNSAFE_componentWillMount() {\n    registerAuthenticationRequiredCallback( this._handle_onClick_Login )\n  }\n\n  componentWillUnmount() {\n    unregisterAuthenticationRequiredCallback()\n  }\n\n  _handle_onClick_Login = () => {\n    this.setState({ loginDialogIsOpen: true, userMenuIsOpen: false })\n  }\n\n  _handle_onClick_Profile = () => {\n    this.setState({ userMenuIsOpen: false })\n  }\n\n  _handle_Login_Close = () => {\n    this.setState({ loginDialogIsOpen: false })\n  }\n\n  _handle_onClick_UserMenu = event => {\n    this.setState({ userMenuIsOpen: true, anchorEl: event.currentTarget })\n  }\n\n  _handle_UserMenu_Close = () => {\n    this.setState({ userMenuIsOpen: false })\n  }\n\n  _handle_onClick_Logout = () => {\n    this.setState({ userMenuIsOpen: false })\n    this.props.router.push( '/user/logout' )\n  }\n\n  _handle_Login_NewUser = () => {\n    this.setState({ loginDialogIsOpen: false })\n\n    this.props.router.push( '/user/new' )\n  }\n\n  render() {\n    const { classes } = this.props\n    const { User_IsAnonymous, User_DisplayName } = this.props.Viewer\n    const { loginDialogIsOpen, userMenuIsOpen } = this.state\n\n    return (\n      <div>\n        {User_IsAnonymous && (\n          <Button classes={{ root: classes.buttonRoot }} onClick={this._handle_onClick_Login}>\n            Login\n          </Button>\n        )}\n        {!User_IsAnonymous && (\n          <Button classes={{ root: classes.buttonRoot }} onClick={this._handle_onClick_UserMenu}>\n            {User_DisplayName}\n          </Button>\n        )}\n        <LoginDialog\n          open={loginDialogIsOpen}\n          handlerClose={this._handle_Login_Close}\n          handlerNewUser={this._handle_Login_NewUser}\n        />\n        <Menu\n          id=\"lock-menu\"\n          anchorEl={this.state.anchorEl}\n          open={userMenuIsOpen}\n          onClose={this._handle_UserMenu_Close}\n        >\n          <MenuItem key=\"profile\" onClick={this._handle_onClick_Profile}>\n            Profile\n          </MenuItem>\n          <MenuItem key=\"login\" onClick={this._handle_onClick_Login}>\n            Login as a different user\n          </MenuItem>\n          <MenuItem key=\"logout\" onClick={this._handle_onClick_Logout}>\n            Log out\n          </MenuItem>\n        </Menu>\n      </div>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles( styles )( withRouter( NavBarLoginButton ) ),\n  graphql`\n    fragment NavBarLoginButton_Viewer on Viewer {\n      User_IsAnonymous\n      User_DisplayName\n    }\n  `,\n)\n"],"file":"NavBarLoginButton.js"}