{"version":3,"sources":["../../../../units/urb-example-todo-webapp/components/ToDoItem.jsx"],"names":["ToDoItem","React","Component","constructor","props","context","_handle_onClickCheckbox","event","ToDo_Complete","relay","Viewer","ToDo","ToDoUpdateStatusMutation","commit","environment","_handle_Update_Properties","ToDo_properties","ToDoUpdateRenameMutation","ToDo_Text","_handle_Close_Properties","setState","propertiesIsOpen","handleClickListItem","menuIsOpen","anchorEl","currentTarget","_handle_Menu_onClick_Edit","_handle_Menu_onClick_Delete","ToDoDeleteMutation","handleRequestClose","state","undefined","render"],"mappings":"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","sourcesContent":["// @flow\n\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport IconButton from '@material-ui/core/IconButton'\n\nimport ListItem from '@material-ui/core/ListItem'\n\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\n\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport Menu from '@material-ui/core/Menu'\n\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport { MoreVert } from '@material-ui/icons'\n\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport ToDoUpdateStatusMutation from '../../urb-example-todo-client/relay/ToDoUpdateStatusMutation'\nimport ToDoDeleteMutation from '../../urb-example-todo-client/relay/ToDoDeleteMutation'\nimport ToDoUpdateRenameMutation from '../../urb-example-todo-client/relay/ToDoUpdateRenameMutation'\n\nimport ToDoProperties from './ToDoProperties'\n\nclass ToDoItem extends React.Component<\n  {\n    Viewer: Object,\n    ToDo: Object,\n    relay: Object,\n  },\n  {\n    anchorEl: ?Object,\n    menuIsOpen: boolean,\n    propertiesIsOpen: boolean,\n  },\n> {\n  constructor( props: Object, context: Object ) {\n    super( props, context )\n\n    this.state = {\n      anchorEl: undefined,\n      menuIsOpen: false,\n      propertiesIsOpen: false,\n    }\n  }\n\n  _handle_onClickCheckbox = ( event, ToDo_Complete ) => {\n    const { relay, Viewer, ToDo } = this.props\n\n    ToDoUpdateStatusMutation.commit( relay.environment, Viewer, ToDo, ToDo_Complete )\n  }\n\n  _handle_Update_Properties = ToDo_properties => {\n    const { relay, ToDo } = this.props\n\n    ToDoUpdateRenameMutation.commit( relay.environment, ToDo, ToDo_properties.ToDo_Text )\n  }\n\n  _handle_Close_Properties = () => {\n    this.setState({ propertiesIsOpen: false })\n  }\n\n  handleClickListItem = event => {\n    this.setState({ menuIsOpen: true, anchorEl: event.currentTarget })\n  }\n\n  _handle_Menu_onClick_Edit = event => {\n    this.setState({ menuIsOpen: false, propertiesIsOpen: true })\n  }\n\n  _handle_Menu_onClick_Delete = event => {\n    this.setState({ menuIsOpen: false })\n\n    const { relay, Viewer, ToDo } = this.props\n\n    ToDoDeleteMutation.commit( relay.environment, Viewer, ToDo )\n  }\n\n  handleRequestClose = () => {\n    this.setState({ menuIsOpen: false })\n  }\n\n  render() {\n    const { ToDo_Complete, ToDo_Text } = this.props.ToDo\n\n    return (\n      <div>\n        <ListItem\n          button\n          aria-haspopup=\"true\"\n          aria-controls=\"lock-menu\"\n          onClick={event => this._handle_onClickCheckbox( event, !ToDo_Complete )}\n        >\n          <Checkbox checked={ToDo_Complete} />\n          <ListItemText primary={ToDo_Text} />\n          <ListItemSecondaryAction>\n            <IconButton onClick={this.handleClickListItem}>\n              <MoreVert />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Menu\n          id=\"lock-menu\"\n          anchorEl={this.state.anchorEl}\n          open={this.state.menuIsOpen}\n          onClose={this.handleRequestClose}\n        >\n          <MenuItem key=\"edit\" onClick={event => this._handle_Menu_onClick_Edit( event )}>\n            Edit\n          </MenuItem>\n          <MenuItem key=\"delete\" onClick={event => this._handle_Menu_onClick_Delete( event )}>\n            Delete\n          </MenuItem>\n        </Menu>\n        <ToDoProperties\n          ToDo_Text={ToDo_Text}\n          handlerUpdate={this._handle_Update_Properties}\n          handlerClose={this._handle_Close_Properties}\n          open={this.state.propertiesIsOpen}\n        />\n      </div>\n    )\n  }\n}\n\nexport default createFragmentContainer( ToDoItem, {\n  Viewer: graphql`\n    fragment ToDoItem_Viewer on Viewer {\n      id\n    }\n  `,\n  ToDo: graphql`\n    fragment ToDoItem_ToDo on ToDo {\n      id\n      ToDo_Complete\n      ToDo_Text\n    }\n  `,\n})\n"],"file":"ToDoItem.js"}