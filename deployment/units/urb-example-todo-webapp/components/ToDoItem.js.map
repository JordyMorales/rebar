{"version":3,"sources":["../../../../units/urb-example-todo-webapp/components/ToDoItem.jsx"],"names":["ToDoItem","Component","constructor","props","context","_handle_onClickCheckbox","event","ToDo_Complete","relay","Viewer","ToDo","commit","environment","_handle_Update_Properties","ToDo_properties","ToDo_Text","_handle_Close_Properties","setState","propertiesIsOpen","handleClickListItem","menuIsOpen","anchorEl","currentTarget","_handle_Menu_onClick_Edit","_handle_Menu_onClick_Delete","handleRequestClose","state","undefined","render"],"mappings":"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","file":"ToDoItem.js","sourcesContent":["// @flow\n\nimport Checkbox from 'material-ui/Checkbox'\nimport IconButton from 'material-ui/IconButton'\nimport { ListItem, ListItemSecondaryAction, ListItemText } from 'material-ui/List'\nimport Menu, { MenuItem } from 'material-ui/Menu'\n\nimport { MoreVert } from '@material-ui/icons'\n\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport ToDoUpdateStatusMutation from '../../urb-example-todo-client/relay/ToDoUpdateStatusMutation'\nimport ToDoDeleteMutation from '../../urb-example-todo-client/relay/ToDoDeleteMutation'\nimport ToDoUpdateRenameMutation from '../../urb-example-todo-client/relay/ToDoUpdateRenameMutation'\n\nimport ToDoProperties from './ToDoProperties'\n\nclass ToDoItem extends React.Component<\n  {\n    Viewer: Object,\n    ToDo: Object,\n    relay: Object,\n  },\n  {\n    anchorEl: ?Object,\n    menuIsOpen: boolean,\n    propertiesIsOpen: boolean,\n  },\n> {\n  constructor( props: Object, context: Object ) {\n    super( props, context )\n\n    this.state = {\n      anchorEl: undefined,\n      menuIsOpen: false,\n      propertiesIsOpen: false,\n    }\n  }\n\n  _handle_onClickCheckbox = ( event, ToDo_Complete ) => {\n    const { relay, Viewer, ToDo } = this.props\n\n    ToDoUpdateStatusMutation.commit( relay.environment, Viewer, ToDo, ToDo_Complete )\n  }\n\n  _handle_Update_Properties = ToDo_properties => {\n    const { relay, ToDo } = this.props\n\n    ToDoUpdateRenameMutation.commit( relay.environment, ToDo, ToDo_properties.ToDo_Text )\n  }\n\n  _handle_Close_Properties = () => {\n    this.setState({ propertiesIsOpen: false })\n  }\n\n  handleClickListItem = event => {\n    this.setState({ menuIsOpen: true, anchorEl: event.currentTarget })\n  }\n\n  _handle_Menu_onClick_Edit = event => {\n    this.setState({ menuIsOpen: false, propertiesIsOpen: true })\n  }\n\n  _handle_Menu_onClick_Delete = event => {\n    this.setState({ menuIsOpen: false })\n\n    const { relay, Viewer, ToDo } = this.props\n\n    ToDoDeleteMutation.commit( relay.environment, Viewer, ToDo )\n  }\n\n  handleRequestClose = () => {\n    this.setState({ menuIsOpen: false })\n  }\n\n  render() {\n    const { ToDo_Complete, ToDo_Text } = this.props.ToDo\n\n    return (\n      <div>\n        <ListItem\n          button\n          aria-haspopup=\"true\"\n          aria-controls=\"lock-menu\"\n          onClick={event => this._handle_onClickCheckbox( event, !ToDo_Complete )}\n        >\n          <Checkbox checked={ToDo_Complete} />\n          <ListItemText primary={ToDo_Text} />\n          <ListItemSecondaryAction>\n            <IconButton onClick={this.handleClickListItem}>\n              <MoreVert />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Menu\n          id=\"lock-menu\"\n          anchorEl={this.state.anchorEl}\n          open={this.state.menuIsOpen}\n          onRequestClose={this.handleRequestClose}\n        >\n          <MenuItem key=\"edit\" onClick={event => this._handle_Menu_onClick_Edit( event )}>\n            Edit\n          </MenuItem>\n          <MenuItem key=\"delete\" onClick={event => this._handle_Menu_onClick_Delete( event )}>\n            Delete\n          </MenuItem>\n        </Menu>\n        <ToDoProperties\n          ToDo_Text={ToDo_Text}\n          handlerUpdate={this._handle_Update_Properties}\n          handlerClose={this._handle_Close_Properties}\n          open={this.state.propertiesIsOpen}\n        />\n      </div>\n    )\n  }\n}\n\nexport default createFragmentContainer( ToDoItem, {\n  Viewer: graphql`\n    fragment ToDoItem_Viewer on Viewer {\n      id\n    }\n  `,\n  ToDo: graphql`\n    fragment ToDoItem_ToDo on ToDo {\n      id\n      ToDo_Complete\n      ToDo_Text\n    }\n  `,\n})\n"]}