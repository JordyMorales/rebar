{"version":3,"sources":["../../../../units/urb-example-todo-webapp/components/ToDoProperties.jsx"],"names":["styles","theme","container","display","flexWrap","ToDo_Properties","React","Component","constructor","props","context","_handle_Close","handlerClose","_handle_OK","handlerUpdate","ToDo_Text","state","render","open","event","setState","target","value"],"mappings":";;AAEA,kD;;AAEA,kD;;AAEA,8B;;AAEA;;AAEA,wD;;AAEA,MAAMA,SAASC,UAAU;AACvBC,aAAW;AACTC,aAAS,MADA;AAETC,cAAU,MAFD,EADY,EAAV,CAAf;;;;AAOA,MAAMC,eAAN,SAA8BC,gBAAMC;;;;;;;;;;AAUlC;AACAC,cAAaC,KAAb,EAA4BC,OAA5B,EAA8C;AAC5C,UAAOD,KAAP,EAAcC,OAAd,EAD4C;;;;;;;;;AAU9CC,iBAV8C,GAU9B,MAAM;AACpB,WAAKF,KAAL,CAAWG,YAAX;AACD,KAZ6C;;AAc9CC,cAd8C,GAcjC,MAAM;AACjB,WAAKJ,KAAL,CAAWK,aAAX,CAAyB,EAAEC,WAAW,KAAKC,KAAL,CAAWD,SAAxB,EAAzB;;AAEA,WAAKN,KAAL,CAAWG,YAAX;AACD,KAlB6C,CAG5C,MAAM,EAAEG,SAAF,KAAgB,KAAKN,KAA3B,CAEA,KAAKO,KAAL,GAAa,EACXD,SADW,EAAb,CAGD;;AAYDE,WAAS;AACP,UAAM,EAAEF,SAAF,KAAgB,KAAKC,KAA3B;;AAEA;AACE;AACE,sCAAC,gBAAD,IAAQ,MAAM,KAAKP,KAAL,CAAWS,IAAzB,EAA+B,gBAAgB,KAAKP,aAApD;AACE,wCAAC,mBAAD,eADF;AAEE,wCAAC,qBAAD;AACE,0CAAC,mBAAD;AACE,qBAAM,OADR;AAEE,yBAAW,IAFb;AAGE,qBAAOI,SAHT;AAIE,wBAAUI,SAAS,KAAKC,QAAL,CAAc,EAAEL,WAAWI,MAAME,MAAN,CAAaC,KAA1B,EAAd,CAJrB,GADF,CAFF;;;AAUE,wCAAC,qBAAD;AACE,0CAAC,gBAAD,IAAQ,SAAS,KAAKX,aAAtB,aADF;AAEE,0CAAC,gBAAD,IAAQ,SAAS,KAAKE,UAAtB,EAAkC,OAAM,SAAxC,SAFF,CAVF,CADF,CADF;;;;;;;AAqBD,GA7CD,C;;;AAgDa,wBAAYb,MAAZ,EAAsBK,eAAtB,C","file":"ToDoProperties.js","sourcesContent":["// @flow\n\nimport Button from '@material-ui/core/Button'\n\nimport Dialog, { DialogActions, DialogContent, DialogTitle } from '@material-ui/core/Dialog'\n\nimport React from 'react'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport TextField from '@material-ui/core/TextField'\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n})\n\nclass ToDo_Properties extends React.Component<\n  {\n    ToDo_Text: string,\n    open: boolean,\n    handlerUpdate: Function,\n    handlerClose: Function,\n  },\n  {\n    ToDo_Text: string,\n  },\n> {\n  constructor( props: Object, context: Object ) {\n    super( props, context )\n\n    const { ToDo_Text } = this.props\n\n    this.state = {\n      ToDo_Text,\n    }\n  }\n\n  _handle_Close = () => {\n    this.props.handlerClose()\n  }\n\n  _handle_OK = () => {\n    this.props.handlerUpdate({ ToDo_Text: this.state.ToDo_Text })\n\n    this.props.handlerClose()\n  }\n\n  render() {\n    const { ToDo_Text } = this.state\n\n    return (\n      <div>\n        <Dialog open={this.props.open} onRequestClose={this._handle_Close}>\n          <DialogTitle>ToDo</DialogTitle>\n          <DialogContent>\n            <TextField\n              label=\"To Do\"\n              fullWidth={true}\n              value={ToDo_Text}\n              onChange={event => this.setState({ ToDo_Text: event.target.value })}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this._handle_Close}>Cancel</Button>\n            <Button onClick={this._handle_OK} color=\"primary\">\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nexport default withStyles( styles )( ToDo_Properties )\n"]}