{"version":3,"sources":["../../../../units/urb-example-todo-webapp/components/ToDoScreen.jsx"],"names":["styles","theme","card","minWidth","ToDoScreen","React","Component","constructor","props","context","_handle_onKeyDown_AddToDo","e","keyCode","relay","Viewer","ToDoAddMutation","commit","environment","state","ToDo_Text_New","setState","_handle_OnChange","event","target","value","render","classes","children","marginLeft","marginRight"],"mappings":";;AAEA,8C;;AAEA;;AAEA,8B;AACA;;AAEA,wD;;AAEA,+F;AACA,sF;;AAEA,MAAMA,SAASC,UAAU;AACvBC,QAAM;AACJC,cAAU,GADN,EADiB,EAAV,CAAf;;;;AAMA,MAAMC,UAAN,SAAyBC,gBAAMC;;;;;;;;;;AAU7B;AACAC,cAAaC,KAAb,EAAoBC,OAApB,EAA8B;AAC5B,UAAOD,KAAP,EAAcC,OAAd,EAD4B;;;;;;;AAQ9BC,6BAR8B,GAQFC,KAAK;AAC/B,UAAKA,EAAEC,OAAF,KAAc,EAAnB,EAAwB;AACtB,cAAM,EAAEC,KAAF,EAASC,MAAT,KAAoB,KAAKN,KAA/B;;AAEAO,kCAAgBC,MAAhB,CAAwBH,MAAMI,WAA9B,EAA2CH,MAA3C,EAAmD,KAAKI,KAAL,CAAWC,aAA9D;;AAEA,aAAKC,QAAL,CAAc;AACZD,yBAAe,EADH,EAAd;;AAGD;AACF,KAlB6B;;AAoB9BE,oBApB8B,GAoBXC,SAAS;AAC1B,WAAKF,QAAL,CAAc;AACZD,uBAAeG,MAAMC,MAAN,CAAaC,KADhB,EAAd;;AAGD,KAxB6B,CAG5B,KAAKN,KAAL,GAAa,EACXC,eAAe,EADJ,EAAb,CAGD;;AAoBDM,WAAS;AACP,UAAM,EAAEC,OAAF,KAAc,KAAKlB,KAAzB;;AAEA;AACE,oCAAC,+BAAD;AACE,sCAAC,cAAD,IAAM,WAAWkB,QAAQxB,IAAzB;AACE,wCAAC,gBAAD,IAAY,OAAM,QAAlB,EAA2B,WAAU,yBAArC,GADF;AAEG,eAAKM,KAAL,CAAWmB,QAFd;AAGE,iDAAK,OAAO,EAAEC,YAAY,CAAd,EAAiBC,aAAa,CAA9B,EAAZ,GAHF;AAIE,wCAAC,mBAAD;AACE,mBAAM,wBADR;AAEE,mBAAO,KAAKX,KAAL,CAAWC,aAFpB;AAGE,uBAAW,IAHb;AAIE,uBAAW,KAAKT,yBAJlB;AAKE,sBAAU,KAAKW,gBALjB,GAJF,CADF,CADF;;;;;AAgBD,GA9CD,C;;;AAiDa;AACb,wBAAYrB,MAAZ,EAAsBI,UAAtB,CADa,yF","file":"ToDoScreen.js","sourcesContent":["// @flow\n\nimport Card, { CardHeader } from '@material-ui/core/Card'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport TextField from '@material-ui/core/TextField'\n\nimport ResponsiveContentArea from '../../urb-base-webapp/components/ResponsiveContentArea'\nimport ToDoAddMutation from '../../urb-example-todo-client/relay/ToDoAddMutation'\n\nconst styles = theme => ({\n  card: {\n    minWidth: 275,\n  },\n})\n\nclass ToDoScreen extends React.Component<\n  {\n    classes: Object,\n    Viewer: {},\n    children: Object,\n    relay: Object,\n  },\n  {\n    ToDo_Text_New: string,\n  },\n> {\n  constructor( props, context ) {\n    super( props, context )\n\n    this.state = {\n      ToDo_Text_New: '',\n    }\n  }\n\n  _handle_onKeyDown_AddToDo = e => {\n    if ( e.keyCode === 13 ) {\n      const { relay, Viewer } = this.props\n\n      ToDoAddMutation.commit( relay.environment, Viewer, this.state.ToDo_Text_New )\n\n      this.setState({\n        ToDo_Text_New: '',\n      })\n    }\n  }\n\n  _handle_OnChange = event => {\n    this.setState({\n      ToDo_Text_New: event.target.value,\n    })\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <ResponsiveContentArea>\n        <Card className={classes.card}>\n          <CardHeader title=\"TO DOs\" subheader=\"List of TO DOs for user\" />\n          {this.props.children}\n          <div style={{ marginLeft: 4, marginRight: 4 }} />\n          <TextField\n            label=\"What needs to be done?\"\n            value={this.state.ToDo_Text_New}\n            fullWidth={true}\n            onKeyDown={this._handle_onKeyDown_AddToDo}\n            onChange={this._handle_OnChange}\n          />\n        </Card>\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles( styles )( ToDoScreen ),\n  graphql`\n    fragment ToDoScreen_Viewer on Viewer {\n      id\n    }\n  `,\n)\n"]}