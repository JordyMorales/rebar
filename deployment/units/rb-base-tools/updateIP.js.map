{"version":3,"sources":["../../../units/rb-base-tools/updateIP.js"],"names":["require","config","port","process","env","PORT","Error","IPAddress","argv","undefined","console","log","updateIPInFile","fileName","searchString","newContentOfLine","fileLines","fs","readFileSync","split","index","length","indexOf","writeFileSync","join","err"],"mappings":";;AAEA;;;AAGA,kF,8FADA;;AAGA;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAzB;AACA,IAAIH,IAAI,IAAI,IAAR,IAAgB,OAAOA,IAAP,KAAgB,QAApC;AACE,MAAM,IAAII,KAAJ;AACJ,mEADI,CAAN;;;AAIF,IAAIC,SAAS,GAAGJ,OAAO,CAACK,IAAR,CAAa,CAAb,CAAhB;;AAEA,IAAID,SAAS,KAAKE,SAAlB,EAA6BF,SAAS,GAAG,0BAAZ;;AAE7B,IAAIA,SAAS,KAAKE,SAAlB,EAA6B;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBJ,SAA5B;AACAK,EAAAA,cAAc;AACZ,UADY;AAEZ,mCAFY;AAGZ,+CAA6CL,SAA7C,GAAyD,GAAzD,GAA+DL,IAA/D,GAAsE,IAH1D;AAIZK,EAAAA,SAJY,CAAd;;AAMAK,EAAAA,cAAc,CAAC,QAAD,EAAW,OAAX,EAAoB,UAAUL,SAA9B,EAAyCA,SAAzC,CAAd;AACD,CATD,MASO;AACLG,EAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ;AACD;;AAED,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,YAAlC,EAAgDC,gBAAhD,EAAkER,SAAlE,EAA6E;AAC3E,MAAI;AACF,QAAIS,SAAS,GAAGC,YAAGC,YAAH,CAAgBL,QAAhB,EAA0B,MAA1B,EAAkCM,KAAlC,CAAwC,IAAxC,CAAhB;AACA,QAAIC,KAAK,GAAG,CAAZ;;AAEA,WAAOA,KAAK,GAAGJ,SAAS,CAACK,MAAzB,EAAiC;AAC/B,UAAIL,SAAS,CAACI,KAAD,CAAT,CAAiBE,OAAjB,CAAyBR,YAAzB,IAAyC,CAAC,CAA9C,EAAiD;AAC/C,YAAIE,SAAS,CAACI,KAAD,CAAT,KAAqBL,gBAAzB;AACEL,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAME,QAAN,GAAiB,yBAA7B,EADF;AAEK;AACHG,UAAAA,SAAS,CAACI,KAAD,CAAT,GAAmBL,gBAAnB;AACAE,sBAAGM,aAAH,CAAiBV,QAAjB,EAA2BG,SAAS,CAACQ,IAAV,CAAe,IAAf,CAA3B;;AAEAd,UAAAA,OAAO,CAACC,GAAR;AACE,gBAAME,QAAN,GAAiB,mCAAjB,GAAuDN,SADzD;;AAGD;AACD;AACD,OAZD,MAYO;AACLa,QAAAA,KAAK;AACN;AACF;AACF,GArBD,CAqBE,OAAOK,GAAP,EAAY;AACZf,IAAAA,OAAO,CAACC,GAAR;AACE;AACEE,IAAAA,QADF;AAEE,wDAFF;AAGEY,IAAAA,GAJJ;;AAMD;AACF","sourcesContent":["// @flow\n\nimport fs from 'fs'\n\n//import AppRegistryName from '../_configuration/rb-base-app/AppRegistryName'\nimport getLocalIP from '../rb-base-server/getLocalIP'\n\n// Read environment\nrequire('dotenv').config()\n\nconst port = process.env.PORT\nif (port == null || typeof port !== 'string')\n  throw new Error(\n    'Error: update-ip requires the environment variable PORT to be set'\n  )\n\nlet IPAddress = process.argv[2]\n\nif (IPAddress === undefined) IPAddress = getLocalIP()\n\nif (IPAddress !== undefined) {\n  console.log('IP Address:' + IPAddress)\n  updateIPInFile(\n    './.env',\n    'ACCESS_CONTROL_ALLOWED_ORIGINS=',\n    'ACCESS_CONTROL_ALLOWED_ORIGINS=[\"http://' + IPAddress + ':' + port + '\"]',\n    IPAddress\n  )\n  updateIPInFile('./.env', 'HOST=', 'HOST=' + IPAddress, IPAddress)\n} else {\n  console.log('IP Address not specified and could not be found')\n}\n\nfunction updateIPInFile(fileName, searchString, newContentOfLine, IPAddress) {\n  try {\n    let fileLines = fs.readFileSync(fileName, 'utf8').split('\\n')\n    let index = 0\n\n    while (index < fileLines.length) {\n      if (fileLines[index].indexOf(searchString) > -1) {\n        if (fileLines[index] === newContentOfLine)\n          console.log('[' + fileName + '] is already up to date')\n        else {\n          fileLines[index] = newContentOfLine\n          fs.writeFileSync(fileName, fileLines.join('\\n'))\n\n          console.log(\n            '[' + fileName + '] has been updated with local IP ' + IPAddress\n          )\n        }\n        break\n      } else {\n        index++\n      }\n    }\n  } catch (err) {\n    console.log(\n      '[' +\n        fileName +\n        '] has not been been updated with local IP because ' +\n        err\n    )\n  }\n}\n"],"file":"updateIP.js"}