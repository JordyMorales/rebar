{"version":3,"sources":["../../../units/rb-appbase-server/checkCredentials.js"],"names":["require","load","envHost","process","env","HOST","Error","getSessionIdFromRequest","req","UserToken1","cookies","headers","usertoken1","length","decoded","jwt","decode","JWT_SECRET","defaultPersister","uuidFromString","session_id","err","getUserAndSessionIDByUserToken1","objectManager","a_UserSession","getOneObject_async","id","UserSession_artifact_id","siteInformation","artifact_id","_materialized_view","user_id","UserSession_User_id","uuidNull","a_User","User_artifact_id","setViewerUserId","User","UserSession","JSON","stringify","verifyUserAuthToken","Promise","reject","request_UserToken2","get","UserToken2","ip","UserToken2ServerRendering","USER_TOKEN_2_BYPASS_IP","resolve","httpError403FileName","path","__dirname","serveAuthenticationFailed","res","respondWithJSON","connection","remoteAddress","requestDetails","query","body","log","level","message","details","errorMessage","errorStack","stack","cookie","httpOnly","expires","Date","status","send","sendFile"],"mappings":"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","sourcesContent":["// @flow weak\n\nimport path from 'path'\n\nimport jwt from 'jwt-simple'\n\nimport defaultPersister from '../_configuration/rb-base-server/graphql/defaultPersister'\nimport UserToken2ServerRendering from '../_configuration/rb-base-server/UserToken2ServerRendering'\nimport log from '../rb-base-server/log'\n\n// Read environment\nrequire( 'dotenv' ).load()\n\nconst envHost = process.env.HOST\nif ( envHost == null || typeof envHost !== 'string' )\n  throw new Error( 'Error: rb-appbase-webapp requires the environment variable HOST to be set' )\n\nfunction getSessionIdFromRequest( req: Object ): ?string {\n  const UserToken1 = req.cookies.UserToken1 || req.headers.usertoken1\n  if ( UserToken1 )\n    try {\n      if ( UserToken1.length > 10 ) {\n        const decoded = jwt.decode( UserToken1, process.env.JWT_SECRET )\n        return defaultPersister.uuidFromString( decoded.session_id )\n      }\n    } catch ( err ) {\n      // Do nothing. This most probably means an expired session, or\n      // new session secret. Either way the user is consindered not logged in\n    }\n  return null // Anonymous, unless cookie is passed\n}\n\nexport async function getUserAndSessionIDByUserToken1( objectManager, req ) {\n  // Get session, and if session is present, user from session\n  const session_id = getSessionIdFromRequest( req )\n  let a_UserSession = null\n\n  if ( session_id )\n    a_UserSession = await objectManager.getOneObject_async( 'UserSession', {\n      id: session_id,\n      UserSession_artifact_id: objectManager.siteInformation.artifact_id,\n\n      _materialized_view: 'UserSession_by_artifact_id_and_id',\n    })\n\n  const user_id = a_UserSession ? a_UserSession.UserSession_User_id : defaultPersister.uuidNull()\n\n  const a_User = await objectManager.getOneObject_async( 'User', {\n    id: user_id,\n    User_artifact_id: objectManager.siteInformation.artifact_id,\n  })\n\n  if ( a_User ) {\n    objectManager.setViewerUserId( user_id )\n    return { User: a_User, UserSession: a_UserSession }\n  } else {\n    throw new Error( 'User ' + JSON.stringify( user_id ) + ' not found' )\n  }\n}\n\nexport function verifyUserAuthToken( a_User, req ) {\n  if ( !a_User ) return Promise.reject( 'User not found' )\n  else {\n    const request_UserToken2 = req.get( 'UserToken2' )\n    if (\n      request_UserToken2 === a_User.UserToken2 ||\n      // A request coming from webapp will come from localhost and will bear the server's user token\n      ( ( req.ip === '127.0.0.1' || req.ip === envHost ) &&\n        request_UserToken2 === UserToken2ServerRendering ) ||\n      // For use with GraphiQL\n      process.env.USER_TOKEN_2_BYPASS_IP === req.ip\n    )\n      return Promise.resolve( a_User.id )\n    else\n      return Promise.reject(\n        'Authentication token expected: ' + a_User.UserToken2 + ', provided:' + request_UserToken2,\n      )\n  }\n}\n\nconst httpError403FileName = path.resolve(\n  __dirname,\n  '../_configuration/rb-base-server/httpError/403.html',\n)\n\nexport function serveAuthenticationFailed( req, res, err, respondWithJSON ) {\n  // Collect information about the request\n  var ip = req.headers['x-real-ip'] || req.connection.remoteAddress\n  const requestDetails = {\n    headers: req.headers,\n    cookies: req.cookies,\n    ip: ip,\n    query: req.body,\n  }\n\n  log.log({\n    level: 'warn',\n    message: 'Checking credentials failed',\n    details: err.message\n      ? { errorMessage: err.message, errorStack: err.stack, requestDetails }\n      : { err, requestDetails },\n  })\n\n  // Expire cookie. This is the only way to 'delete' a cookie\n  res.cookie( 'UserToken1', '', { httpOnly: true, expires: new Date( 1 ) })\n\n  if ( respondWithJSON ) {\n    res.status( 403 ).send( '{ \"error\": \"Authentication Failed\" }' )\n  } else {\n    res.status( 403 ).sendFile( httpError403FileName )\n  }\n}\n"],"file":"checkCredentials.js"}