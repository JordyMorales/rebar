{"version":3,"sources":["../../../units/rb-appbase-server/defaultRequestLoggerAuth.js"],"names":["defaultrequestLoggerAuth","requestAndResponse","logLevel","debugWriteToLogServerRequestAuth","log","level","message","details"],"mappings":";;AAEA;AACA;AACA,yF,8FAJA;;AAMe,SAASA,wBAAT,CAAmCC,kBAAnC,EAAwD;AACrE,MAAIC,QAAQ,GAAG,IAAf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK,2BAAcD,kBAAd,EAAkCE,uCAAlC,CAAL,EAA4E;AAC1ED,IAAAA,QAAQ,GAAG,MAAX;AACD;;AAED,MAAKA,QAAL,EAAgBE,aAAIA,GAAJ,CAAQ,EAAEC,KAAK,EAAEH,QAAT,EAAmBI,OAAO,EAAE,cAA5B,EAA4CC,OAAO,EAAEN,kBAArD,EAAR;AACjB","sourcesContent":["// @flow weak\n\nimport { debugWriteToLogServerRequestAuth } from '../_configuration/debug'\nimport log from '../rb-base-server/log'\nimport matchInDepth from '../rb-base-universal/matchInDepth'\n\nexport default function defaultrequestLoggerAuth( requestAndResponse ) {\n  let logLevel = null\n\n  // TODO: [2 Crossroads][server] Audit errors for Auth and decide which ones to log. For instasnce, 401 is a bad idea.\n  // // If there is an error, log it as an error\n  // if( requestAndResponse.response.indexOf( '\"errors\": [' ) > 0 )\n  //   logLevel = 'error'\n  // Otherwise, if it is a trace, log it as info\n  //else\n  if ( matchInDepth( requestAndResponse, debugWriteToLogServerRequestAuth ) ) {\n    logLevel = 'info'\n  }\n\n  if ( logLevel ) log.log({ level: logLevel, message: 'Auth request', details: requestAndResponse })\n}\n"],"file":"defaultRequestLoggerAuth.js"}