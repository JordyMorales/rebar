{"version":3,"sources":["../../../../../units/rb-appbase-server/graphql/type/ViewerType.js"],"names":["GraphQLObjectType","name","interfaces","NodeInterface","isTypeOf","object","User","fields","id","User_IsAnonymous","type","GraphQLBoolean","resolve","obj","defaultPersister","uuidEquals","uuidNull","UserToken2","GraphQLString","User_DisplayName","User_PrimaryEmail","User_PrimaryPhone","UserPermissionForObjects","UserPermissionForObjectsConnection","connectionType","args","connectionArgs","UserPermissionForObject_ObjectType","GraphQLNonNull","context","rootValue","objectManager","arr","getObjectList_async","UserPermissionForObject","UserPermissionForObjectType","GraphQLID","parent","local_id","uuidFromString","getOneObject_async","_materialized_view","UserQuotaForObjects","UserQuotaForObjectsConnection","UserQuotaForObject","UserQuotaForObjectType","_ViewerFields"],"mappings":"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","sourcesContent":["// @flow\n\nimport {\n  GraphQLBoolean,\n  GraphQLID,\n  GraphQLNonNull,\n  GraphQLString,\n  GraphQLObjectType\n} from 'graphql'\nimport {\n  connectionArgs,\n  connectionFromArray,\n  fromGlobalId,\n  globalIdField\n} from 'graphql-relay'\n\nimport defaultPersister from '../../../_configuration/rb-base-server/graphql/defaultPersister'\nimport NodeInterface from '../NodeInterface'\nimport _ViewerFields from '../../../_configuration/rb-base-server/graphql/_ViewerFields'\nimport User from '../model/User'\n\nimport UserPermissionForObjectsConnection from './UserPermissionForObjectsConnection'\nimport UserPermissionForObjectType from './UserPermissionForObjectType'\nimport UserQuotaForObjectsConnection from './UserQuotaForObjectsConnection'\nimport UserQuotaForObjectType from './UserQuotaForObjectType'\n\nexport default new GraphQLObjectType({\n  name: 'Viewer',\n  interfaces: [NodeInterface],\n  isTypeOf: object => object instanceof User,\n  fields: {\n    id: globalIdField('Viewer'),\n    User_IsAnonymous: {\n      type: GraphQLBoolean,\n      resolve: obj =>\n        defaultPersister.uuidEquals(obj.id, defaultPersister.uuidNull())\n    },\n    UserToken2: { type: GraphQLString, resolve: obj => obj.UserToken2 },\n    User_DisplayName: {\n      type: GraphQLString,\n      resolve: obj => obj.User_DisplayName\n    },\n    User_PrimaryEmail: {\n      type: GraphQLString,\n      resolve: obj => obj.User_PrimaryEmail\n    },\n    User_PrimaryPhone: {\n      type: GraphQLString,\n      resolve: obj => obj.User_PrimaryPhone\n    },\n\n    UserPermissionForObjects: {\n      type: UserPermissionForObjectsConnection.connectionType,\n\n      args: {\n        ...connectionArgs,\n        UserPermissionForObject_ObjectType: {\n          type: new GraphQLNonNull(GraphQLString)\n        }\n      },\n\n      resolve: async(\n        obj,\n        { ...args },\n        context,\n        { rootValue: objectManager }\n      ) => {\n        const { UserPermissionForObject_ObjectType } = args\n        const arr = await objectManager.getObjectList_async(\n          'UserPermissionForObject',\n          {\n            UserPermissionForObject_ObjectType\n          }\n        )\n        return connectionFromArray(arr, args)\n      }\n    },\n\n    UserPermissionForObject: {\n      type: UserPermissionForObjectType,\n\n      args: { ...{ id: { type: GraphQLID } } },\n\n      resolve: async(\n        parent,\n        { id },\n        context,\n        { rootValue: objectManager }\n      ) => {\n        const local_id = objectManager.uuidFromString(\n          'UserPermissionForObject',\n          fromGlobalId(id).id\n        )\n\n        // TODO Materialized view UserPermissionForObject_by_ID does not exist\n        return await objectManager.getOneObject_async(\n          'UserPermissionForObject',\n          {\n            id: local_id,\n            _materialized_view: 'UserPermissionForObject_by_ID'\n          }\n        )\n      }\n    },\n\n    UserQuotaForObjects: {\n      type: UserQuotaForObjectsConnection.connectionType,\n\n      args: { ...connectionArgs },\n\n      resolve: async(\n        obj,\n        { ...args },\n        context,\n        { rootValue: objectManager }\n      ) => {\n        const arr = await objectManager.getObjectList_async(\n          'UserQuotaForObject',\n          {}\n        )\n        return connectionFromArray(arr, args)\n      }\n    },\n\n    UserQuotaForObject: {\n      type: UserQuotaForObjectType,\n\n      args: { ...{ id: { type: GraphQLID } } },\n\n      resolve: async(\n        parent,\n        { id },\n        context,\n        { rootValue: objectManager }\n      ) => {\n        const local_id = objectManager.uuidFromString(\n          'UserQuotaForObject',\n          fromGlobalId(id).id\n        )\n\n        return await objectManager.getOneObject_async('UserQuotaForObject', {\n          id: local_id,\n\n          // TODO Materialized view UserQuotaForObject_by_ID does not exist\n          _materialized_view: 'UserQuotaForObject_by_ID'\n        })\n      }\n    },\n\n    ..._ViewerFields\n  }\n})\n"],"file":"ViewerType.js"}