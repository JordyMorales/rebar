{"version":3,"sources":["../../../units/rb-appbase-server/defaultRequestLoggerGraphQL.js"],"names":["defaultRequestLoggerGraphQL","requestAndResponse","logLevel","response","indexOf","debugWriteToLogServerRequestGraphQL","log","level","message","details"],"mappings":";;AAEA;AACA;AACA,yF,8FAJA;;AAMe,SAASA,2BAAT,CAAsCC,kBAAtC,EAA2D;AACxE,MAAIC,QAAQ,GAAG,IAAf;;AAEA;AACA,MAAKD,kBAAkB,CAACE,QAAnB,CAA4BC,OAA5B,CAAqC,aAArC,IAAuD,CAA5D,EAAgE;AAC9DF,IAAAA,QAAQ,GAAG,OAAX;AACD,GAFD,MAEO;AACL,QAAK,2BAAcD,kBAAd,EAAkCI,0CAAlC,CAAL;AACE;AACAH,MAAAA,QAAQ,GAAG,MAAX;AACH;;AAED,MAAKA,QAAL;AACEI,eAAIA,GAAJ,CAAQ,EAAEC,KAAK,EAAEL,QAAT,EAAmBM,OAAO,EAAE,iBAA5B,EAA+CC,OAAO,EAAER,kBAAxD,EAAR;AACH","sourcesContent":["// @flow weak\n\nimport { debugWriteToLogServerRequestGraphQL } from '../_configuration/debug'\nimport log from '../rb-base-server/log'\nimport matchInDepth from '../rb-base-universal/matchInDepth'\n\nexport default function defaultRequestLoggerGraphQL( requestAndResponse ) {\n  let logLevel = null\n\n  // If there is an error, log it as an error\n  if ( requestAndResponse.response.indexOf( '\"errors\": [' ) > 0 ) {\n    logLevel = 'error'\n  } else {\n    if ( matchInDepth( requestAndResponse, debugWriteToLogServerRequestGraphQL ) )\n      // Otherwise, if it is a trace, log it as info\n      logLevel = 'info'\n  }\n\n  if ( logLevel )\n    log.log({ level: logLevel, message: 'GraphQL request', details: requestAndResponse })\n}\n"],"file":"defaultRequestLoggerGraphQL.js"}