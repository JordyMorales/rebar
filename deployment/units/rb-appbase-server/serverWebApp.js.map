{"version":3,"sources":["../../../units/rb-appbase-server/serverWebApp.js"],"names":["serverWebApp","use","req","res","siteInformation","reqUrl","url","reqUserAgent","headers","reqUserToken1","cookies","UserToken1","content","status","send","htmlContent","redirect","redirectUrl","cookie","httpOnly","expires","Date","ReactDOMServer","renderToString","err"],"mappings":";;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kG;;AAEA;AACA,MAAMA,YAAY,GAAG,uBAArB;;AAEAA,YAAY,CAACC,GAAb,CAAkB,OAAOC,GAAP,EAAYC,GAAZ,KAAqB;AACrC,QAAMC,eAAe,GAAG,MAAM,sCAAoBF,GAApB,EAAyBC,GAAzB,CAA9B;;AAEA,MAAKC,eAAL,EAAuB;AACrB,QAAI;AACF,YAAM,mCAAkBF,GAAlB,EAAuBC,GAAvB,EAA4BC,eAA5B,CAAN;;AAEA,YAAMC,MAAc,GAAGH,GAAG,CAACI,GAA3B;AACA,YAAMC,YAAoB,GAAGL,GAAG,CAACM,OAAJ,CAAY,YAAZ,CAA7B;AACA;AACA;AACA,YAAMC,aAAsB,GAAGP,GAAG,CAACQ,OAAJ,CAAYC,UAA3C;;AAEA,YAAMC,OAAO,GAAG,MAAM;AACpBR,MAAAA,eADoB;AAEpBC,MAAAA,MAFoB;AAGpBE,MAAAA,YAHoB;AAIpBE,MAAAA,aAJoB,CAAtB;;;AAOA,UAAKG,OAAO,CAACC,MAAR,KAAmB,GAAxB,EAA8B;AAC5BV,QAAAA,GAAG,CAACU,MAAJ,CAAY,GAAZ,EAAkBC,IAAlB,CAAwBF,OAAO,CAACG,WAAhC;AACD,OAFD,MAEO,IAAKH,OAAO,CAACC,MAAR,KAAmB,GAAxB,EAA8B;AACnCV,QAAAA,GAAG,CAACa,QAAJ,CAAc,GAAd,EAAmBJ,OAAO,CAACK,WAA3B;AACD,OAFM,MAEA,IAAKL,OAAO,CAACC,MAAR,KAAmB,GAAxB,EAA8B;AACnCV,QAAAA,GAAG,CAACU,MAAJ,CAAY,GAAZ;AACD,OAFM,MAEA,IAAKD,OAAO,CAACC,MAAR,KAAmB,GAAxB,EAA8B;AACnC;AACAV,QAAAA,GAAG,CAACe,MAAJ,CAAY,YAAZ,EAA0B,EAA1B,EAA8B,EAAEC,QAAQ,EAAE,IAAZ,EAAkBC,OAAO,EAAE,IAAIC,IAAJ,CAAU,CAAV,CAA3B,EAA9B;AACA;AACAlB,QAAAA,GAAG,CAACU,MAAJ,CAAY,GAAZ,EAAkBC,IAAlB,CAAwBQ,gBAAeC,cAAf,CAA+B,6BAAC,uBAAD,IAAgB,UAAU,EAAE,GAA5B,GAA/B,CAAxB;AACD;AACF,KA5BD,CA4BE,OAAQC,GAAR,EAAc;AACd,wBAAK,OAAL,EAAc,6CAAd,EAA6D,EAAEA,GAAF,EAA7D;AACArB,MAAAA,GAAG,CAACU,MAAJ,CAAY,GAAZ,EAAkBC,IAAlB,CAAwBQ,gBAAeC,cAAf,CAA+B,6BAAC,uBAAD,IAAgB,UAAU,EAAE,GAA5B,GAA/B,CAAxB;AACD;AACF,GAjCD,MAiCO;AACLpB,IAAAA,GAAG,CAACU,MAAJ,CAAY,GAAZ,EAAkBC,IAAlB,CAAwB,eAAxB;AACD;AACF,CAvCD,E;;AAyCed,Y","sourcesContent":["// @flow\n\nimport express from 'express'\nimport React from 'react'\nimport ReactDOMServer from 'react-dom/server'\n\nimport ErrorComponent from '../_configuration/rb-appbase-webapp/ErrorComponent'\nimport log from '../rb-base-server/log'\nimport { getSiteInformation } from '../_configuration/rb-base-server/siteSettings'\nimport { preRequest_async } from '../_configuration/rb-appbase-server/preRequests'\n\nimport contentCreatorWebApp_async from './contentCreatorWebApp_async'\n\n// Create express router for the web app\nconst serverWebApp = express()\n\nserverWebApp.use( async( req, res ) => {\n  const siteInformation = await getSiteInformation( req, res )\n\n  if ( siteInformation ) {\n    try {\n      await preRequest_async( req, res, siteInformation )\n\n      const reqUrl: string = req.url\n      const reqUserAgent: string = req.headers['user-agent']\n      // Notice that anonymous user creation may 'inject' newly created\n      // UserToken1 into request cookies\n      const reqUserToken1: ?string = req.cookies.UserToken1\n\n      const content = await contentCreatorWebApp_async(\n        siteInformation,\n        reqUrl,\n        reqUserAgent,\n        reqUserToken1,\n      )\n\n      if ( content.status === 200 ) {\n        res.status( 200 ).send( content.htmlContent )\n      } else if ( content.status === 302 ) {\n        res.redirect( 302, content.redirectUrl )\n      } else if ( content.status === 404 ) {\n        res.status( 404 )\n      } else if ( content.status === 403 ) {\n        // Log out for next attempt\n        res.cookie( 'UserToken1', '', { httpOnly: true, expires: new Date( 1 ) })\n        // Return error information\n        res.status( 403 ).send( ReactDOMServer.renderToString( <ErrorComponent httpStatus={403} /> ) )\n      }\n    } catch ( err ) {\n      log( 'error', 'rb-appbase-server serverWebApp.use : Failed', { err })\n      res.status( 500 ).send( ReactDOMServer.renderToString( <ErrorComponent httpStatus={500} /> ) )\n    }\n  } else {\n    res.status( 200 ).send( 'disassociated' )\n  }\n})\n\nexport default serverWebApp\n"],"file":"serverWebApp.js"}