{"version":3,"sources":["../../../units/rb-appbase-server/serverWebApp.js"],"names":["serverWebApp","use","req","res","reqUrl","url","reqUserAgent","headers","reqUserToken1","cookies","UserToken1","siteInformation","content","status","send","htmlContent","redirect","redirectUrl","err","log","level","message","details","ReactDOMServer","renderToString"],"mappings":";;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kG;;AAEA;AACA,MAAMA,YAAY,GAAG,uBAArB;;AAEAA,YAAY,CAACC,GAAb,CAAkB,OAAOC,GAAP,EAAYC,GAAZ,KAAqB;AACrC,QAAMC,MAAc,GAAGF,GAAG,CAACG,GAA3B;AACA,QAAMC,YAAoB,GAAGJ,GAAG,CAACK,OAAJ,CAAY,YAAZ,CAA7B;AACA,QAAMC,aAAsB,GAAGN,GAAG,CAACO,OAAJ,CAAYC,UAA3C;;AAEA,QAAMC,eAAe,GAAG,MAAM,sCAAoBT,GAApB,EAAyBC,GAAzB,CAA9B;;AAEA,MAAKQ,eAAL,EAAuB;AACrB,QAAI;AACF,YAAMC,OAAO,GAAG,MAAM;AACpBD,MAAAA,eADoB;AAEpBP,MAAAA,MAFoB;AAGpBE,MAAAA,YAHoB;AAIpBE,MAAAA,aAJoB,CAAtB;;;AAOA,UAAKI,OAAO,CAACC,MAAR,KAAmB,GAAxB,EAA8B;AAC5BV,QAAAA,GAAG,CAACU,MAAJ,CAAY,GAAZ,EAAkBC,IAAlB,CAAwBF,OAAO,CAACG,WAAhC;AACD,OAFD,MAEO,IAAKH,OAAO,CAACC,MAAR,KAAmB,GAAxB,EAA8B;AACnCV,QAAAA,GAAG,CAACa,QAAJ,CAAc,GAAd,EAAmBJ,OAAO,CAACK,WAA3B;AACD,OAFM,MAEA,IAAKL,OAAO,CAACC,MAAR,KAAmB,GAAxB,EAA8B;AACnCV,QAAAA,GAAG,CAACU,MAAJ,CAAY,GAAZ;AACD;AACF,KAfD,CAeE,OAAQK,GAAR,EAAc;AACdC,mBAAIA,GAAJ,CAAQ,EAAEC,KAAK,EAAE,OAAT,EAAkBC,OAAO,EAAE,iCAA3B,EAA8DC,OAAO,EAAEJ,GAAvE,EAAR;AACAf,MAAAA,GAAG,CAACU,MAAJ,CAAY,GAAZ,EAAkBC,IAAlB,CAAwBS,gBAAeC,cAAf,CAA+B,6BAAC,uBAAD,IAAgB,UAAU,EAAE,GAA5B,GAA/B,CAAxB;AACD;AACF,GApBD,MAoBO;AACLrB,IAAAA,GAAG,CAACU,MAAJ,CAAY,GAAZ,EAAkBC,IAAlB,CAAwB,eAAxB;AACD;AACF,CA9BD,E;;AAgCed,Y","sourcesContent":["// @flow\n\nimport express from 'express'\nimport React from 'react'\nimport ReactDOMServer from 'react-dom/server'\n\nimport ErrorComponent from '../_configuration/rb-appbase-webapp/ErrorComponent'\nimport log from '../rb-base-server/log'\nimport { getSiteInformation } from '../_configuration/rb-base-server/siteSettings'\n\nimport contentCreatorWebApp_async from './contentCreatorWebApp_async'\n\n// Create express router for the web app\nconst serverWebApp = express()\n\nserverWebApp.use( async( req, res ) => {\n  const reqUrl: string = req.url\n  const reqUserAgent: string = req.headers['user-agent']\n  const reqUserToken1: ?string = req.cookies.UserToken1\n\n  const siteInformation = await getSiteInformation( req, res )\n\n  if ( siteInformation ) {\n    try {\n      const content = await contentCreatorWebApp_async(\n        siteInformation,\n        reqUrl,\n        reqUserAgent,\n        reqUserToken1,\n      )\n\n      if ( content.status === 200 ) {\n        res.status( 200 ).send( content.htmlContent )\n      } else if ( content.status === 302 ) {\n        res.redirect( 302, content.redirectUrl )\n      } else if ( content.status === 404 ) {\n        res.status( 404 )\n      }\n    } catch ( err ) {\n      log.log({ level: 'error', message: 'Error: Render on server request', details: err })\n      res.status( 500 ).send( ReactDOMServer.renderToString( <ErrorComponent httpStatus={500} /> ) )\n    }\n  } else {\n    res.status( 200 ).send( 'disassociated' )\n  }\n})\n\nexport default serverWebApp\n"],"file":"serverWebApp.js"}