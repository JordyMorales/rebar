{"version":3,"sources":["../../../../units/urb-example-todo-client/relay/ToDoListUpdateMarkAllMutation.js"],"names":["mutation","commit","environment","user","ToDos","ToDo_Complete","status","variables","input","updater","store","userProxy","get","id","connection","ConnectionHandler","getConnection","ToDosEdges","getRootField","getLinkedRecord","getLinkedRecords","setLinkedRecords","optimisticUpdater","optimisticResponse","payload","Viewer","ToDo_CompletedCount","changedToDos","edges","filter","node","map","ToDo_TotalCount","ToDoListUpdateMarkAll"],"mappings":";;AAEA;AACA,6C,CAHA;;AAKA,MAAMA,iGAAN;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAASC,MAAT,CAAiBC,WAAjB,EAA8BC,IAA9B,EAAoCC,KAApC,EAA2CC,aAA3C,EAA0DC,MAA1D,EAAmE;AACjE,SAAO,gCAAgBJ,WAAhB,EAA6B;AAClCF,YADkC;AAElCO,eAAW;AACTC,aAAO,EAAEH,aAAF,EADE;AAETC,YAFS,EAFuB;;;AAOlCG,YAASC,KAAT,EAAiB;AACf,YAAMC,YAAYD,MAAME,GAAN,CAAWT,KAAKU,EAAhB,CAAlB;AACA,YAAMC,aAAaC,gCAAkBC,aAAlB,CAAiCL,SAAjC,EAA4C,gBAA5C,EAA8D,EAAEL,MAAF,EAA9D,CAAnB;AACA,YAAMW,aAAaP;AAChBQ,kBADgB,CACF,uBADE;AAEhBC,qBAFgB,CAEC,QAFD;AAGhBA,qBAHgB,CAGC,OAHD,EAGU,EAAEb,MAAF,EAHV;AAIhBc,sBAJgB,CAIE,OAJF,CAAnB;AAKAN,iBAAWO,gBAAX,CAA6BJ,UAA7B,EAAyC,OAAzC;AACD,KAhBiC;;AAkBlCK,sBAAmBZ,KAAnB,EAA2B;AACzB,YAAMC,YAAYD,MAAME,GAAN,CAAWT,KAAKU,EAAhB,CAAlB;AACA,YAAMC,aAAaC,gCAAkBC,aAAlB,CAAiCL,SAAjC,EAA4C,gBAA5C,EAA8D,EAAEL,MAAF,EAA9D,CAAnB;;AAEA,UAAOD,iBAAiBC,WAAW,QAA9B,IAA8C,CAACD,aAAD,IAAkBC,WAAW,WAAhF,EAAgG;AAC9FQ,mBAAWO,gBAAX,CAA4B,EAA5B,EAAgC,OAAhC;AACD;AACF,KAzBiC;;AA2BlCE,yBAAqB;AACnB,YAAMC,UAAU;AACdC,gBAAQ;AACNZ,cAAIV,KAAKU,EADH;AAENa,+BAAqB,CAFf,EADM;;AAKdC,sBAAc,IALA,EAAhB;;;AAQA,UAAKvB,SAASA,MAAMwB,KAApB,EAA4B;AAC1BJ,gBAAQG,YAAR,GAAuBvB,MAAMwB,KAAN;AACpBC,cADoB,CACZ,CAAC,EAAEC,IAAF,EAAD,KAAcA,KAAKzB,aAAL,KAAuBA,aADzB;AAEpB0B,WAFoB,CAEf,CAAC,EAAED,IAAF,EAAD,MAAe,EAAEjB,IAAIiB,KAAKjB,EAAX,EAAeR,aAAf,EAAf,CAFe,CAAvB;AAGD;;AAED,UAAKA,aAAL,EAAqB;AACnB,YAAKF,KAAK6B,eAAL,IAAwB,IAA7B,EAAoC;AAClCR,kBAAQC,MAAR,CAAeC,mBAAf,GAAqCvB,KAAK6B,eAA1C;AACD;AACF,OAJD,MAIO;AACLR,gBAAQC,MAAR,CAAeC,mBAAf,GAAqC,CAArC;AACD;;AAED,aAAO;AACLO,+BAAuBT,OADlB,EAAP;;AAGD,KArDiC,EAA7B,CAAP;;AAuDD,C;;AAEc,EAAEvB,MAAF,E","file":"ToDoListUpdateMarkAllMutation.js","sourcesContent":["// @flow weak\n\nimport { commitMutation, graphql } from 'react-relay'\nimport { ConnectionHandler } from 'relay-runtime'\n\nconst mutation = graphql`\n  mutation ToDoListUpdateMarkAllMutation($input: ToDoListUpdateMarkAllInput!, $status: String!) {\n    ToDoListUpdateMarkAll(input: $input) {\n      Viewer {\n        ToDos(status: $status) {\n          edges {\n            node {\n              id\n              ToDo_Complete\n              ToDo_Text\n            }\n          }\n        }\n        id\n        ToDo_CompletedCount\n      }\n      changedToDos {\n        id\n        ToDo_Complete\n      }\n    }\n  }\n`\n\nfunction commit( environment, user, ToDos, ToDo_Complete, status ) {\n  return commitMutation( environment, {\n    mutation,\n    variables: {\n      input: { ToDo_Complete },\n      status,\n    },\n\n    updater( store ) {\n      const userProxy = store.get( user.id )\n      const connection = ConnectionHandler.getConnection( userProxy, 'ToDoList_ToDos', { status })\n      const ToDosEdges = store\n        .getRootField( 'ToDoListUpdateMarkAll' )\n        .getLinkedRecord( 'Viewer' )\n        .getLinkedRecord( 'ToDos', { status })\n        .getLinkedRecords( 'edges' )\n      connection.setLinkedRecords( ToDosEdges, 'edges' )\n    },\n\n    optimisticUpdater( store ) {\n      const userProxy = store.get( user.id )\n      const connection = ConnectionHandler.getConnection( userProxy, 'ToDoList_ToDos', { status })\n\n      if ( ( ToDo_Complete && status === 'active' ) || ( !ToDo_Complete && status === 'completed' ) ) {\n        connection.setLinkedRecords([], 'edges' )\n      }\n    },\n\n    optimisticResponse() {\n      const payload = {\n        Viewer: {\n          id: user.id,\n          ToDo_CompletedCount: 0,\n        },\n        changedToDos: null,\n      }\n\n      if ( ToDos && ToDos.edges ) {\n        payload.changedToDos = ToDos.edges\n          .filter( ({ node }) => node.ToDo_Complete !== ToDo_Complete )\n          .map( ({ node }) => ({ id: node.id, ToDo_Complete }) )\n      }\n\n      if ( ToDo_Complete ) {\n        if ( user.ToDo_TotalCount != null ) {\n          payload.Viewer.ToDo_CompletedCount = user.ToDo_TotalCount\n        }\n      } else {\n        payload.Viewer.ToDo_CompletedCount = 0\n      }\n\n      return {\n        ToDoListUpdateMarkAll: payload,\n      }\n    },\n  })\n}\n\nexport default { commit }\n"]}