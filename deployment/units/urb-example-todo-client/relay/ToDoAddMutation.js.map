{"version":3,"sources":["../../../../units/urb-example-todo-client/relay/ToDoAddMutation.js"],"names":["mutation","sharedUpdater","store","user","ToDosEdge","userProxy","get","id","forEach","status","connection","ConnectionHandler","getConnection","insertEdgeAfter","nextClientMutationId","commit","environment","ToDo_Text","clientMutationId","variables","input","updater","payload","getRootField","getLinkedRecord","optimisticUpdater","aToDo","create","setValue","setLinkedRecord","ToDo_TotalCount","getValue"],"mappings":";;AAEA;AACA,6C,CAHA;;AAKA,MAAMA,mFAAN;;;;;;;;;;;;;;;;;;;AAmBA,SAASC,aAAT,CAAwBC,KAAxB,EAA+BC,IAA/B,EAAqCC,SAArC,EAAiD;AAC/C,QAAMC,YAAYH,MAAMI,GAAN,CAAWH,KAAKI,EAAhB,CAAlB;AACC,GAAE,KAAF,EAAS,QAAT,EAAoBC,OAApB,CAA6BC,UAAU;AACtC,UAAMC,aAAaC,gCAAkBC,aAAlB,CAAiCP,SAAjC,EAA4C,gBAA5C,EAA8D,EAAEI,MAAF,EAA9D,CAAnB;AACA,QAAKC,UAAL,EAAkB;AAChBC,sCAAkBE,eAAlB,CAAmCH,UAAnC,EAA+CN,SAA/C;AACD;AACF,GALA;AAMF;;AAED,IAAIU,uBAAuB,CAA3B;;AAEA,SAASC,MAAT,CAAiBC,WAAjB,EAA8Bb,IAA9B,EAAoCc,SAApC,EAAgD;AAC9C,QAAMC,mBAAmBJ,sBAAzB;;AAEA,SAAO,gCAAgBE,WAAhB,EAA6B;AAClChB,YADkC;AAElCmB,eAAW;AACTC,aAAO,EAAEH,SAAF,EAAaC,gBAAb,EADE,EAFuB;;;AAMlCG,YAASnB,KAAT,EAAiB;AACf,YAAMoB,UAAUpB,MAAMqB,YAAN,CAAoB,SAApB,CAAhB;AACAtB,oBAAeC,KAAf,EAAsBC,IAAtB,EAA4BmB,QAAQE,eAAR,CAAyB,WAAzB,CAA5B;AACD,KATiC;;AAWlCC,sBAAmBvB,KAAnB,EAA2B;AACzB,YAAMK,KAAM,uBAAsBW,gBAAiB,EAAnD;AACA,YAAMQ,QAAQxB,MAAMyB,MAAN,CAAcpB,EAAd,EAAkB,MAAlB,CAAd;AACAmB,YAAME,QAAN,CAAgBX,SAAhB,EAA2B,WAA3B;AACAS,YAAME,QAAN,CAAgBrB,EAAhB,EAAoB,IAApB;;AAEA,YAAMH,YAAYF,MAAMyB,MAAN,CAAe,4BAA2BT,gBAAiB,EAA3D,EAA8D,WAA9D,CAAlB;AACAd,gBAAUyB,eAAV,CAA2BH,KAA3B,EAAkC,MAAlC;;AAEAzB,oBAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,SAA5B;;AAEA,YAAMC,YAAYH,MAAMI,GAAN,CAAWH,KAAKI,EAAhB,CAAlB;AACA,YAAMuB,kBAAkBzB,UAAU0B,QAAV,CAAoB,iBAApB,CAAxB;AACA,UAAKD,mBAAmB,IAAxB,EAA+B;AAC7BzB,kBAAUuB,QAAV,CAAoBE,kBAAkB,CAAtC,EAAyC,iBAAzC;AACD;AACF,KA3BiC,EAA7B,CAAP;;AA6BD,C;;AAEc,EAAEf,MAAF,E","file":"ToDoAddMutation.js","sourcesContent":["// @flow weak\n\nimport { commitMutation, graphql } from 'react-relay'\nimport { ConnectionHandler } from 'relay-runtime'\n\nconst mutation = graphql`\n  mutation ToDoAddMutation($input: ToDoAddInput!) {\n    ToDoAdd(input: $input) {\n      Viewer {\n        id\n        ToDo_TotalCount\n      }\n      ToDosEdge {\n        cursor\n        node {\n          id\n          ToDo_Complete\n          ToDo_Text\n        }\n      }\n    }\n  }\n`\n\nfunction sharedUpdater( store, user, ToDosEdge ) {\n  const userProxy = store.get( user.id )\n  ;[ 'any', 'active' ].forEach( status => {\n    const connection = ConnectionHandler.getConnection( userProxy, 'ToDoList_ToDos', { status })\n    if ( connection ) {\n      ConnectionHandler.insertEdgeAfter( connection, ToDosEdge )\n    }\n  })\n}\n\nlet nextClientMutationId = 0\n\nfunction commit( environment, user, ToDo_Text ) {\n  const clientMutationId = nextClientMutationId++\n\n  return commitMutation( environment, {\n    mutation,\n    variables: {\n      input: { ToDo_Text, clientMutationId },\n    },\n\n    updater( store ) {\n      const payload = store.getRootField( 'ToDoAdd' )\n      sharedUpdater( store, user, payload.getLinkedRecord( 'ToDosEdge' ) )\n    },\n\n    optimisticUpdater( store ) {\n      const id = `client:ToDoAdd:ToDo:${clientMutationId}`\n      const aToDo = store.create( id, 'ToDo' )\n      aToDo.setValue( ToDo_Text, 'ToDo_Text' )\n      aToDo.setValue( id, 'id' )\n\n      const ToDosEdge = store.create( `client:ToDoAdd:ToDosEdge:${clientMutationId}`, 'ToDosEdge' )\n      ToDosEdge.setLinkedRecord( aToDo, 'node' )\n\n      sharedUpdater( store, user, ToDosEdge )\n\n      const userProxy = store.get( user.id )\n      const ToDo_TotalCount = userProxy.getValue( 'ToDo_TotalCount' )\n      if ( ToDo_TotalCount != null ) {\n        userProxy.setValue( ToDo_TotalCount + 1, 'ToDo_TotalCount' )\n      }\n    },\n  })\n}\n\nexport default { commit }\n"]}