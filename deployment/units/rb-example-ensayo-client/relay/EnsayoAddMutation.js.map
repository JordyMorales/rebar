{"version":3,"sources":["../../../../units/rb-example-ensayo-client/relay/EnsayoAddMutation.js"],"names":["mutation","sharedUpdater","store","user","EnsayosEdge","userProxy","get","id","connection","ConnectionHandler","getConnection","insertEdgeAfter","nextClientMutationId","commit","environment","Ensayo_Title","Ensayo_Description","Ensayo_Content","clientMutationId","variables","input","updater","payload","getRootField","getLinkedRecord","optimisticUpdater","aEnsayo","create","setValue","setLinkedRecord"],"mappings":";;AAEA;AACA,6C,CAHA;;AAKA,MAAMA,QAAQ,6EAAd;;;;;;;;;;;;;;;;;;;AAmBA,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,WAApC,EAAiD;AAC/C,QAAMC,SAAS,GAAGH,KAAK,CAACI,GAAN,CAAUH,IAAI,CAACI,EAAf,CAAlB;;AAEA,QAAMC,UAAU,GAAGC,gCAAkBC,aAAlB;AACjBL,EAAAA,SADiB;AAEjB,sBAFiB,CAAnB;;AAIA,MAAIG,UAAJ,EAAgB;AACdC,oCAAkBE,eAAlB,CAAkCH,UAAlC,EAA8CJ,WAA9C;AACD;AACF;;AAED,IAAIQ,oBAAoB,GAAG,CAA3B;;AAEA,SAASC,MAAT;AACEC,WADF;AAEEX,IAFF;AAGEY,YAHF;AAIEC,kBAJF;AAKEC,cALF;AAME;AACA,QAAMC,gBAAgB,GAAGN,oBAAoB,EAA7C;;AAEA,SAAO,gCAAeE,WAAf,EAA4B;AACjCd,IAAAA,QADiC;AAEjCmB,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AACLL,QAAAA,YADK;AAELC,QAAAA,kBAFK;AAGLC,QAAAA,cAHK;AAILC,QAAAA,gBAAgB,EAAG,GAAEA,gBAAiB,EAJjC,EADE,EAFsB;;;;AAWjCG,IAAAA,OAAO,CAACnB,KAAD,EAAQ;AACb,YAAMoB,OAAO,GAAGpB,KAAK,CAACqB,YAAN,CAAmB,WAAnB,CAAhB;AACAtB,MAAAA,aAAa,CAACC,KAAD,EAAQC,IAAR,EAAcmB,OAAO,CAACE,eAAR,CAAwB,aAAxB,CAAd,CAAb;AACD,KAdgC;;AAgBjCC,IAAAA,iBAAiB,CAACvB,KAAD,EAAQ;AACvB,YAAMK,EAAE,GAAI,2BAA0BW,gBAAiB,EAAvD;AACA,YAAMQ,OAAO,GAAGxB,KAAK,CAACyB,MAAN,CAAapB,EAAb,EAAiB,QAAjB,CAAhB;AACAmB,MAAAA,OAAO,CAACE,QAAR,CAAiBb,YAAjB,EAA+B,cAA/B;AACAW,MAAAA,OAAO,CAACE,QAAR,CAAiBZ,kBAAjB,EAAqC,oBAArC;AACAU,MAAAA,OAAO,CAACE,QAAR,CAAiBX,cAAjB,EAAiC,gBAAjC;AACAS,MAAAA,OAAO,CAACE,QAAR,CAAiBrB,EAAjB,EAAqB,IAArB;;AAEA,YAAMH,WAAW,GAAGF,KAAK,CAACyB,MAAN;AACjB,sCAA+BT,gBAAiB,EAD/B;AAElB,mBAFkB,CAApB;;AAIAd,MAAAA,WAAW,CAACyB,eAAZ,CAA4BH,OAA5B,EAAqC,MAArC;;AAEAzB,MAAAA,aAAa,CAACC,KAAD,EAAQC,IAAR,EAAcC,WAAd,CAAb;AACD,KA/BgC,EAA5B,CAAP;;AAiCD,C;;AAEc,EAAES,MAAF,E","sourcesContent":["// @flow weak\n\nimport { commitMutation, graphql } from 'react-relay'\nimport { ConnectionHandler } from 'relay-runtime'\n\nconst mutation = graphql`\n  mutation EnsayoAddMutation($input: EnsayoAddInput!) {\n    EnsayoAdd(input: $input) {\n      Viewer {\n        id\n      }\n      EnsayosEdge {\n        cursor\n        node {\n          id\n          Ensayo_Title\n          Ensayo_Description\n          Ensayo_Content\n        }\n      }\n    }\n  }\n`\n\nfunction sharedUpdater(store, user, EnsayosEdge) {\n  const userProxy = store.get(user.id)\n\n  const connection = ConnectionHandler.getConnection(\n    userProxy,\n    'EnsayoList_Ensayos',\n  )\n  if (connection) {\n    ConnectionHandler.insertEdgeAfter(connection, EnsayosEdge)\n  }\n}\n\nlet nextClientMutationId = 0\n\nfunction commit(\n  environment,\n  user,\n  Ensayo_Title,\n  Ensayo_Description,\n  Ensayo_Content,\n) {\n  const clientMutationId = nextClientMutationId++\n\n  return commitMutation(environment, {\n    mutation,\n    variables: {\n      input: {\n        Ensayo_Title,\n        Ensayo_Description,\n        Ensayo_Content,\n        clientMutationId: `${clientMutationId}`,\n      },\n    },\n\n    updater(store) {\n      const payload = store.getRootField('EnsayoAdd')\n      sharedUpdater(store, user, payload.getLinkedRecord('EnsayosEdge'))\n    },\n\n    optimisticUpdater(store) {\n      const id = `client:EnsayoAdd:Ensayo:${clientMutationId}`\n      const aEnsayo = store.create(id, 'Ensayo')\n      aEnsayo.setValue(Ensayo_Title, 'Ensayo_Title')\n      aEnsayo.setValue(Ensayo_Description, 'Ensayo_Description')\n      aEnsayo.setValue(Ensayo_Content, 'Ensayo_Content')\n      aEnsayo.setValue(id, 'id')\n\n      const EnsayosEdge = store.create(\n        `client:EnsayoAdd:EnsayosEdge:${clientMutationId}`,\n        'EnsayosEdge',\n      )\n      EnsayosEdge.setLinkedRecord(aEnsayo, 'node')\n\n      sharedUpdater(store, user, EnsayosEdge)\n    },\n  })\n}\n\nexport default { commit }\n"],"file":"EnsayoAddMutation.js"}