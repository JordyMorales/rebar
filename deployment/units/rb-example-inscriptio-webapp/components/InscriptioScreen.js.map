{"version":3,"sources":["../../../../units/rb-example-inscriptio-webapp/components/InscriptioScreen.jsx"],"names":["MapComponent","props","defaultZoom","center","markers","map","marker","index","position","styles","card","minWidth","minHeight","InscriptioScreen","React","Component","constructor","context","isUnmounted","state","lat","lng","render","classes","siteConfiguration","googleMapURL","webapp","api","googleMapsJavascriptAPI","height"],"mappings":";;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,+H;;AAEA,MAAMA,YAAY,GAAG;AACnB,oCAAeC,KAAK;AAClB,6BAAC,0BAAD,IAAW,WAAW,EAAEA,KAAK,CAACC,WAA9B,EAA2C,MAAM,EAAED,KAAK,CAACE,MAAzD;AACGF,KAAK,CAACG,OAAN,CAAcC,GAAd,CAAmB,CAAEC,MAAF,EAAUC,KAAV;AAClB,6BAAC,uBAAD,IAAQ,GAAG,EAAEA,KAAb,EAAoB,QAAQ,EAAED,MAAM,CAACE,QAArC,GADD,CADH,CADF,CADmB,CAArB;;;;;;AAUA,MAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,GADN;AAEJC,IAAAA,SAAS,EAAE,GAFP,EADO,EAAf;;;;AAOA,MAAMC,gBAAN,SAA+BC,eAAMC,SAArC,CAA4F;AAC1FC,EAAAA,WAAW,CAAEf,KAAF,EAAiBgB,OAAjB,EAAmC;AAC5C,UAAOhB,KAAP,EAAcgB,OAAd,EAD4C;;;;;;;;;;;AAY9CC,IAAAA,WAZ8C,GAYhC,KAZgC,CAG5C,KAAKC,KAAL,GAAa,EACXhB,MAAM,EAAE,EACNiB,GAAG,EAAE,OADC,EAENC,GAAG,EAAE,CAAC,OAFA,EADG,EAKXjB,OAAO,EAAE,EALE,EAAb,CAOD;;AAIDkB,EAAAA,MAAM,GAAG;AACP,UAAM,EAAEC,OAAF,KAAc,KAAKtB,KAAzB;;AAEA;AACE,mCAAC,8BAAD;AACE,mCAAC,aAAD,IAAM,SAAS,EAAEsB,OAAO,CAACb,IAAzB;AACE,mCAAC,mBAAD,IAAY,KAAK,EAAC,YAAlB,GADF;AAEE,mCAAC,oBAAD;AACE,mCAAC,iCAAD,CAA0B,QAA1B;AACGc,MAAAA,iBAAiB,IAAI;AACpB;AACA,cAAMC,YAAY,GAAGD,iBAAiB,CAACE,MAAlB,CAAyBC,GAAzB,CAA6BC,uBAAlD;AACA;AACE,uCAAC,YAAD;AACE,YAAA,WAAW,EAAE,EADf;AAEE,YAAA,MAAM,EAAE,KAAKT,KAAL,CAAWhB,MAFrB;AAGE,YAAA,OAAO,EAAC,cAHV;AAIE,YAAA,YAAY,EAAEsB,YAJhB;AAKE,YAAA,OAAO,EAAE,KAAKN,KAAL,CAAWf,OALtB;AAME,YAAA,cAAc,EAAE,uDANlB;AAOE,YAAA,gBAAgB,EAAE,sCAAK,KAAK,EAAE,EAAEyB,MAAM,EAAE,GAAV,EAAZ,GAPpB;AAQE,YAAA,UAAU,EAAE,sCAAK,KAAK,EAAE,EAAEA,MAAM,EAAE,GAAV,EAAZ,GARd,GADF;;;AAYD,OAhBH,CADF,CAFF,CADF,CADF;;;;;;AA2BD,GA7CyF,C;;;AAgD7E;AACb,wBAAYpB,MAAZ,EAAsBI,gBAAtB,CADa,+F","sourcesContent":["// @flow\n\nimport Card from '@material-ui/core/Card'\n\nimport CardContent from '@material-ui/core/CardContent'\n\nimport CardHeader from '@material-ui/core/CardHeader'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport React from 'react'\nimport { GoogleMap, Marker, withGoogleMap, withScriptjs } from 'react-google-maps'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport ResponsiveContentArea from '../../rb-appbase-webapp/components/ResponsiveContentArea'\nimport SiteConfigurationContext from '../../rb-appbase-webapp/components/SiteConfigurationContext'\n\nconst MapComponent = withScriptjs(\n  withGoogleMap( props => (\n    <GoogleMap defaultZoom={props.defaultZoom} center={props.center}>\n      {props.markers.map( ( marker, index ) => (\n        <Marker key={index} position={marker.position} />\n      ) )}\n    </GoogleMap>\n  ) ),\n)\n\nconst styles = {\n  card: {\n    minWidth: 275,\n    minHeight: 400,\n  },\n}\n\nclass InscriptioScreen extends React.Component<{ classes: Object, Viewer: Object }, Object> {\n  constructor( props: Object, context: Object ) {\n    super( props, context )\n\n    this.state = {\n      center: {\n        lat: 34.0522,\n        lng: -118.243,\n      },\n      markers: [],\n    }\n  }\n\n  isUnmounted = false\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <ResponsiveContentArea>\n        <Card className={classes.card}>\n          <CardHeader title=\"Inscriptio\" />\n          <CardContent>\n            <SiteConfigurationContext.Consumer>\n              {siteConfiguration => {\n                // $AssureFlow\n                const googleMapURL = siteConfiguration.webapp.api.googleMapsJavascriptAPI\n                return (\n                  <MapComponent\n                    defaultZoom={16}\n                    center={this.state.center}\n                    content=\"Content here\"\n                    googleMapURL={googleMapURL}\n                    markers={this.state.markers}\n                    loadingElement={<div>Loading...</div>}\n                    containerElement={<div style={{ height: 400 }} />}\n                    mapElement={<div style={{ height: 400 }} />}\n                  />\n                )\n              }}\n            </SiteConfigurationContext.Consumer>\n          </CardContent>\n        </Card>\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles( styles )( InscriptioScreen ),\n  graphql`\n    fragment InscriptioScreen_Viewer on Viewer {\n      Inscriptios(first: 2147483647) @connection(key: \"InscriptioScreen_Inscriptios\") {\n        edges {\n          node {\n            id\n            Inscriptio_LocationLat\n            Inscriptio_LocationLon\n          }\n        }\n      }\n    }\n  `,\n)\n"],"file":"InscriptioScreen.js"}