{"version":3,"sources":["../../../../units/rb-account-management-webapp/components/NewUserScreen.jsx"],"names":["validateEmail","accountIdentifier","reEmail","test","styles","card","minWidth","userName","borderWidth","borderColor","fontWeight","paddingLeft","paddingRight","NewUserScreen","React","Component","constructor","props","context","_handle_onClick_Create","UserAccount_Identifier","User_Secret","state","setState","currentOperation","loc","window","location","host","protocol","hostname","port","response","fetch","method","credentials","headers","body","JSON","stringify","responseData","json","success","executionStatus","error","err","message","_handle_onClick_CancelCreation","_handle_onClick_TryAgain","_handle_onClick_Continue","replace","_handle_onChange_Identifier","event","target","value","UserAccount_IdentifierValidity","_handle_onUpdateSecret","secret","renderCreating","classes","renderSuccess","renderFailure","renderPrompt","createDisabled","render"],"mappings":"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","sourcesContent":["// @flow\n\nimport Button from '@material-ui/core/Button'\n\nimport Card from '@material-ui/core/Card'\n\nimport CardActions from '@material-ui/core/CardActions'\n\nimport CardContent from '@material-ui/core/CardContent'\n\nimport CardHeader from '@material-ui/core/CardHeader'\n\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport TextField from '@material-ui/core/TextField'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport React from 'react'\n\nimport ResponsiveContentArea from '../../rb-appbase-webapp/components/ResponsiveContentArea'\n\nimport NewUserSecretInput from './NewUserSecretInput'\n\n//\n\nexport function validateEmail( accountIdentifier: string ) {\n  // eslint-disable-next-line no-control-regex\n  const reEmail = /^([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22))*\\x40([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d))*$/\n  return reEmail.test( accountIdentifier )\n}\n\n//\n\nconst styles = {\n  card: {\n    minWidth: 320,\n  },\n  userName: {\n    borderWidth: 1,\n    borderColor: '#c0c0c0',\n    fontWeight: 'bold',\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n}\n\n//\n\nclass NewUserScreen extends React.Component<\n  {\n    classes: Object,\n  },\n  {\n    currentOperation: 'prompt' | 'creating' | 'success' | 'failure',\n    executionStatus: string,\n    UserAccount_Identifier: string,\n    UserAccount_IdentifierValidity: boolean,\n    User_Secret: string,\n  }\n> {\n  constructor( props: Object, context: Object ) {\n    super( props, context )\n\n    this.state = {\n      currentOperation: 'prompt',\n      executionStatus: '',\n      UserAccount_Identifier: '',\n      UserAccount_IdentifierValidity: false,\n      User_Secret: '',\n    }\n  }\n\n  _handle_onClick_Create = async() => {\n    const { UserAccount_Identifier, User_Secret } = this.state\n\n    this.setState({\n      currentOperation: 'creating',\n      User_Secret: '', // In order to prevent the password from being accessed later\n    })\n\n    try {\n      const loc = window.location\n      const host = loc.protocol + '//' + loc.hostname + ':' + loc.port\n\n      const response = await fetch( host + '/auth/createuser', {\n        method: 'POST',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          UserAccount_Identifier: UserAccount_Identifier,\n          User_Secret: User_Secret,\n        }),\n      })\n\n      const responseData = await response.json()\n\n      if ( responseData.success ) {\n        // In case of success, notify user\n        this.setState({ currentOperation: 'success' })\n      } else {\n        // In case of error, tell user what the error is\n        this.setState({\n          currentOperation: 'failure',\n          executionStatus: responseData.error,\n        })\n      }\n    } catch ( err ) {\n      // In case response could not be received properly, tell the user\n      // In case of error, tell user what the error is\n      this.setState({\n        currentOperation: 'failure',\n        executionStatus:\n          'Did not receive proper response from server. Please try again. Message:' +\n          err.message,\n      })\n    }\n  }\n\n  _handle_onClick_CancelCreation = () => {\n    this.setState({\n      currentOperation: 'failure',\n      executionStatus: 'User creation has been canceled',\n    })\n  }\n\n  _handle_onClick_TryAgain = () => {\n    this.setState({\n      currentOperation: 'prompt',\n      executionStatus: '',\n    })\n  }\n\n  _handle_onClick_Continue = () => {\n    window.location.replace( '/' )\n  }\n\n  renderCreating() {\n    const { classes } = this.props\n    const { UserAccount_Identifier } = this.state\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader title=\"Creating user\" />\n        <CardContent>\n          <Typography component=\"p\">\n            Creating user\n            <span className={classes.userName}>{UserAccount_Identifier}</span>,\n            please wait.\n          </Typography>\n          <br />\n          <br />\n          <LinearProgress mode=\"query\" />\n        </CardContent>\n        <CardActions>\n          <Button onClick={this._handle_onClick_CancelCreation}>Cancel</Button>\n        </CardActions>\n      </Card>\n    )\n  }\n\n  renderSuccess() {\n    const { classes } = this.props\n    const { UserAccount_Identifier } = this.state\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader title=\"Creating user\" />\n        <CardContent>\n          <Typography component=\"p\">\n            Created user\n            <span className={classes.userName}>{UserAccount_Identifier}</span>.\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button onClick={this._handle_onClick_Continue}>Continue</Button>\n        </CardActions>\n      </Card>\n    )\n  }\n\n  renderFailure() {\n    const { classes } = this.props\n    const { UserAccount_Identifier, executionStatus } = this.state\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader title=\"Creating user\" />\n        <CardContent>\n          <Typography component=\"p\">\n            Failed creating user\n            <span className={classes.userName}>{UserAccount_Identifier}</span>\n            because {executionStatus}.\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button onClick={this._handle_onClick_TryAgain}>Try Again</Button>\n        </CardActions>\n      </Card>\n    )\n  }\n\n  _handle_onChange_Identifier = event => {\n    const UserAccount_Identifier = event.target.value\n    const UserAccount_IdentifierValidity = validateEmail( UserAccount_Identifier )\n\n    this.setState({ UserAccount_Identifier, UserAccount_IdentifierValidity })\n  }\n\n  _handle_onUpdateSecret = secret => {\n    this.setState({ User_Secret: secret })\n  }\n\n  renderPrompt() {\n    const { classes } = this.props\n    const {\n      UserAccount_Identifier,\n      UserAccount_IdentifierValidity,\n      User_Secret,\n    } = this.state\n\n    // User account identifier must be valid and secret must be present\n    const createDisabled = !UserAccount_IdentifierValidity || User_Secret === ''\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader title=\"Create New User\" />\n        <CardContent>\n          <TextField\n            autoComplete=\"username\"\n            fullWidth={true}\n            label=\"E-Mail Address\"\n            margin=\"normal\"\n            value={UserAccount_Identifier}\n            variant=\"outlined\"\n            onChange={this._handle_onChange_Identifier}\n          />\n\n          <br />\n          <br />\n\n          <NewUserSecretInput onUpdateSecret={this._handle_onUpdateSecret} />\n        </CardContent>\n        <CardActions>\n          <Button\n            disabled={createDisabled}\n            onClick={this._handle_onClick_Create}\n          >\n            Create\n          </Button>\n        </CardActions>\n      </Card>\n    )\n  }\n\n  render() {\n    const { currentOperation } = this.state\n\n    return (\n      <ResponsiveContentArea>\n        {currentOperation === 'prompt' && this.renderPrompt()}\n        {currentOperation === 'creating' && this.renderCreating()}\n        {currentOperation === 'success' && this.renderSuccess()}\n        {currentOperation === 'failure' && this.renderFailure()}\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default withStyles( styles )( NewUserScreen )\n"],"file":"NewUserScreen.js"}