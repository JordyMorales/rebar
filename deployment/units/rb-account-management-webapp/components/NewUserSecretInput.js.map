{"version":3,"sources":["../../../../units/rb-account-management-webapp/components/NewUserSecretInput.jsx"],"names":["scoreSecret","secret","uniqueLettersAwardUntilRepetitions","variationAwardCoefficient","score","letters","i","length","variations","digits","test","lower","upper","nonWords","variationCount","check","styles","strengthColorPrimary","backgroundColor","strengthBarColorPrimary_poor","strengthBarColorPrimary_fair","strengthBarColorPrimary_good","NewUserSecretInput","React","Component","constructor","props","context","_handle_onChange_Secret","event","userSecret","target","value","setState","updateErrorAndValue","state","userSecretConfirm","_handle_onChange_SecretConfirm","userSecretPrompt","userSecretStrength","userSecretQuality","bPasswordsMatch","determinedValue","userSecretStrengthGood","userSecretStrengthFair","onUpdateSecret","render","classes","colorPrimary","barColorPrimary"],"mappings":";;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,oG;;;;;;;AAOA;;AAEA,SAASA,WAAT;AACEC,MADF;AAEEC,kCAFF;AAGEC,yBAHF;AAIE;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAK,CAACH,MAAN,EAAe,OAAO,CAAP;;AAEf;AACA,MAAII,OAAe,GAAG,EAAtB;AACA,OAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGL,MAAM,CAACM,MAA5B,EAAoCD,CAAC,EAArC,EAA0C;AACxCD,IAAAA,OAAO,CAACJ,MAAM,CAACK,CAAD,CAAP,CAAP,GAAqB,CAAED,OAAO,CAACJ,MAAM,CAACK,CAAD,CAAP,CAAP,IAAsB,CAAxB,IAA8B,CAAnD;AACAF,IAAAA,KAAK,IAAIF,kCAAkC,GAAGG,OAAO,CAACJ,MAAM,CAACK,CAAD,CAAP,CAArD;AACD;;AAED;AACA,MAAIE,UAAU,GAAG;AACfC,IAAAA,MAAM,EAAE,KAAKC,IAAL,CAAWT,MAAX,CADO;AAEfU,IAAAA,KAAK,EAAE,QAAQD,IAAR,CAAcT,MAAd,CAFQ;AAGfW,IAAAA,KAAK,EAAE,QAAQF,IAAR,CAAcT,MAAd,CAHQ;AAIfY,IAAAA,QAAQ,EAAE,KAAKH,IAAL,CAAWT,MAAX,CAJK,EAAjB;;;AAOA,MAAIa,cAAc,GAAG,CAArB;AACA,OAAM,IAAIC,KAAV,IAAmBP,UAAnB;AACEM,EAAAA,cAAc,IAAIN,UAAU,CAACO,KAAD,CAAV,KAAsB,IAAtB,GAA6B,CAA7B,GAAiC,CAAnD;;AAEFX,EAAAA,KAAK,IAAI,CAAEU,cAAc,GAAG,CAAnB,IAAyBX,yBAAlC;;AAEA,SAAOC,KAAP;AACD;;AAED;;AAEA,MAAMY,MAAM,GAAG;AACbC,EAAAA,oBAAoB,EAAE;AACpBC,IAAAA,eAAe,EAAE,SADG,EADT;;;AAKbC,EAAAA,4BAA4B,EAAE;AAC5BD,IAAAA,eAAe,EAAE,SADW,EALjB;;AAQbE,EAAAA,4BAA4B,EAAE;AAC5BF,IAAAA,eAAe,EAAE,SADW,EARjB;;AAWbG,EAAAA,4BAA4B,EAAE;AAC5BH,IAAAA,eAAe,EAAE,SADW;;;;AAKhC;AAhBe,CAAf;AAkBA,MAAMI,kBAAN,SAAiCC,eAAMC;;;;;;;;;AASrC;AACAC,EAAAA,WAAW,CAAEC,KAAF,EAAcC,OAAd,EAA6B;AACtC,UAAOD,KAAP,EAAcC,OAAd,EADsC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDxCC,IAAAA,uBApDwC,GAoDdC,KAAK,IAAI;AACjC,YAAMC,UAAU,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAhC;;AAEA,WAAKC,QAAL,CAAc,EAAEH,UAAF,EAAd;;AAEA,WAAKI,mBAAL,CAA0BJ,UAA1B,EAAsC,KAAKK,KAAL,CAAWC,iBAAjD;AACD,KA1DuC;;AA4DxCC,IAAAA,8BA5DwC,GA4DPR,KAAK,IAAI;AACxC,YAAMO,iBAAiB,GAAGP,KAAK,CAACE,MAAN,CAAaC,KAAvC;;AAEA,WAAKC,QAAL,CAAc,EAAEG,iBAAF,EAAd;;AAEA,WAAKF,mBAAL,CAA0B,KAAKC,KAAL,CAAWL,UAArC,EAAiDM,iBAAjD;AACD,KAlEuC,CAGtC,KAAKD,KAAL,GAAa,EACXL,UAAU,EAAE,EADD,EAEXM,iBAAiB,EAAE,EAFR,EAGXE,gBAAgB,EAAE,EAHP,EAIXC,kBAAkB,EAAE,CAJT,EAKXC,iBAAiB,EAAE,MALR,EAAb,CAOD,CAEDN,mBAAmB,CAAEJ,UAAF,EAAsBM,iBAAtB,EAAkD,CACnE;AACA,QAAIE,gBAAgB,GAAG,EAAvB,CAFmE,CAInE;AACA,UAAMG,eAAe,GAAGX,UAAU,KAAKM,iBAAvC,CACA,IAAIM,eAAe,GAAGD,eAAe,GAAGX,UAAH,GAAgB,EAArD,CACA,IAAK,CAACW,eAAN,EAAwB,CACtBH,gBAAgB,GAAG,wBAAnB,CACD,CATkE,CAWnE;AACA,UAAMC,kBAAkB,GAAGvC,WAAW,CACpC8B,UADoC,EAEpC5B,mDAFoC,EAGpCC,0CAHoC,CAAtC,CAZmE,CAkBnE;AACA,UAAMqC,iBAAiB,GACrBD,kBAAkB,IAAII,uCAAtB,GACI,MADJ,GAEIJ,kBAAkB,IAAIK,uCAAtB,GACA,MADA,GAEA,MALN,CAOA,IAAKN,gBAAgB,KAAK,EAA1B,EAA+B,CAC7BA,gBAAgB,GAAG,wBAAwBE,iBAA3C,CACD,CA5BkE,CA8BnE;AACA,QAAKA,iBAAiB,KAAK,MAA3B,EAAoC,CAClCE,eAAe,GAAG,EAAlB,CACD,CAED,KAAKhB,KAAL,CAAWmB,cAAX,CAA2BH,eAA3B,EAEA,KAAKT,QAAL,CAAc,EAAEK,gBAAF,EAAoBE,iBAApB,EAAuCD,kBAAvC,EAAd,EACD,CAkBDO,MAAM,GAAG,CACP,MAAM,EAAEC,OAAF,KAAc,KAAKrB,KAAzB,CACA,MAAM,EACJI,UADI;AAEJM,MAAAA,iBAFI;AAGJE,MAAAA,gBAHI;AAIJE,MAAAA,iBAJI;AAKJD,MAAAA,kBALI;AAMF,SAAKJ,KANT;;AAQA;AACE;AACE,mCAAC,kBAAD;AACE,QAAA,YAAY,EAAC,cADf;AAEE,QAAA,SAAS,EAAE,IAFb;AAGE,QAAA,KAAK,EAAC,UAHR;AAIE,QAAA,MAAM,EAAC,QAJT;AAKE,QAAA,IAAI,EAAC,UALP;AAME,QAAA,KAAK,EAAEL,UANT;AAOE,QAAA,OAAO,EAAC,UAPV;AAQE,QAAA,QAAQ,EAAE,KAAKF,uBARjB,GADF;;;AAYE,mCAAC,kBAAD;AACE,QAAA,YAAY,EAAC,cADf;AAEE,QAAA,SAAS,EAAE,IAFb;AAGE,QAAA,KAAK,EAAC,kBAHR;AAIE,QAAA,MAAM,EAAC,QAJT;AAKE,QAAA,IAAI,EAAC,UALP;AAME,QAAA,KAAK,EAAEQ,iBANT;AAOE,QAAA,OAAO,EAAC,UAPV;AAQE,QAAA,QAAQ,EAAE,KAAKC,8BARjB,GAZF;;;AAuBE,mCAAC,mBAAD,IAAY,OAAO,EAAC,WAApB,EAAgC,YAAY,MAA5C;AACE,8CADF;AAEGC,MAAAA,gBAFH,CAvBF;;;AA4BE,mCAAC,uBAAD;AACE,QAAA,OAAO,EAAE;AACPU,UAAAA,YAAY,EAAED,OAAO,CAAC9B,oBADf;AAEPgC,UAAAA,eAAe;AACbF,UAAAA,OAAO,CAAC,6BAA6BP,iBAA9B,CAHF,EADX;;AAME,QAAA,KAAK,EAAI,KAAKD,kBAAP,GAA8BI,uCANvC;AAOE,QAAA,OAAO,EAAC,aAPV,GA5BF,CADF;;;;AAwCD,GAvHD,C;;;AA0Ha,wBAAY3B,MAAZ,EAAsBM,kBAAtB,C","sourcesContent":["// @flow\n\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport TextField from '@material-ui/core/TextField'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport React from 'react'\n\nimport {\n  uniqueLettersAwardUntilRepetitions,\n  userSecretStrengthGood,\n  userSecretStrengthFair,\n  variationAwardCoefficient,\n} from '../../_configuration/rb-account-management-webapp/userIDAndSecret'\n\n//\n\nfunction scoreSecret(\n  secret: string,\n  uniqueLettersAwardUntilRepetitions: number,\n  variationAwardCoefficient: number\n) {\n  let score = 0\n  if ( !secret ) return 0\n\n  // Award every unique letter until 5 repetitions\n  let letters: Object = {}\n  for ( let i = 0; i < secret.length; i++ ) {\n    letters[secret[i]] = ( letters[secret[i]] || 0 ) + 1\n    score += uniqueLettersAwardUntilRepetitions / letters[secret[i]]\n  }\n\n  // Bonus points for mixing it up\n  let variations = {\n    digits: /\\d/.test( secret ),\n    lower: /[a-z]/.test( secret ),\n    upper: /[A-Z]/.test( secret ),\n    nonWords: /\\W/.test( secret ),\n  }\n\n  let variationCount = 0\n  for ( let check in variations )\n    variationCount += variations[check] === true ? 1 : 0\n\n  score += ( variationCount - 1 ) * variationAwardCoefficient\n\n  return score\n}\n\n//\n\nconst styles = {\n  strengthColorPrimary: {\n    backgroundColor: '#a0a0a0',\n  },\n\n  strengthBarColorPrimary_poor: {\n    backgroundColor: '#a00000',\n  },\n  strengthBarColorPrimary_fair: {\n    backgroundColor: '#0000a0',\n  },\n  strengthBarColorPrimary_good: {\n    backgroundColor: '#00a000',\n  },\n}\n\n//\n\nclass NewUserSecretInput extends React.Component<\n  { classes: typeof styles, onUpdateSecret: string => void },\n  {\n    userSecret: string,\n    userSecretConfirm: string,\n    userSecretPrompt: string,\n    userSecretStrength: number,\n    userSecretQuality: 'poor' | 'fair' | 'good',\n  }\n> {\n  constructor( props: any, context: any ) {\n    super( props, context )\n\n    this.state = {\n      userSecret: '',\n      userSecretConfirm: '',\n      userSecretPrompt: '',\n      userSecretStrength: 0,\n      userSecretQuality: 'poor',\n    }\n  }\n\n  updateErrorAndValue( userSecret: string, userSecretConfirm: string ) {\n    // Collect errors\n    let userSecretPrompt = ''\n\n    // If secrets match ....\n    const bPasswordsMatch = userSecret === userSecretConfirm\n    let determinedValue = bPasswordsMatch ? userSecret : ''\n    if ( !bPasswordsMatch ) {\n      userSecretPrompt = 'Passwords do not match'\n    }\n\n    // Determine secret complexity\n    const userSecretStrength = scoreSecret(\n      userSecret,\n      uniqueLettersAwardUntilRepetitions,\n      variationAwardCoefficient\n    )\n\n    // Determine secret quality\n    const userSecretQuality =\n      userSecretStrength >= userSecretStrengthGood\n        ? 'good'\n        : userSecretStrength >= userSecretStrengthFair\n        ? 'fair'\n        : 'poor'\n\n    if ( userSecretPrompt === '' ) {\n      userSecretPrompt = 'Password strength: ' + userSecretQuality\n    }\n\n    // If quality is not gooe enough, clear\n    if ( userSecretQuality === 'poor' ) {\n      determinedValue = ''\n    }\n\n    this.props.onUpdateSecret( determinedValue )\n\n    this.setState({ userSecretPrompt, userSecretQuality, userSecretStrength })\n  }\n\n  _handle_onChange_Secret = event => {\n    const userSecret = event.target.value\n\n    this.setState({ userSecret })\n\n    this.updateErrorAndValue( userSecret, this.state.userSecretConfirm )\n  }\n\n  _handle_onChange_SecretConfirm = event => {\n    const userSecretConfirm = event.target.value\n\n    this.setState({ userSecretConfirm })\n\n    this.updateErrorAndValue( this.state.userSecret, userSecretConfirm )\n  }\n\n  render() {\n    const { classes } = this.props\n    const {\n      userSecret,\n      userSecretConfirm,\n      userSecretPrompt,\n      userSecretQuality,\n      userSecretStrength,\n    } = this.state\n\n    return (\n      <div>\n        <TextField\n          autoComplete=\"new-password\"\n          fullWidth={true}\n          label=\"Password\"\n          margin=\"normal\"\n          type=\"password\"\n          value={userSecret}\n          variant=\"outlined\"\n          onChange={this._handle_onChange_Secret}\n        />\n\n        <TextField\n          autoComplete=\"new-password\"\n          fullWidth={true}\n          label=\"Confirm password\"\n          margin=\"normal\"\n          type=\"password\"\n          value={userSecretConfirm}\n          variant=\"outlined\"\n          onChange={this._handle_onChange_SecretConfirm}\n        />\n\n        <Typography variant=\"subtitle1\" gutterBottom>\n          <br />\n          {userSecretPrompt}\n        </Typography>\n\n        <LinearProgress\n          classes={{\n            colorPrimary: classes.strengthColorPrimary,\n            barColorPrimary:\n              classes['strengthBarColorPrimary_' + userSecretQuality],\n          }}\n          value={( 50 * userSecretStrength ) / userSecretStrengthGood}\n          variant=\"determinate\"\n        />\n      </div>\n    )\n  }\n}\n\nexport default withStyles( styles )( NewUserSecretInput )\n"],"file":"NewUserSecretInput.js"}