{"version":3,"sources":["../../../../units/rb-account-management-webapp/components/UserProfileScreen.jsx"],"names":["styles","card","minWidth","UserProfileScreen","React","Component","constructor","props","context","User_DisplayName","User_PrimaryEmail","User_PrimaryPhone","Viewer","state","render","classes","User_IsAnonymous","_handle_onChange_DisplayName","_handle_onChange_PrimaryEmail","_handle_onChange_PrimaryPhone","_handle_onClick_Update","_handle_onClick_ChangePassword","event","target","value","setState","router","push","relay","UserUpdateMutation","commit","environment"],"mappings":"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","sourcesContent":["// @flow\n\nimport { withRouter } from 'found'\n\nimport Button from '@material-ui/core/Button'\n\nimport Card from '@material-ui/core/Card'\n\nimport CardActions from '@material-ui/core/CardActions'\n\nimport CardContent from '@material-ui/core/CardContent'\n\nimport CardHeader from '@material-ui/core/CardHeader'\n\nimport TextField from '@material-ui/core/TextField'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport UserUpdateMutation from '../../rb-account-management-client/relay/UserUpdateMutation'\nimport RequiresAuthenticationNotice from '../../rb-account-management-webapp/components/RequiresAuthentication'\nimport ResponsiveContentArea from '../../rb-appbase-webapp/components/ResponsiveContentArea'\n\n//\n\nconst styles = {\n  card: { minWidth: 320 },\n}\n\n//\n\nclass UserProfileScreen extends React.Component<\n  {\n    classes: Object,\n    relay: Object,\n    router: Object,\n    Viewer: {\n      User_IsAnonymous: boolean,\n      User_DisplayName: string,\n      User_PrimaryEmail: string,\n      User_PrimaryPhone: string,\n    },\n  },\n  {\n    User_DisplayName: string,\n    User_PrimaryEmail: string,\n    User_PrimaryPhone: string,\n  }\n> {\n  constructor( props, context ) {\n    super( props, context )\n\n    const {\n      User_DisplayName,\n      User_PrimaryEmail,\n      User_PrimaryPhone,\n    } = props.Viewer\n\n    this.state = { User_DisplayName, User_PrimaryEmail, User_PrimaryPhone }\n  }\n\n  _handle_onChange_DisplayName = event => {\n    const User_DisplayName = event.target.value\n\n    this.setState({ User_DisplayName })\n  }\n\n  _handle_onChange_PrimaryEmail = event => {\n    const User_PrimaryEmail = event.target.value\n\n    this.setState({ User_PrimaryEmail })\n  }\n\n  _handle_onChange_PrimaryPhone = event => {\n    const User_PrimaryPhone = event.target.value\n\n    this.setState({ User_PrimaryPhone })\n  }\n\n  _handle_onClick_ChangePassword = () => {\n    this.props.router.push( '/user/change-secret' )\n  }\n\n  _handle_onClick_Update = () => {\n    const {\n      User_DisplayName,\n      User_PrimaryEmail,\n      User_PrimaryPhone,\n    } = this.state\n    const { relay } = this.props\n\n    UserUpdateMutation.commit(\n      relay.environment,\n      User_DisplayName,\n      User_PrimaryEmail,\n      User_PrimaryPhone\n    )\n  }\n\n  render() {\n    const { classes, Viewer } = this.props\n\n    if ( Viewer.User_IsAnonymous ) return <RequiresAuthenticationNotice />\n\n    const {\n      User_DisplayName,\n      User_PrimaryEmail,\n      User_PrimaryPhone,\n    } = this.state\n\n    return (\n      <ResponsiveContentArea>\n        <Card className={classes.card}>\n          <CardHeader title=\"User Profile\" />\n\n          <CardContent>\n            <TextField\n              autoComplete=\"name\"\n              fullWidth={true}\n              label=\"Display Name\"\n              margin=\"normal\"\n              value={User_DisplayName}\n              variant=\"outlined\"\n              onChange={this._handle_onChange_DisplayName}\n            />\n\n            <TextField\n              autoComplete=\"email\"\n              fullWidth={true}\n              label=\"Contact email (not account identifier)\"\n              margin=\"normal\"\n              value={User_PrimaryEmail}\n              variant=\"outlined\"\n              onChange={this._handle_onChange_PrimaryEmail}\n            />\n\n            <TextField\n              autoComplete=\"tel\"\n              fullWidth={true}\n              label=\"Contact phone\"\n              margin=\"normal\"\n              value={User_PrimaryPhone}\n              variant=\"outlined\"\n              onChange={this._handle_onChange_PrimaryPhone}\n            />\n          </CardContent>\n\n          <CardActions>\n            <Button onClick={this._handle_onClick_Update}>Update</Button>\n            <Button onClick={this._handle_onClick_ChangePassword}>\n              Change password\n            </Button>\n          </CardActions>\n        </Card>\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles( styles )( withRouter( UserProfileScreen ) ),\n  graphql`\n    fragment UserProfileScreen_Viewer on Viewer {\n      id\n      User_IsAnonymous\n      User_DisplayName\n      User_PrimaryEmail\n      User_PrimaryPhone\n    }\n  `\n)\n"],"file":"UserProfileScreen.js"}