{"version":3,"sources":["../../../../units/rb-account-management-webapp/components/LoginDialog.jsx"],"names":["styles","theme","dialogPaper","minWidth","grow","flex","userName","borderWidth","borderColor","fontWeight","paddingLeft","paddingRight","LoginDialog","React","Component","constructor","props","context","_handle_Close","handlerClose","_handle_onClick_LogIn","UserAccount_Identifier","User_Secret","state","setState","currentOperation","loc","window","location","host","protocol","hostname","port","response","fetch","method","credentials","headers","body","JSON","stringify","responseData","json","success","replace","pathname","routeAfterLogin","errorMessage","error","err","message","_handle_onCLick_NewUser","handlerNewUser","_handle_onCLick_CancelLogIn","_handle_onClick_TryAgain","renderChallenge","classes","open","paper","event","target","value","ev","key","preventDefault","renderInProgress","renderFailure","render"],"mappings":"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","sourcesContent":["// @flow\n\nimport Alert from '@material-ui/lab/Alert'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport TextField from '@material-ui/core/TextField'\nimport { withStyles } from '@material-ui/core/styles'\nimport React from 'react'\n\nimport routeAfterLogin from '../../_configuration/rb-account-management-webapp/routeAfterLogin'\n\n//\n\nconst styles = (theme) => ({\n  dialogPaper: {\n    minWidth: 320,\n  },\n  grow: {\n    flex: '1 1 auto',\n  },\n  userName: {\n    borderWidth: 1,\n    borderColor: '#c0c0c0',\n    fontWeight: 'bold',\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n})\n\n//\n\nclass LoginDialog extends React.Component<\n  {\n    open: boolean,\n    handlerClose: Function,\n    handlerNewUser: Function,\n    classes: Object,\n  },\n  {\n    currentOperation: 'challenge' | 'in progress' | 'failure',\n    errorMessage: string,\n    UserAccount_Identifier: string,\n    User_Secret: string,\n  },\n> {\n  constructor(props: Object, context: Object) {\n    super(props, context)\n\n    this.state = {\n      currentOperation: 'challenge',\n      errorMessage: '',\n      UserAccount_Identifier: '',\n      User_Secret: '',\n    }\n  }\n\n  _handle_Close = () => {\n    this.props.handlerClose()\n  }\n\n  _handle_onClick_LogIn = async () => {\n    const { UserAccount_Identifier, User_Secret } = this.state\n\n    this.setState({\n      currentOperation: 'in progress',\n      User_Secret: '', // In order to prevent the password from being accessed later\n    })\n\n    try {\n      const loc = window.location\n      const host = loc.protocol + '//' + loc.hostname + ':' + loc.port\n\n      const response = await fetch(host + '/auth/login', {\n        method: 'POST',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          UserAccount_Identifier: UserAccount_Identifier,\n          User_Secret: User_Secret,\n        }),\n      })\n\n      const responseData = await response.json()\n\n      if (responseData.success) {\n        // In case of success, realod the application from server\n        window.location.replace(\n          window.location.pathname === '/' ? routeAfterLogin : window.location.pathname,\n        )\n      } else {\n        // In case of error, tell user what the error is\n        this.setState({\n          currentOperation: 'failure',\n          errorMessage: responseData.error,\n        }) // ZZZ Does server really send the reason for the failed login?\n      }\n    } catch (err) {\n      // In case response could not be received properly, tell the user\n      // In case of error, tell user what the error is\n      this.setState({\n        currentOperation: 'failure',\n        errorMessage:\n          'Did not receive proper response from server. Please try again later. Error:' +\n          err.message,\n      })\n    }\n  }\n\n  _handle_onCLick_NewUser = () => {\n    this.props.handlerNewUser()\n  }\n\n  _handle_onCLick_CancelLogIn = () => {\n    this.setState({\n      currentOperation: 'failure',\n      errorMessage: 'Log in has been canceled',\n    })\n  }\n\n  _handle_onClick_TryAgain = () => {\n    this.setState({\n      currentOperation: 'challenge',\n      errorMessage: '',\n    })\n  }\n\n  renderChallenge() {\n    const { classes, open } = this.props\n    const { UserAccount_Identifier, User_Secret } = this.state\n\n    return (\n      <Dialog classes={{ paper: classes.dialogPaper }} open={open} onClose={this._handle_Close}>\n        <DialogTitle>Log In</DialogTitle>\n\n        <DialogContent>\n          <TextField\n            autoComplete=\"username\"\n            fullWidth={true}\n            label=\"E-Mail Address\"\n            margin=\"normal\"\n            value={UserAccount_Identifier}\n            variant=\"outlined\"\n            onChange={(event) => this.setState({ UserAccount_Identifier: event.target.value })}\n          />\n          <TextField\n            autoComplete=\"current-password\"\n            fullWidth={true}\n            label=\"Password\"\n            margin=\"normal\"\n            type=\"password\"\n            value={User_Secret}\n            variant=\"outlined\"\n            onChange={(event) => this.setState({ User_Secret: event.target.value })}\n            onKeyPress={(ev) => {\n              if (ev.key === 'Enter') {\n                this._handle_onClick_LogIn()\n                ev.preventDefault()\n              }\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={this._handle_onCLick_NewUser}>\n            New User\n          </Button>\n          <div className={classes.grow} />\n          <Button onClick={this._handle_Close}>Cancel</Button>\n          <Button color=\"primary\" onClick={this._handle_onClick_LogIn}>\n            Log In\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  }\n\n  renderInProgress() {\n    const { classes, open } = this.props\n    const { UserAccount_Identifier } = this.state\n\n    return (\n      <Dialog classes={{ paper: classes.dialogPaper }} open={open} onClose={this._handle_Close}>\n        <DialogTitle>Logging in</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <Alert variant=\"outlined\" severity=\"info\">\n            Logging in as\n            <span className={classes.userName}>{UserAccount_Identifier}</span>\n            Please wait ...\n          </Alert>\n          <br />\n          <br />\n          <LinearProgress mode=\"query\" />\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={this._handle_onCLick_CancelLogIn}>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  }\n\n  renderFailure() {\n    const { classes, open } = this.props\n    const { UserAccount_Identifier, errorMessage } = this.state\n\n    return (\n      <Dialog classes={{ paper: classes.dialogPaper }} open={open} onClose={this._handle_Close}>\n        <DialogTitle>Log In Failed</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <Alert variant=\"outlined\" severity=\"error\">\n            Failed loggin in as\n            <span className={classes.userName}>{UserAccount_Identifier}</span> because:{' '}\n            {errorMessage}!\n          </Alert>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this._handle_onClick_TryAgain}>Try Again</Button>\n        </DialogActions>\n      </Dialog>\n    )\n  }\n\n  render() {\n    const { currentOperation } = this.state\n\n    return (\n      <div>\n        {currentOperation === 'challenge' && this.renderChallenge()}\n        {currentOperation === 'in progress' && this.renderInProgress()}\n        {currentOperation === 'failure' && this.renderFailure()}\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(LoginDialog)\n"],"file":"LoginDialog.js"}