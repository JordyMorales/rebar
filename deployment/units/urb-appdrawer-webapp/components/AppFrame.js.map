{"version":3,"sources":["../../../../units/urb-appdrawer-webapp/components/AppFrame.jsx"],"names":["drawerWidth","styles","theme","html","boxSizing","body","margin","background","palette","default","color","text","primary","lineHeight","overflowX","WebkitFontSmoothing","MozOsxFontSmoothing","img","maxWidth","height","width","root","zIndex","overflow","appFrame","position","display","appBar","appBarShift","marginLeft","grow","flex","menuButton","marginRight","menuButtonRoot","hide","drawerInner","drawerHeader","alignItems","justifyContent","padding","mixins","toolbar","drawerPaper","content","flexGrow","backgroundColor","spacing","unit","transition","transitions","create","easing","sharp","duration","leavingScreen","marginTop","breakpoints","up","contentShift","AppFrame","Component","constructor","props","context","_handle_Drawer_Open","setState","drawerIsOpen","_handle_Drawer_Pin","drawerIsPinned","_handle_Drawer_UnPin","_handle_Drawer_Close","_handle_GoTo","to","state","router","push","render","children","classes","Viewer","drawerType","drawerClasses","paper","title","enter","leave","contextTypes","object","isRequired"],"mappings":"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","file":"AppFrame.js","sourcesContent":["// @flow\n\nimport classNames from 'classnames'\nimport AppBar from 'material-ui/AppBar'\nimport Drawer from 'material-ui/Drawer'\nimport IconButton from 'material-ui/IconButton'\nimport { withStyles } from 'material-ui/styles'\nimport Toolbar from 'material-ui/Toolbar'\nimport Typography from 'material-ui/Typography'\nimport IconChevronLeft from 'material-ui-icons/ChevronLeft'\nimport IconKeyboardTab from 'material-ui-icons/KeyboardTab'\nimport IconMenu from 'material-ui-icons/Menu'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport AppDrawerNavItems from '../../_configuration/urb-appdrawer-webapp/AppDrawerNavItems'\nimport AppDrawerTitle from '../../_configuration/urb-appdrawer-webapp/AppDrawerTitle'\nimport NavBarLoginButton from '../../urb-account-management-webapp/components/NavBarLoginButton'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  '@global': {\n    html: {\n      boxSizing: 'border-box',\n    },\n    '*, *:before, *:after': {\n      boxSizing: 'inherit',\n    },\n    body: {\n      margin: 0,\n      background: theme.palette.background.default,\n      color: theme.palette.text.primary,\n      lineHeight: '1.2',\n      overflowX: 'hidden',\n      WebkitFontSmoothing: 'antialiased', // Antialiasing.\n      MozOsxFontSmoothing: 'grayscale', // Antialiasing.\n    },\n    img: {\n      maxWidth: '100%',\n      height: 'auto',\n      width: 'auto',\n    },\n  },\n  root: {\n    width: '100%',\n    height: '100vh',\n    zIndex: 1,\n    overflow: 'hidden',\n  },\n  appFrame: {\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n    height: '100%',\n  },\n  appBar: {\n    position: 'absolute',\n    // transition: theme.transitions.create([ 'margin', 'width' ], {\n    //   easing: theme.transitions.easing.sharp,\n    //   duration: theme.transitions.duration.leavingScreen,\n    // }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    // transition: theme.transitions.create([ 'margin', 'width' ], {\n    //   easing: theme.transitions.easing.easeOut,\n    //   duration: theme.transitions.duration.enteringScreen,\n    // }),\n  },\n  grow: {\n    flex: '1 1 auto',\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  menuButtonRoot: {\n    color: '#ffffff',\n  },\n  hide: {\n    display: 'none',\n  },\n  drawerInner: {\n    // Make the items inside not wrap when transitioning:\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  drawerPaper: {\n    position: 'relative',\n    height: '100%',\n    width: drawerWidth,\n  },\n  content: {\n    width: '100%',\n    //marginLeft: -drawerWidth,\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create( 'margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflow: 'scroll',\n    height: 'calc(100% - 56px)',\n    marginTop: 56,\n    [theme.breakpoints.up( 'sm' )]: {\n      content: {\n        height: 'calc(100% - 64px)',\n        marginTop: 64,\n      },\n    },\n  },\n  contentShift: {\n    marginLeft: 0,\n    // transition: theme.transitions.create( 'margin', {\n    //   easing: theme.transitions.easing.easeOut,\n    //   duration: theme.transitions.duration.enteringScreen,\n    // }),\n  },\n})\n\nclass AppFrame extends React.Component<any, { drawerIsOpen: boolean, drawerIsPinned: boolean }> {\n  static contextTypes = {\n    router: PropTypes.object.isRequired,\n  }\n\n  constructor( props: Object, context: Object ) {\n    super( props, context )\n\n    this.state = { drawerIsOpen: false, drawerIsPinned: false }\n  }\n\n  _handle_Drawer_Open = () => {\n    this.setState({ drawerIsOpen: true })\n  }\n  _handle_Drawer_Pin = () => {\n    this.setState({ drawerIsPinned: true })\n  }\n\n  _handle_Drawer_UnPin = () => {\n    this.setState({ drawerIsOpen: false, drawerIsPinned: false })\n  }\n\n  _handle_Drawer_Close = () => {\n    this.setState({ drawerIsOpen: false })\n  }\n\n  _handle_GoTo = ( to: string ) => {\n    // TODO x0500 For some reason if the drawer is not pinned, the MUI modal root will\n    // not be removed. Annoying AF. This bug was introduced around MIO 1.0 beta 17. Still a problem\n    // with beta 22.\n    //if ( !this.state.drawerIsPinned ) this.setState({ drawerIsOpen: false })\n    if ( !this.state.drawerIsPinned ) this.setState({ drawerIsPinned: true })\n\n    this.context.router.push( to )\n  }\n\n  render() {\n    const { children, classes, Viewer } = this.props\n    const { drawerIsOpen, drawerIsPinned } = this.state\n\n    const drawerType = drawerIsPinned ? 'persistent' : 'temporary'\n\n    const drawerClasses = drawerIsPinned\n      ? {\n          paper: classes.drawerPaper,\n        }\n      : {}\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.appFrame}>\n          <AppBar className={classNames( classes.appBar, drawerIsPinned && classes.appBarShift )}>\n            <Toolbar disableGutters={!drawerIsPinned}>\n              <IconButton\n                aria-label=\"open drawer\"\n                onClick={this._handle_Drawer_Open}\n                className={classNames( classes.menuButton, drawerIsPinned && classes.hide )}\n                classes={{ root: classes.menuButtonRoot }}\n              >\n                <IconMenu />\n              </IconButton>\n              <Typography className={classes.title} type=\"title\" color=\"inherit\" noWrap>\n                Code Foundries Maker\n              </Typography>\n\n              <div className={classes.grow} />\n              <NavBarLoginButton Viewer={Viewer} />\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            classes={drawerClasses}\n            open={drawerIsOpen}\n            onClose={this._handle_Drawer_Close}\n            type={drawerType}\n            transitionDuration={{\n              enter: drawerIsPinned ? 0 : 300,\n              leave: 0,\n            }}\n          >\n            <div className={classes.drawerInner}>\n              <div className={classes.drawerHeader}>\n                <AppDrawerTitle handle_GoTo={this._handle_GoTo} />\n                <div className={classes.grow} />\n                {drawerIsPinned && (\n                  <IconButton onClick={this._handle_Drawer_UnPin}>\n                    <IconChevronLeft />\n                  </IconButton>\n                )}\n                {!drawerIsPinned && (\n                  <IconButton onClick={this._handle_Drawer_Pin}>\n                    <IconKeyboardTab />\n                  </IconButton>\n                )}\n              </div>\n            </div>\n            <AppDrawerNavItems onClick={this._handle_GoTo} />\n          </Drawer>\n          <main className={classNames( classes.content, drawerIsPinned && classes.contentShift )}>\n            {children}\n          </main>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles( styles )( AppFrame ),\n  graphql`\n    fragment AppFrame_Viewer on Viewer {\n      UserToken2\n      ...NavBarLoginButton_Viewer\n    }\n  `,\n)\n"]}