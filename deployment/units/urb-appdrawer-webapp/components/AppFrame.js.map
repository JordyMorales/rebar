{"version":3,"sources":["../../../../units/urb-appdrawer-webapp/components/AppFrame.jsx"],"names":["drawerWidth","styles","theme","html","boxSizing","body","margin","background","palette","default","color","text","primary","lineHeight","overflowX","WebkitFontSmoothing","MozOsxFontSmoothing","img","maxWidth","height","width","root","zIndex","overflow","appFrame","position","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","grow","flex","menuButton","marginLeft","marginRight","menuButtonRoot","drawerInner","drawerHeader","alignItems","justifyContent","padding","mixins","toolbar","drawerPaper","content","flexGrow","backgroundColor","spacing","unit","marginTop","breakpoints","up","AppFrame","React","Component","constructor","props","context","_handle_Drawer_Open","setState","drawerIsOpen","_handle_Drawer_Close","_handle_GoTo","to","router","push","state","render","children","classes","Viewer","NavBarTitle","contextTypes","PropTypes","object","isRequired"],"mappings":"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","file":"AppFrame.js","sourcesContent":["// @flow\n\nimport AppBar from '@material-ui/core/AppBar'\n\nimport Drawer from '@material-ui/core/Drawer'\n\nimport IconButton from '@material-ui/core/IconButton'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport Toolbar from '@material-ui/core/Toolbar'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport IconMenu from '@material-ui/icons/Menu'\n\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport AppDrawerNavItems from '../../_configuration/urb-appdrawer-webapp/AppDrawerNavItems'\nimport AppDrawerTitle from '../../_configuration/urb-appdrawer-webapp/AppDrawerTitle'\nimport NavBarLoginButton from '../../urb-account-management-webapp/components/NavBarLoginButton'\nimport NavBarTitle from '../../_configuration/urb-appdrawer-webapp/NavBarTitle'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  '@global': {\n    html: {\n      boxSizing: 'border-box',\n    },\n    '*, *:before, *:after': {\n      boxSizing: 'inherit',\n    },\n    body: {\n      margin: 0,\n      background: theme.palette.background.default,\n      color: theme.palette.text.primary,\n      lineHeight: '1.2',\n      overflowX: 'hidden',\n      WebkitFontSmoothing: 'antialiased', // Antialiasing.\n      MozOsxFontSmoothing: 'grayscale', // Antialiasing.\n    },\n    img: {\n      maxWidth: '100%',\n      height: 'auto',\n      width: 'auto',\n    },\n  },\n  root: {\n    width: '100%',\n    height: '100vh',\n    zIndex: 1,\n    overflow: 'hidden',\n  },\n  appFrame: {\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n    height: '100%',\n  },\n  appBar: {\n    position: 'absolute',\n    transition: theme.transitions.create([ 'margin', 'width' ], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  grow: {\n    flex: '1 1 auto',\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  menuButtonRoot: {\n    color: '#ffffff',\n  },\n  drawerInner: {\n    // Make the items inside not wrap when transitioning:\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  drawerPaper: {\n    position: 'relative',\n    height: '100%',\n    width: drawerWidth,\n  },\n  content: {\n    width: '100%',\n    //marginLeft: -drawerWidth,\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create( 'margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflow: 'scroll',\n    height: 'calc(100% - 56px)',\n    marginTop: 56,\n    [theme.breakpoints.up( 'sm' )]: {\n      content: {\n        height: 'calc(100% - 64px)',\n        marginTop: 64,\n      },\n    },\n  },\n})\n\nclass AppFrame extends React.Component<any, { drawerIsOpen: boolean }> {\n  static contextTypes = {\n    router: PropTypes.object.isRequired,\n  }\n\n  constructor( props: Object, context: Object ) {\n    super( props, context )\n\n    this.state = { drawerIsOpen: false }\n  }\n\n  _handle_Drawer_Open = () => {\n    this.setState({ drawerIsOpen: true })\n  }\n\n  _handle_Drawer_Close = () => {\n    this.setState({ drawerIsOpen: false })\n  }\n\n  _handle_GoTo = ( to: string ) => {\n    this.setState({ drawerIsOpen: false })\n\n    this.context.router.push( to )\n  }\n\n  render() {\n    const { children, classes, Viewer } = this.props\n    const { drawerIsOpen } = this.state\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.appFrame}>\n          <AppBar className={classes.appBar}>\n            <Toolbar disableGutters={true}>\n              <IconButton\n                aria-label=\"open drawer\"\n                onClick={this._handle_Drawer_Open}\n                className={classes.menuButton}\n                classes={{ root: classes.menuButtonRoot }}\n              >\n                <IconMenu />\n              </IconButton>\n              <Typography variant=\"title\" color=\"inherit\" noWrap>\n                {NavBarTitle}\n              </Typography>\n\n              <div className={classes.grow} />\n              <NavBarLoginButton Viewer={Viewer} />\n            </Toolbar>\n          </AppBar>\n          <Drawer open={drawerIsOpen} onClose={this._handle_Drawer_Close}>\n            <div className={classes.drawerInner}>\n              <div className={classes.drawerHeader}>\n                <AppDrawerTitle handle_GoTo={this._handle_GoTo} />\n              </div>\n            </div>\n            <AppDrawerNavItems onClick={this._handle_GoTo} />\n          </Drawer>\n          <main className={classes.content}>{children}</main>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles( styles )( AppFrame ),\n  graphql`\n    fragment AppFrame_Viewer on Viewer {\n      UserToken2\n      ...NavBarLoginButton_Viewer\n    }\n  `,\n)\n"]}