(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{1011:function(e,n,t){"use strict";const o={kind:"Request",fragment:{kind:"Fragment",name:"ToDoAddMutation",type:"Mutation",metadata:null,argumentDefinitions:a=[{kind:"LocalArgument",name:"input",type:"ToDoAddInput!",defaultValue:null}],selections:i=[{kind:"LinkedField",alias:null,name:"ToDoAdd",storageKey:null,args:[{kind:"Variable",name:"input",variableName:"input"}],concreteType:"ToDoAddPayload",plural:!1,selections:[{kind:"LinkedField",alias:null,name:"Viewer",storageKey:null,args:null,concreteType:"Viewer",plural:!1,selections:[l={kind:"ScalarField",alias:null,name:"id",args:null,storageKey:null},{kind:"ScalarField",alias:null,name:"ToDo_TotalCount",args:null,storageKey:null}]},{kind:"LinkedField",alias:null,name:"ToDosEdge",storageKey:null,args:null,concreteType:"ToDosEdge",plural:!1,selections:[{kind:"ScalarField",alias:null,name:"cursor",args:null,storageKey:null},{kind:"LinkedField",alias:null,name:"node",storageKey:null,args:null,concreteType:"ToDo",plural:!1,selections:[l,{kind:"ScalarField",alias:null,name:"ToDo_Complete",args:null,storageKey:null},{kind:"ScalarField",alias:null,name:"ToDo_Text",args:null,storageKey:null}]}]}]}]},operation:{kind:"Operation",name:"ToDoAddMutation",argumentDefinitions:a,selections:i},params:{operationKind:"mutation",name:"ToDoAddMutation",id:null,text:"mutation ToDoAddMutation(\n  $input: ToDoAddInput!\n) {\n  ToDoAdd(input: $input) {\n    Viewer {\n      id\n      ToDo_TotalCount\n    }\n    ToDosEdge {\n      cursor\n      node {\n        id\n        ToDo_Complete\n        ToDo_Text\n      }\n    }\n  }\n}\n",metadata:{}}};var a,l,i;o.hash="684ae97e6e6d46d3fd07c9e663e1a314",e.exports=o},1012:function(e,n,t){"use strict";const o={kind:"Fragment",name:"ToDoScreen_Viewer",type:"Viewer",metadata:null,argumentDefinitions:[],selections:[{kind:"ScalarField",alias:null,name:"id",args:null,storageKey:null}],hash:"51f13adf0441eb6987038deaeea9998d"};e.exports=o},1952:function(e,n,t){"use strict";t.r(n);var o=t(46),a=t(161),l=t(4),i=t(0),s=t.n(i),d=t(12),r=t(402),u=t(26),c=t(23);const T=function(){return t(1011)};function m(e,n,t){const o=e.get(n.id);["any","active"].forEach(e=>{const n=c.ConnectionHandler.getConnection(o,"ToDoList_ToDos",{status:e});n&&c.ConnectionHandler.insertEdgeAfter(n,t)})}let D=0;var g={commit:function(e,n,t){const o=D++;return Object(d.commitMutation)(e,{mutation:T,variables:{input:{ToDo_Text:t,clientMutationId:o}},updater(e){const t=e.getRootField("ToDoAdd");m(e,n,t.getLinkedRecord("ToDosEdge"))},optimisticUpdater(e){const a="client:ToDoAdd:ToDo:".concat(o),l=e.create(a,"ToDo");l.setValue(t,"ToDo_Text"),l.setValue(a,"id");const i=e.create("client:ToDoAdd:ToDosEdge:".concat(o),"ToDosEdge");i.setLinkedRecord(l,"node"),m(e,n,i);const s=e.get(n.id),d=s.getValue("ToDo_TotalCount");null!=d&&s.setValue(d+1,"ToDo_TotalCount")}})}};n.default=Object(d.createFragmentContainer)(Object(l.a)(e=>({card:{minWidth:275}}))(class extends s.a.Component{constructor(e,n){super(e,n),this._handle_onKeyDown_AddToDo=(e=>{if(13===e.keyCode){const{relay:e,Viewer:n}=this.props;g.commit(e.environment,n,this.state.ToDo_Text_New),this.setState({ToDo_Text_New:""})}}),this._handle_OnChange=(e=>{this.setState({ToDo_Text_New:e.target.value})}),this.state={ToDo_Text_New:""}}render(){const{classes:e}=this.props;return s.a.createElement(u.a,null,s.a.createElement(o.a,{className:e.card},s.a.createElement(a.a,{title:"TO DOs",subheader:"List of TO DOs for user"}),this.props.children,s.a.createElement("div",{style:{marginLeft:4,marginRight:4}}),s.a.createElement(r.a,{label:"What needs to be done?",value:this.state.ToDo_Text_New,fullWidth:!0,onKeyDown:this._handle_onKeyDown_AddToDo,onChange:this._handle_OnChange})))}}),function(){return t(1012)})}}]);