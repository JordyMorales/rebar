(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{1335:function(e,n,t){"use strict";t.r(n);var a,o=t(44),l=t(205),i=t(4),s=t(0),d=t.n(s),r=t(10),u=t(335),c=t(33),T=t(18);const m=void 0!==a?a:a=t(698);function g(e,n,t){const a=e.get(n.id);["any","active"].forEach(e=>{const n=T.ConnectionHandler.getConnection(a,"ToDoList_ToDos",{status:e});n&&T.ConnectionHandler.insertEdgeAfter(n,t)})}let D=0;var p,_={commit:function(e,n,t){const a=D++;return Object(r.commitMutation)(e,{mutation:m,variables:{input:{ToDo_Text:t,clientMutationId:`${a}`}},updater(e){const t=e.getRootField("ToDoAdd");g(e,n,t.getLinkedRecord("ToDosEdge"))},optimisticUpdater(e){const o=`client:ToDoAdd:ToDo:${a}`,l=e.create(o,"ToDo");l.setValue(t,"ToDo_Text"),l.setValue(o,"id");const i=e.create(`client:ToDoAdd:ToDosEdge:${a}`,"ToDosEdge");i.setLinkedRecord(l,"node"),g(e,n,i);const s=e.get(n.id),d=s.getValue("ToDo_TotalCount");null!=d&&s.setValue(d+1,"ToDo_TotalCount")}})}};class h extends d.a.Component{constructor(e,n){super(e,n),this._handle_onKeyDown_AddToDo=e=>{if(13===e.keyCode){const{relay:e,Viewer:n}=this.props;_.commit(e.environment,n,this.state.ToDo_Text_New),this.setState({ToDo_Text_New:""})}},this._handle_OnChange=e=>{this.setState({ToDo_Text_New:e.target.value})},this.state={ToDo_Text_New:""}}render(){const{classes:e}=this.props;return d.a.createElement(c.a,null,d.a.createElement(o.a,{className:e.card},d.a.createElement(l.a,{title:"TO DOs",subheader:"List of TO DOs for user"}),this.props.children,d.a.createElement("div",{style:{marginLeft:4,marginRight:4}}),d.a.createElement(u.a,{label:"What needs to be done?",value:this.state.ToDo_Text_New,fullWidth:!0,onKeyDown:this._handle_onKeyDown_AddToDo,onChange:this._handle_OnChange})))}}n.default=Object(r.createFragmentContainer)(Object(i.a)(e=>({card:{minWidth:275}}))(h),{Viewer:void 0!==p?p:p=t(699)})},698:function(e,n,t){"use strict";const a={kind:"Request",fragment:{kind:"Fragment",name:"ToDoAddMutation",type:"Mutation",metadata:null,argumentDefinitions:o=[{kind:"LocalArgument",name:"input",type:"ToDoAddInput!",defaultValue:null}],selections:i=[{kind:"LinkedField",alias:null,name:"ToDoAdd",storageKey:null,args:[{kind:"Variable",name:"input",variableName:"input"}],concreteType:"ToDoAddPayload",plural:!1,selections:[{kind:"LinkedField",alias:null,name:"Viewer",storageKey:null,args:null,concreteType:"Viewer",plural:!1,selections:[l={kind:"ScalarField",alias:null,name:"id",args:null,storageKey:null},{kind:"ScalarField",alias:null,name:"ToDo_TotalCount",args:null,storageKey:null}]},{kind:"LinkedField",alias:null,name:"ToDosEdge",storageKey:null,args:null,concreteType:"ToDosEdge",plural:!1,selections:[{kind:"ScalarField",alias:null,name:"__typename",args:null,storageKey:null},{kind:"ScalarField",alias:null,name:"cursor",args:null,storageKey:null},{kind:"LinkedField",alias:null,name:"node",storageKey:null,args:null,concreteType:"ToDo",plural:!1,selections:[l,{kind:"ScalarField",alias:null,name:"ToDo_Complete",args:null,storageKey:null},{kind:"ScalarField",alias:null,name:"ToDo_Text",args:null,storageKey:null}]}]}]}]},operation:{kind:"Operation",name:"ToDoAddMutation",argumentDefinitions:o,selections:i},params:{operationKind:"mutation",name:"ToDoAddMutation",id:null,text:"mutation ToDoAddMutation(\n  $input: ToDoAddInput!\n) {\n  ToDoAdd(input: $input) {\n    Viewer {\n      id\n      ToDo_TotalCount\n    }\n    ToDosEdge {\n      __typename\n      cursor\n      node {\n        id\n        ToDo_Complete\n        ToDo_Text\n      }\n    }\n  }\n}\n",metadata:{}}};var o,l,i;a.hash="91b4bedd9baa04b077f5bcb84fb786a1",e.exports=a},699:function(e,n,t){"use strict";const a={kind:"Fragment",name:"ToDoScreen_Viewer",type:"Viewer",metadata:null,argumentDefinitions:[],selections:[{kind:"ScalarField",alias:null,name:"id",args:null,storageKey:null}],hash:"51f13adf0441eb6987038deaeea9998d"};e.exports=a}}]);