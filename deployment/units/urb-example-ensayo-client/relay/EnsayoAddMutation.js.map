{"version":3,"sources":["../../../../units/urb-example-ensayo-client/relay/EnsayoAddMutation.js"],"names":["mutation","sharedUpdater","store","user","EnsayosEdge","userProxy","get","id","connection","ConnectionHandler","getConnection","insertEdgeAfter","nextClientMutationId","commit","environment","Ensayo_Title","Ensayo_Description","Ensayo_Content","clientMutationId","variables","input","updater","payload","getRootField","getLinkedRecord","optimisticUpdater","aEnsayo","create","setValue","setLinkedRecord"],"mappings":";;AAEA;AACA,6C,CAHA;;AAKA,MAAMA,QAAQ,6EAAd;;;;;;;;;;;;;;;;;;;AAmBA,SAASC,aAAT,CAAwBC,KAAxB,EAA+BC,IAA/B,EAAqCC,WAArC,EAAmD;AACjD,QAAMC,SAAS,GAAGH,KAAK,CAACI,GAAN,CAAWH,IAAI,CAACI,EAAhB,CAAlB;;AAEA,QAAMC,UAAU,GAAGC,gCAAkBC,aAAlB;AACjBL,EAAAA,SADiB;AAEjB,sBAFiB,CAAnB;;AAIA,MAAKG,UAAL,EAAkB;AAChBC,oCAAkBE,eAAlB,CAAmCH,UAAnC,EAA+CJ,WAA/C;AACD;AACF;;AAED,IAAIQ,oBAAoB,GAAG,CAA3B;;AAEA,SAASC,MAAT;AACEC,WADF;AAEEX,IAFF;AAGEY,YAHF;AAIEC,kBAJF;AAKEC,cALF;AAME;AACA,QAAMC,gBAAgB,GAAGN,oBAAoB,EAA7C;;AAEA,SAAO,gCAAgBE,WAAhB,EAA6B;AAClCd,IAAAA,QADkC;AAElCmB,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AACLL,QAAAA,YADK;AAELC,QAAAA,kBAFK;AAGLC,QAAAA,cAHK;AAILC,QAAAA,gBAJK,EADE,EAFuB;;;;AAWlCG,IAAAA,OAAO,CAAEnB,KAAF,EAAU;AACf,YAAMoB,OAAO,GAAGpB,KAAK,CAACqB,YAAN,CAAoB,WAApB,CAAhB;AACAtB,MAAAA,aAAa,CAAEC,KAAF,EAASC,IAAT,EAAemB,OAAO,CAACE,eAAR,CAAyB,aAAzB,CAAf,CAAb;AACD,KAdiC;;AAgBlCC,IAAAA,iBAAiB,CAAEvB,KAAF,EAAU;AACzB,YAAMK,EAAE,GAAI,2BAA0BW,gBAAiB,EAAvD;AACA,YAAMQ,OAAO,GAAGxB,KAAK,CAACyB,MAAN,CAAcpB,EAAd,EAAkB,QAAlB,CAAhB;AACAmB,MAAAA,OAAO,CAACE,QAAR,CAAkBb,YAAlB,EAAgC,cAAhC;AACAW,MAAAA,OAAO,CAACE,QAAR,CAAkBZ,kBAAlB,EAAsC,oBAAtC;AACAU,MAAAA,OAAO,CAACE,QAAR,CAAkBX,cAAlB,EAAkC,gBAAlC;AACAS,MAAAA,OAAO,CAACE,QAAR,CAAkBrB,EAAlB,EAAsB,IAAtB;;AAEA,YAAMH,WAAW,GAAGF,KAAK,CAACyB,MAAN;AACjB,sCAA+BT,gBAAiB,EAD/B;AAElB,mBAFkB,CAApB;;AAIAd,MAAAA,WAAW,CAACyB,eAAZ,CAA6BH,OAA7B,EAAsC,MAAtC;;AAEAzB,MAAAA,aAAa,CAAEC,KAAF,EAASC,IAAT,EAAeC,WAAf,CAAb;AACD,KA/BiC,EAA7B,CAAP;;AAiCD,C;;AAEc,EAAES,MAAF,E","sourcesContent":["// @flow weak\n\nimport { commitMutation, graphql } from 'react-relay'\nimport { ConnectionHandler } from 'relay-runtime'\n\nconst mutation = graphql`\n  mutation EnsayoAddMutation($input: EnsayoAddInput!) {\n    EnsayoAdd(input: $input) {\n      Viewer {\n        id\n      }\n      EnsayosEdge {\n        cursor\n        node {\n          id\n          Ensayo_Title\n          Ensayo_Description\n          Ensayo_Content\n        }\n      }\n    }\n  }\n`\n\nfunction sharedUpdater( store, user, EnsayosEdge ) {\n  const userProxy = store.get( user.id )\n\n  const connection = ConnectionHandler.getConnection(\n    userProxy,\n    'EnsayoList_Ensayos'\n  )\n  if ( connection ) {\n    ConnectionHandler.insertEdgeAfter( connection, EnsayosEdge )\n  }\n}\n\nlet nextClientMutationId = 0\n\nfunction commit(\n  environment,\n  user,\n  Ensayo_Title,\n  Ensayo_Description,\n  Ensayo_Content\n) {\n  const clientMutationId = nextClientMutationId++\n\n  return commitMutation( environment, {\n    mutation,\n    variables: {\n      input: {\n        Ensayo_Title,\n        Ensayo_Description,\n        Ensayo_Content,\n        clientMutationId,\n      },\n    },\n\n    updater( store ) {\n      const payload = store.getRootField( 'EnsayoAdd' )\n      sharedUpdater( store, user, payload.getLinkedRecord( 'EnsayosEdge' ) )\n    },\n\n    optimisticUpdater( store ) {\n      const id = `client:EnsayoAdd:Ensayo:${clientMutationId}`\n      const aEnsayo = store.create( id, 'Ensayo' )\n      aEnsayo.setValue( Ensayo_Title, 'Ensayo_Title' )\n      aEnsayo.setValue( Ensayo_Description, 'Ensayo_Description' )\n      aEnsayo.setValue( Ensayo_Content, 'Ensayo_Content' )\n      aEnsayo.setValue( id, 'id' )\n\n      const EnsayosEdge = store.create(\n        `client:EnsayoAdd:EnsayosEdge:${clientMutationId}`,\n        'EnsayosEdge'\n      )\n      EnsayosEdge.setLinkedRecord( aEnsayo, 'node' )\n\n      sharedUpdater( store, user, EnsayosEdge )\n    },\n  })\n}\n\nexport default { commit }\n"],"file":"EnsayoAddMutation.js"}