{"version":3,"sources":["../../../units/rb-base-server/serverNightlyMaintenance.js"],"names":["require","config","serverNightlyMaintenance","serverNightlyMaintenanceExtenders_async","nightlyMaintenance_async","req","objectManager","executionStatus","step","Error","err","nightlyMaintenance","res","query","secret","process","env","REBAR_INTERNAL_CALL_SECRET","siteInformation","json","success","status","error","get"],"mappings":";;;;AAIA;;AAEA;AACA;AACA,yF,49BANA;;AAQA;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA;;AAEA,MAAMC,wBAAwB,GAAGC,6CAA0C,uBAA1C,GAAsD,IAAvF;;AAEA;;AAEA,eAAeC,wBAAf,CAAwCC,GAAxC,EAA6CC,aAA7C,EAA2E;AACzE,QAAMC,eAAe,GAAG,EAAEC,IAAI,EAAE,YAAR,EAAxB;;AAEA,MAAI;AACF,QAAI,CAACL,0CAAL,EAA8C,MAAM,IAAIM,KAAJ,EAAN;;AAE9C,sBAAI,MAAJ,EAAY,gDAAZ,EAA8D,EAAEJ,GAAF,EAA9D;;AAEA,UAAM,gDAAwCC,aAAxC,EAAuDC,eAAvD,CAAN;;AAEA,sBAAI,MAAJ,EAAY,gEAAZ,EAA8E,EAAEF,GAAF,EAA9E;AACD,GARD,CAQE,OAAOK,GAAP,EAAY;AACZ,sBAAI,OAAJ,EAAa,2DAAb,EAA0E;AACxEA,MAAAA,GADwE;AAExEH,MAAAA,eAFwE;AAGxEF,MAAAA,GAHwE,EAA1E;;AAKD;AACF;;AAED;;AAEA,eAAeM,kBAAf,CAAkCN,GAAlC,EAAuCO,GAAvC,EAA4C;AAC1C,MAAI;AACF;AACA,QAAIP,GAAG,CAACQ,KAAJ,CAAUC,MAAV,KAAqBC,OAAO,CAACC,GAAR,CAAYC,0BAArC,EAAiE;AAC/D,YAAM,IAAIR,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,UAAMH,aAAa,GAAG,MAAM,qCAAiBD,GAAjB,EAAsBO,GAAtB,CAA5B;;AAEA,QAAI,CAACN,aAAa,CAACY,eAAnB,EAAoC;AAClC,YAAM,IAAIT,KAAJ,CAAU,4BAAV,CAAN;AACD;;AAED;AACAL,IAAAA,wBAAwB,CAACC,GAAD,EAAMC,aAAN,CAAxB;;AAEAM,IAAAA,GAAG,CAACO,IAAJ,CAAS,EAAEC,OAAO,EAAE,IAAX,EAAT;AACD,GAhBD,CAgBE,OAAOV,GAAP,EAAY;AACZ,sBAAI,OAAJ,EAAa,wDAAb,EAAuE;AACrEA,MAAAA,GADqE;AAErEL,MAAAA,GAFqE,EAAvE;;AAIAO,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACnBG,MAAAA,KAAK,EAAE,4CADY;AAEnBF,MAAAA,OAAO,EAAE,KAFU,EAArB;;AAID;AACF;;AAED,IAAIlB,wBAAJ,EAA8B;AAC5BA,EAAAA,wBAAwB,CAACqB,GAAzB,CAA6B,QAA7B,EAAuCZ,kBAAvC;AACD,C;;AAEcT,wB","sourcesContent":["// @flow\n\n// curl http://localhost:28603/serverNightlyMaintenance/start?secret=7IG5NRoy7JIQM96MtE8115VRNQgX8qpfs0uRh5IaMPSCjqj8XC2MKW2kS0fbNZxI02rkaDtqYCarczVcGH20WtKzUVm2Z9jromJw9QhmUSi4PGx92LikqN\n\nimport express from 'express'\n\nimport serverNightlyMaintenanceExtenders_async from '../_configuration/rb-base-server/serverNightlyMaintenanceExtenders'\nimport log from '../rb-base-server/log'\nimport ObjectManager, { getObjectManager } from '../rb-base-server/ObjectManager'\n\n// Read environment\nrequire('dotenv').config()\n\n//\n\nconst serverNightlyMaintenance = serverNightlyMaintenanceExtenders_async ? express() : null\n\n//\n\nasync function nightlyMaintenance_async(req, objectManager: ObjectManager) {\n  const executionStatus = { step: 'initialize' }\n\n  try {\n    if (!serverNightlyMaintenanceExtenders_async) throw new Error()\n\n    log('info', 'rb-base-server serverNightlyMaintenance: start', { req })\n\n    await serverNightlyMaintenanceExtenders_async(objectManager, executionStatus)\n\n    log('info', 'rb-base-server serverNightlyMaintenance: finished successfully', { req })\n  } catch (err) {\n    log('error', 'rb-base-server serverNightlyMaintenance execution: Failed', {\n      err,\n      executionStatus,\n      req,\n    })\n  }\n}\n\n//\n\nasync function nightlyMaintenance(req, res) {\n  try {\n    //  Check password\n    if (req.query.secret !== process.env.REBAR_INTERNAL_CALL_SECRET) {\n      throw new Error('Please provide secret')\n    }\n\n    const objectManager = await getObjectManager(req, res)\n\n    if (!objectManager.siteInformation) {\n      throw new Error('Site information not found')\n    }\n\n    // Notice that we will not wait for this to finish\n    nightlyMaintenance_async(req, objectManager)\n\n    res.json({ success: true })\n  } catch (err) {\n    log('error', 'rb-base-server serverNightlyMaintenance launch: Failed', {\n      err,\n      req,\n    })\n    res.status(500).json({\n      error: 'Could not execute serverNightlyMaintenance',\n      success: false,\n    })\n  }\n}\n\nif (serverNightlyMaintenance) {\n  serverNightlyMaintenance.get('/start', nightlyMaintenance)\n}\n\nexport default serverNightlyMaintenance\n"],"file":"serverNightlyMaintenance.js"}