{"version":3,"sources":["../../../units/rb-base-server/defaultRequestLoggerPublic.js"],"names":["defaultrequestLoggerPublic","requestAndResponse","logLevel","debugWriteToLogServerRequestPublic","log","level","message","details"],"mappings":";;AAEA;AACA;AACA,oE,8FAJA;;AAMe,SAASA,0BAAT,CAAqCC,kBAArC,EAA0D;AACvE,MAAIC,QAAQ,GAAG,IAAf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK,2BAAcD,kBAAd,EAAkCE,yCAAlC,CAAL,EAA8ED,QAAQ,GAAG,MAAX;;AAE9E,MAAKA,QAAL,EAAgBE,aAAIA,GAAJ,CAAQ,EAAEC,KAAK,EAAEH,QAAT,EAAmBI,OAAO,EAAE,gBAA5B,EAA8CC,OAAO,EAAEN,kBAAvD,EAAR;AACjB","sourcesContent":["// @flow weak\n\nimport { debugWriteToLogServerRequestPublic } from '../_configuration/debug'\nimport matchInDepth from '../rb-base-universal/matchInDepth'\nimport log from '../rb-base-server/log'\n\nexport default function defaultrequestLoggerPublic( requestAndResponse ) {\n  let logLevel = null\n\n  // TODO: [2 Crossroads][server] Audit errors for Public and decide which ones to log. For instasnce, 401 is a bad idea.\n  // // If there is an error, log it as an error\n  // if( requestAndResponse.response.indexOf( '\"errors\": [' ) > 0 )\n  //   logLevel = 'error'\n  // Otherwise, if it is a trace, log it as info\n  //else\n  if ( matchInDepth( requestAndResponse, debugWriteToLogServerRequestPublic ) ) logLevel = 'info'\n\n  if ( logLevel ) log.log({ level: logLevel, message: 'Public request', details: requestAndResponse })\n}\n"],"file":"defaultRequestLoggerPublic.js"}