{"version":3,"sources":["../../../units/rb-base-server/ensurePathExists.js"],"names":["fs","fsWithCallbacks","promises","ensurePathExists","filePath","mkdir","err","code","NestedError"],"mappings":";;AAEA;;AAEA,gF;;AAEA,MAAMA,EAAE,GAAGC,YAAgBC,QAA3B;;AAEA;;AAEgCC,gB,GAAf,eAAeA,gBAAf,CAAiCC,QAAjC,EAAoD;AACnE,MAAI;AACF,UAAMJ,EAAE,CAACK,KAAH,CAAUD,QAAV,CAAN;AACD,GAFD,CAEE,OAAQE,GAAR,EAAc;AACd,QAAKA,GAAG,CAACC,IAAJ,KAAa,QAAlB,EAA6B;AAC3B,YAAM,IAAIC,0BAAJ,CAAiB,KAAjB,EAAwBF,GAAxB,CAAN;AACD;AACF;AACF,C","sourcesContent":["// @flow\n\nimport fsWithCallbacks from 'fs'\n\nimport NestedError from 'nested-error-stacks'\n\nconst fs = fsWithCallbacks.promises\n\n//\n\nexport default ( async function ensurePathExists( filePath: string ) {\n  try {\n    await fs.mkdir( filePath )\n  } catch ( err ) {\n    if ( err.code !== 'EEXIST' ) {\n      throw new NestedError( 'XXX', err )\n    }\n  }\n})\n"],"file":"ensurePathExists.js"}