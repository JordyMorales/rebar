{"version":3,"sources":["../../../../units/urb-example-inscriptio-webapp/components/InscriptioScreen.jsx"],"names":["MapComponent","props","defaultZoom","center","markers","map","marker","index","position","styles","card","minWidth","minHeight","InscriptioScreen","React","Component","constructor","context","isUnmounted","state","lat","lng","render","classes","siteConfiguration","googleMapURL","webapp","api","googleMapsJavascriptAPI","height"],"mappings":";;AAEA,8C;;AAEA,4D;;AAEA,0D;;AAEA;;AAEA,8B;AACA;AACA;;AAEA,kG;AACA,wG;;AAEA,MAAMA,eAAe;AACnB,oCAAeC;AACb,8BAAC,0BAAD,IAAW,aAAaA,MAAMC,WAA9B,EAA2C,QAAQD,MAAME,MAAzD;AACGF,QAAMG,OAAN,CAAcC,GAAd,CAAmB,CAAEC,MAAF,EAAUC,KAAV;AAClB,gCAAC,uBAAD,IAAQ,KAAKA,KAAb,EAAoB,UAAUD,OAAOE,QAArC,GADD,CADH,CADF,CADmB,CAArB;;;;;;AAUA,MAAMC,SAAS;AACbC,QAAM;AACJC,cAAU,GADN;AAEJC,eAAW,GAFP,EADO,EAAf;;;;AAOA,MAAMC,gBAAN,SAA+BC,gBAAMC,SAArC,CAA4F;AAC1FC,cAAaf,KAAb,EAA4BgB,OAA5B,EAA8C;AAC5C,UAAOhB,KAAP,EAAcgB,OAAd,EAD4C;;;;;;;;;;;AAY9CC,eAZ8C,GAYhC,KAZgC,CAG5C,KAAKC,KAAL,GAAa,EACXhB,QAAQ,EACNiB,KAAK,OADC,EAENC,KAAK,CAAC,OAFA,EADG,EAKXjB,SAAS,EALE,EAAb,CAOD;;AAIDkB,WAAS;AACP,UAAM,EAAEC,OAAF,KAAc,KAAKtB,KAAzB;;AAEA;AACE,oCAAC,+BAAD;AACE,sCAAC,cAAD,IAAM,WAAWsB,QAAQb,IAAzB;AACE,wCAAC,oBAAD,IAAY,OAAM,YAAlB,GADF;AAEE,wCAAC,qBAAD;AACE,0CAAC,kCAAD,CAA0B,QAA1B;AACGc,mCAAqB;AACpB;AACA,sBAAMC,eAAeD,kBAAkBE,MAAlB,CAAyBC,GAAzB,CAA6BC,uBAAlD;AACA;AACE,gDAAC,YAAD;AACE,iCAAa,EADf;AAEE,4BAAQ,KAAKT,KAAL,CAAWhB,MAFrB;AAGE,6BAAQ,cAHV;AAIE,kCAAcsB,YAJhB;AAKE,6BAAS,KAAKN,KAAL,CAAWf,OALtB;AAME,oCAAgB,wDANlB;AAOE,sCAAkB,uCAAK,OAAO,EAAEyB,QAAQ,GAAV,EAAZ,GAPpB;AAQE,gCAAY,uCAAK,OAAO,EAAEA,QAAQ,GAAV,EAAZ,GARd,GADF;;;AAYD,eAhBH,CADF,CAFF,CADF,CADF;;;;;;AA2BD,GA7CyF,C;;;AAgD7E;AACb,wBAAYpB,MAAZ,EAAsBI,gBAAtB,CADa,+F","file":"InscriptioScreen.js","sourcesContent":["// @flow\n\nimport Card from '@material-ui/core/Card'\n\nimport CardContent from '@material-ui/core/CardContent'\n\nimport CardHeader from '@material-ui/core/CardHeader'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport React from 'react'\nimport { GoogleMap, Marker, withGoogleMap, withScriptjs } from 'react-google-maps'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport ResponsiveContentArea from '../../urb-appbase-webapp/components/ResponsiveContentArea'\nimport SiteConfigurationContext from '../../urb-appbase-webapp/components/SiteConfigurationContext'\n\nconst MapComponent = withScriptjs(\n  withGoogleMap( props => (\n    <GoogleMap defaultZoom={props.defaultZoom} center={props.center}>\n      {props.markers.map( ( marker, index ) => (\n        <Marker key={index} position={marker.position} />\n      ) )}\n    </GoogleMap>\n  ) ),\n)\n\nconst styles = {\n  card: {\n    minWidth: 275,\n    minHeight: 400,\n  },\n}\n\nclass InscriptioScreen extends React.Component<{ classes: Object, Viewer: Object }, Object> {\n  constructor( props: Object, context: Object ) {\n    super( props, context )\n\n    this.state = {\n      center: {\n        lat: 34.0522,\n        lng: -118.243,\n      },\n      markers: [],\n    }\n  }\n\n  isUnmounted = false\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <ResponsiveContentArea>\n        <Card className={classes.card}>\n          <CardHeader title=\"Inscriptio\" />\n          <CardContent>\n            <SiteConfigurationContext.Consumer>\n              {siteConfiguration => {\n                // $AssureFlow\n                const googleMapURL = siteConfiguration.webapp.api.googleMapsJavascriptAPI\n                return (\n                  <MapComponent\n                    defaultZoom={16}\n                    center={this.state.center}\n                    content=\"Content here\"\n                    googleMapURL={googleMapURL}\n                    markers={this.state.markers}\n                    loadingElement={<div>Loading...</div>}\n                    containerElement={<div style={{ height: 400 }} />}\n                    mapElement={<div style={{ height: 400 }} />}\n                  />\n                )\n              }}\n            </SiteConfigurationContext.Consumer>\n          </CardContent>\n        </Card>\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles( styles )( InscriptioScreen ),\n  graphql`\n    fragment InscriptioScreen_Viewer on Viewer {\n      Inscriptios(first: 2147483647) @connection(key: \"InscriptioScreen_Inscriptios\") {\n        edges {\n          node {\n            id\n            Inscriptio_LocationLat\n            Inscriptio_LocationLon\n          }\n        }\n      }\n    }\n  `,\n)\n"]}