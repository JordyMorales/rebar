{"version":3,"sources":["../../../../units/urb-example-inscriptio-webapp/components/InscriptioScreen.jsx"],"names":["MapComponent","props","defaultZoom","center","markers","map","marker","index","position","styles","card","minWidth","minHeight","InscriptioScreen","React","Component","constructor","context","isUnmounted","state","lat","lng","render","classes","googleMapURL","rbCtx","siteConfiguration","webapp","api","googleMapsJavascriptAPI","console","log","height","contextTypes","PropTypes","object"],"mappings":";;AAEA,8C;;AAEA,4D;;AAEA,0D;;AAEA;;AAEA,uC;AACA,8B;AACA;AACA;;AAEA,+F;;AAEA,MAAMA,eAAe;AACnB,oCAAeC;AACb,8BAAC,0BAAD,IAAW,aAAaA,MAAMC,WAA9B,EAA2C,QAAQD,MAAME,MAAzD;AACGF,QAAMG,OAAN,CAAcC,GAAd,CAAmB,CAAEC,MAAF,EAAUC,KAAV,KAAqB,8BAAC,uBAAD,IAAQ,KAAKA,KAAb,EAAoB,UAAUD,OAAOE,QAArC,GAAxC,CADH,CADF,CADmB,CAArB;;;;;AAQA,MAAMC,SAAS;AACbC,QAAM;AACJC,cAAU,GADN;AAEJC,eAAW,GAFP,EADO,EAAf;;;;AAOA,MAAMC,gBAAN,SAA+BC,gBAAMC,SAArC,CAA4F;;;;;AAK1FC,cAAaf,KAAb,EAA4BgB,OAA5B,EAA8C;AAC5C,UAAOhB,KAAP,EAAcgB,OAAd,EAD4C;;;;;;;;;;;AAY9CC,eAZ8C,GAYhC,KAZgC,CAG5C,KAAKC,KAAL,GAAa,EACXhB,QAAQ,EACNiB,KAAK,OADC,EAENC,KAAK,CAAC,OAFA,EADG,EAKXjB,SAAS,EALE,EAAb,CAOD;;AAIDkB,WAAS;AACP,UAAM,EAAEC,OAAF,KAAc,KAAKtB,KAAzB;;AAEA,UAAMuB;AACJ;AACA,SAAKP,OAAL,CAAaQ,KAAb,CAAmBC,iBAAnB,CAAqCC,MAArC,CAA4CC,GAA5C,CAAgDC,uBAFlD;;AAIAC,YAAQC,GAAR,CAAaP,YAAb;;AAEA;AACE,oCAAC,+BAAD;AACE,sCAAC,cAAD,IAAM,WAAWD,QAAQb,IAAzB;AACE,wCAAC,oBAAD,IAAY,OAAM,YAAlB,GADF;AAEE,wCAAC,qBAAD;AACE,0CAAC,YAAD;AACE,2BAAa,EADf;AAEE,sBAAQ,KAAKS,KAAL,CAAWhB,MAFrB;AAGE,uBAAQ,cAHV;AAIE,4BAAcqB,YAJhB;AAKE,uBAAS,KAAKL,KAAL,CAAWf,OALtB;AAME,8BAAgB,wDANlB;AAOE,gCAAkB,uCAAK,OAAO,EAAE4B,QAAQ,GAAV,EAAZ,GAPpB;AAQE,0BAAY,uCAAK,OAAO,EAAEA,QAAQ,GAAV,EAAZ,GARd,GADF,CAFF,CADF,CADF;;;;;;AAmBD,GA/CyF,CAAtFnB,gB,CACGoB,Y,GAAe,EACpBR,OAAOS,oBAAUC,MADG,E;;;AAiDT;AACb,wBAAY1B,MAAZ,EAAsBI,gBAAtB,CADa,+F","file":"InscriptioScreen.js","sourcesContent":["// @flow\n\nimport Card from '@material-ui/core/Card'\n\nimport CardContent from '@material-ui/core/CardContent'\n\nimport CardHeader from '@material-ui/core/CardHeader'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { GoogleMap, Marker, withGoogleMap, withScriptjs } from 'react-google-maps'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport ResponsiveContentArea from '../../urb-base-webapp/components/ResponsiveContentArea'\n\nconst MapComponent = withScriptjs(\n  withGoogleMap( props => (\n    <GoogleMap defaultZoom={props.defaultZoom} center={props.center}>\n      {props.markers.map( ( marker, index ) => <Marker key={index} position={marker.position} /> )}\n    </GoogleMap>\n  ) ),\n)\n\nconst styles = {\n  card: {\n    minWidth: 275,\n    minHeight: 400,\n  },\n}\n\nclass InscriptioScreen extends React.Component<{ classes: Object, Viewer: Object }, Object> {\n  static contextTypes = {\n    rbCtx: PropTypes.object,\n  }\n\n  constructor( props: Object, context: Object ) {\n    super( props, context )\n\n    this.state = {\n      center: {\n        lat: 34.0522,\n        lng: -118.243,\n      },\n      markers: [],\n    }\n  }\n\n  isUnmounted = false\n\n  render() {\n    const { classes } = this.props\n\n    const googleMapURL =\n      'https://maps.googleapis.com/maps/api/js?v=3.28&libraries=places,geometry&key=' +\n      this.context.rbCtx.siteConfiguration.webapp.api.googleMapsJavascriptAPI\n\n    console.log( googleMapURL )\n\n    return (\n      <ResponsiveContentArea>\n        <Card className={classes.card}>\n          <CardHeader title=\"Inscriptio\" />\n          <CardContent>\n            <MapComponent\n              defaultZoom={16}\n              center={this.state.center}\n              content=\"Content here\"\n              googleMapURL={googleMapURL}\n              markers={this.state.markers}\n              loadingElement={<div>Loading...</div>}\n              containerElement={<div style={{ height: 400 }} />}\n              mapElement={<div style={{ height: 400 }} />}\n            />\n          </CardContent>\n        </Card>\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles( styles )( InscriptioScreen ),\n  graphql`\n    fragment InscriptioScreen_Viewer on Viewer {\n      Inscriptios(first: 2147483647) @connection(key: \"InscriptioScreen_Inscriptios\") {\n        edges {\n          node {\n            id\n            Inscriptio_LocationLat\n            Inscriptio_LocationLon\n          }\n        }\n      }\n    }\n  `,\n)\n"]}