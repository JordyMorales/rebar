{"version":3,"sources":["../../../../units/rb-example-viewport-dimensions-webapp/components/ViewportDimensionsScreen.jsx"],"names":["styles","card","minWidth","ViewportDimensionsScreen","React","Component","render","classes","props","totalWidth","totalHeight","data","name","value","map","n","Viewer"],"mappings":";;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,6G;;AAEA,MAAMA,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,GADN,EADO,EAAf;;;;AAMA,MAAMC,wBAAN,SAAuCC,eAAMC;;;AAG1C;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM,EAAEC,OAAF,KAAc,KAAKC,KAAzB;;AAEA;AACE,mCAAC,8BAAD;AACE,mCAAC,wBAAD,CAAiB,QAAjB;AACG,OAAC,EAAEC,UAAF,EAAcC,WAAd,EAAD,KAAiC;AAChC,cAAMC,IAAI,GAAG;AACX,UAAEC,IAAI,EAAE,YAAR,EAAsBC,KAAK,EAAEJ,UAA7B,EADW;AAEX,UAAEG,IAAI,EAAE,aAAR,EAAuBC,KAAK,EAAEH,WAA9B,EAFW,CAAb;;;AAKA;AACE,uCAAC,aAAD,IAAM,SAAS,EAAEH,OAAO,CAACN,IAAzB;AACE,uCAAC,mBAAD,IAAY,KAAK,EAAC,qBAAlB,GADF;AAEE,uCAAC,cAAD;AACE,uCAAC,kBAAD;AACE,uCAAC,iBAAD;AACE,uCAAC,kBAAD,mBADF;AAEE,uCAAC,kBAAD,IAAW,KAAK,EAAC,OAAjB,YAFF,CADF,CADF;;;AAOE,uCAAC,kBAAD;AACGU,UAAAA,IAAI,CAACG,GAAL,CAASC,CAAC,IAAI;AACb;AACE,2CAAC,iBAAD,IAAU,GAAG,EAAEA,CAAC,CAACH,IAAjB;AACE,2CAAC,kBAAD,QAAYG,CAAC,CAACH,IAAd,CADF;AAEE,2CAAC,kBAAD,IAAW,KAAK,EAAC,OAAjB,IAA0BG,CAAC,CAACF,KAA5B,CAFF,CADF;;;AAMD,WAPA,CADH,CAPF,CAFF;;;AAoBE,uCAAC,oBAAD,OApBF,CADF;;;AAwBD,OA/BH,CADF,CADF;;;;AAqCD,GAzCA,C;;;AA4CY;AACb,wBAAWb,MAAX,EAAmBG,wBAAnB,CADa;AAEb;AACEa,EAAAA,MAAM,0FADR,EAFa,C","sourcesContent":["// @flow\n\nimport Card from '@material-ui/core/Card'\n\nimport CardContent from '@material-ui/core/CardContent'\n\nimport CardHeader from '@material-ui/core/CardHeader'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport Table from '@material-ui/core/Table'\n\nimport TableBody from '@material-ui/core/TableBody'\n\nimport TableCell from '@material-ui/core/TableCell'\n\nimport TableHead from '@material-ui/core/TableHead'\n\nimport TableRow from '@material-ui/core/TableRow'\n\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport ResponsiveContentArea from '../../rb-appbase-webapp/components/ResponsiveContentArea'\nimport ViewportContext from '../../rb-appbase-webapp/components/ViewportContext'\n\nconst styles = {\n  card: {\n    minWidth: 275\n  }\n}\n\nclass ViewportDimensionsScreen extends React.Component<{\n  classes: Object,\n  Viewer: Object\n}> {\n  render() {\n    const { classes } = this.props\n\n    return (\n      <ResponsiveContentArea>\n        <ViewportContext.Consumer>\n          {({ totalWidth, totalHeight }) => {\n            const data = [\n              { name: 'totalWidth', value: totalWidth },\n              { name: 'totalHeight', value: totalHeight }\n            ]\n\n            return (\n              <Card className={classes.card}>\n                <CardHeader title=\"Viewport Dimensions\" />\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Property</TableCell>\n                      <TableCell align=\"right\">Value</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {data.map(n => {\n                      return (\n                        <TableRow key={n.name}>\n                          <TableCell>{n.name}</TableCell>\n                          <TableCell align=\"right\">{n.value}</TableCell>\n                        </TableRow>\n                      )\n                    })}\n                  </TableBody>\n                </Table>\n                <CardContent />\n              </Card>\n            )\n          }}\n        </ViewportContext.Consumer>\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles(styles)(ViewportDimensionsScreen),\n  {\n    Viewer: graphql`\n      fragment ViewportDimensionsScreen_Viewer on Viewer {\n        id\n      }\n    `\n  }\n)\n"],"file":"ViewportDimensionsScreen.js"}