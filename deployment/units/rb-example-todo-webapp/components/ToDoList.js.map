{"version":3,"sources":["../../../../units/rb-example-todo-webapp/components/ToDoList.jsx"],"names":["styles","theme","ToDoList","React","Component","_handle_onClick_MarkAll","event","checked","match","relay","Viewer","props","status","params","ToDo_Complete","ToDoListUpdateMarkAllMutation","commit","environment","ToDos","_handle_onChange","tabsValue","router","url","push","renderTabs","render","ToDo_TotalCount","ToDo_CompletedCount","edges","map","node","id"],"mappings":";;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,8D;;AAEA,MAAMA,MAAM,GAAIC,KAAD,KAAY,EAAZ,CAAf;;AAEA,MAAMC,QAAN,SAAuBC,eAAMC;;;;;;;;;AAS3B;AACAC,IAAAA,uBADA,GAC0B,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC5C,YAAM,EAAEC,KAAF,EAASC,KAAT,EAAgBC,MAAhB,KAA2B,KAAKC,KAAtC;AACA,YAAM,EAAEC,MAAF,KAAaJ,KAAK,CAACK,MAAzB;AACA,YAAMC,aAAa,GAAGP,OAAtB;;AAEAQ,6CAA8BC,MAA9B;AACEP,MAAAA,KAAK,CAACQ,WADR;AAEEP,MAAAA,MAFF;AAGEA,MAAAA,MAAM,CAACQ,KAHT;AAIEJ,MAAAA,aAJF;AAKEF,MAAAA,MALF;;AAOD,KAbD;;AAeAO,IAAAA,gBAfA,GAemB,CAACb,KAAD,EAAQc,SAAR,KAAsB;AACvC,YAAM,EAAEC,MAAF,KAAa,KAAKV,KAAxB;;AAEA,YAAMW,GAAG;AACPF,MAAAA,SAAS,KAAK,CAAd;AACI,uBADJ;AAEIA,MAAAA,SAAS,KAAK,CAAd,GAAkB,cAAlB,GAAmC,OAHzC;;AAKAC,MAAAA,MAAM,CAACE,IAAP,CAAYD,GAAZ;AACD,KAxBD;;AA0BAE,EAAAA,UAAU,GAAG;AACX,UAAM,EAAEhB,KAAF,KAAY,KAAKG,KAAvB;AACA,UAAM,EAAEC,MAAF,KAAaJ,KAAK,CAACK,MAAzB;;AAEA,UAAMO,SAAS,GAAGR,MAAM,KAAK,QAAX,GAAsB,CAAtB,GAA0BA,MAAM,KAAK,WAAX,GAAyB,CAAzB,GAA6B,CAAzE;;AAEA;AACE,mCAAC,eAAD,IAAQ,QAAQ,EAAC,QAAjB;AACE,mCAAC,aAAD,IAAM,KAAK,EAAEQ,SAAb,EAAwB,QAAQ,EAAE,KAAKD,gBAAvC;AACE,mCAAC,YAAD,IAAK,KAAK,EAAC,KAAX,GADF;AAEE,mCAAC,YAAD,IAAK,KAAK,EAAC,QAAX,GAFF;AAGE,mCAAC,YAAD,IAAK,KAAK,EAAC,WAAX,GAHF,CADF,CADF;;;;AASD;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAM,EAAEf,MAAF,KAAa,KAAKC,KAAxB;AACA,UAAM,EAAEO,KAAF,EAASQ,eAAT,EAA0BC,mBAA1B,KAAkDjB,MAAxD;;AAEA,QAAI,CAACgB,eAAL,EAAsB;AACpB,aAAO,IAAP;AACD;;AAED;AACE;AACG,WAAKF,UAAL,EADH;AAEE,mCAAC,kBAAD,IAAW,GAAG,MAAd;AACE,mCAAC,yBAAD;AACE,QAAA,OAAO;AACL,qCAAC,iBAAD;AACE,UAAA,OAAO,EAAEE,eAAe,KAAKC,mBAD/B;AAEE,UAAA,QAAQ,EAAE,KAAKtB,uBAFjB,GAFJ;;;AAOE,QAAA,KAAK,EAAC,sBAPR,GADF,CAFF;;;AAaE,mCAAC,aAAD;AACGa,MAAAA,KAAK,CAACU,KAAN,CAAYC,GAAZ,CAAgB,CAAC,EAAEC,IAAF,EAAD;AACf,mCAAC,iBAAD,IAAU,GAAG,EAAEA,IAAI,CAACC,EAApB,EAAwB,MAAM,EAAErB,MAAhC,EAAwC,IAAI,EAAEoB,IAA9C,GADD,CADH,CAbF,CADF;;;;;AAqBD,GAxED,C;;;AA2Ea;AACb,wBAAW9B,MAAX,EAAmB,uBAAWE,QAAX,CAAnB,CADa;AAEb;AACEQ,EAAAA,MAAM,0EADR,EAFa,C","sourcesContent":["// @flow\n\nimport AppBar from '@material-ui/core/AppBar'\n\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport FormGroup from '@material-ui/core/FormGroup'\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nimport List from '@material-ui/core/List'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { withRouter } from 'found'\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport Tabs from '@material-ui/core/Tabs'\n\nimport Tab from '@material-ui/core/Tab'\n\nimport ToDoListUpdateMarkAllMutation from '../../rb-example-todo-client/relay/ToDoListUpdateMarkAllMutation'\n\nimport ToDoItem from './ToDoItem'\n\nconst styles = (theme) => ({})\n\nclass ToDoList extends React.Component<\n  {\n    classes: Object,\n    relay: Object,\n    match: { params: { status?: string } },\n    router: Object,\n    Viewer: Object,\n  },\n  null,\n> {\n  _handle_onClick_MarkAll = (event, checked) => {\n    const { match, relay, Viewer } = this.props\n    const { status } = match.params\n    const ToDo_Complete = checked\n\n    ToDoListUpdateMarkAllMutation.commit(\n      relay.environment,\n      Viewer,\n      Viewer.ToDos,\n      ToDo_Complete,\n      status,\n    )\n  }\n\n  _handle_onChange = (event, tabsValue) => {\n    const { router } = this.props\n\n    const url =\n      tabsValue === 2\n        ? '/todo/completed'\n        : tabsValue === 1 ? '/todo/active' : '/todo'\n\n    router.push(url)\n  }\n\n  renderTabs() {\n    const { match } = this.props\n    const { status } = match.params\n\n    const tabsValue = status === 'active' ? 1 : status === 'completed' ? 2 : 0\n\n    return (\n      <AppBar position=\"static\">\n        <Tabs value={tabsValue} onChange={this._handle_onChange}>\n          <Tab label=\"All\" />\n          <Tab label=\"Active\" />\n          <Tab label=\"Completed\" />\n        </Tabs>\n      </AppBar>\n    )\n  }\n\n  render() {\n    const { Viewer } = this.props\n    const { ToDos, ToDo_TotalCount, ToDo_CompletedCount } = Viewer\n\n    if (!ToDo_TotalCount) {\n      return null\n    }\n\n    return (\n      <div>\n        {this.renderTabs()}\n        <FormGroup row>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={ToDo_TotalCount === ToDo_CompletedCount}\n                onChange={this._handle_onClick_MarkAll}\n              />\n            }\n            label=\"Mark all as complete\"\n          />\n        </FormGroup>\n        <List>\n          {ToDos.edges.map(({ node }) => (\n            <ToDoItem key={node.id} Viewer={Viewer} ToDo={node} />\n          ))}\n        </List>\n      </div>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles(styles)(withRouter(ToDoList)),\n  {\n    Viewer: graphql`\n      fragment ToDoList_Viewer on Viewer {\n        ToDos(status: $status, first: 2147483647)\n          @connection(key: \"ToDoList_ToDos\") {\n          edges {\n            node {\n              id\n              ToDo_Complete\n              ...ToDoItem_ToDo\n            }\n          }\n        }\n        id\n        ToDo_TotalCount\n        ToDo_CompletedCount\n        ...ToDoItem_Viewer\n      }\n    `,\n  },\n)\n"],"file":"ToDoList.js"}