{"version":3,"sources":["../../../../units/rb-example-todo-webapp/components/ToDoList.jsx"],"names":["styles","theme","root","width","maxWidth","background","palette","paper","ToDoList","React","Component","_handle_onClick_MarkAll","event","checked","relay","Viewer","props","variables","context","ToDo_Complete","ToDoListUpdateMarkAllMutation","commit","environment","ToDos","status","_handle_onChange","tabsValue","url","router","push","renderTabs","render","ToDo_TotalCount","ToDo_CompletedCount","edges","map","node","id"],"mappings":";;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,8D;;AAEA,MAAMA,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,QAAQ,EAAE,GAFN;AAGJC,IAAAA,UAAU,EAAEJ,KAAK,CAACK,OAAN,CAAcD,UAAd,CAAyBE,KAHjC,EADiB,EAAL,CAApB;;;;AAQA,MAAMC,QAAN,SAAuBC,eAAMC;;;;;;;AAO3B;AACAC,IAAAA,uBADA,GAC0B,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC5C,YAAM,EAAEC,KAAF,EAASC,MAAT,KAAoB,KAAKC,KAA/B;AACA,YAAM,EAAEC,SAAF,KAAgB,KAAKC,OAAL,CAAaJ,KAAnC;AACA,YAAMK,aAAa,GAAGN,OAAtB;;AAEAO,6CAA8BC,MAA9B;AACEP,MAAAA,KAAK,CAACQ,WADR;AAEEP,MAAAA,MAFF;AAGEA,MAAAA,MAAM,CAACQ,KAHT;AAIEJ,MAAAA,aAJF;AAKEF,MAAAA,SAAS,CAACO,MALZ;;AAOD,KAbD;;AAeAC,IAAAA,gBAfA,GAemB,CAACb,KAAD,EAAQc,SAAR,KAAsB;AACvC,YAAMC,GAAG;AACPD,MAAAA,SAAS,KAAK,CAAd;AACI,uBADJ;AAEIA,MAAAA,SAAS,KAAK,CAAd;AACA,oBADA;AAEA,aALN;AAMA,WAAKR,OAAL,CAAaU,MAAb,CAAoBC,IAApB,CAAyBF,GAAzB;AACD,KAvBD;;AAyBAG,EAAAA,UAAU,GAAG;AACX,UAAMN,MAAM,GAAG,KAAKN,OAAL,CAAaJ,KAAb,CAAmBG,SAAnB,CAA6BO,MAA5C;AACA,UAAME,SAAS,GAAGF,MAAM,KAAK,QAAX,GAAsB,CAAtB,GAA0BA,MAAM,KAAK,WAAX,GAAyB,CAAzB,GAA6B,CAAzE;;AAEA;AACE,mCAAC,eAAD,IAAQ,QAAQ,EAAC,QAAjB;AACE,mCAAC,aAAD,IAAM,KAAK,EAAEE,SAAb,EAAwB,QAAQ,EAAE,KAAKD,gBAAvC;AACE,mCAAC,YAAD,IAAK,KAAK,EAAC,KAAX,GADF;AAEE,mCAAC,YAAD,IAAK,KAAK,EAAC,QAAX,GAFF;AAGE,mCAAC,YAAD,IAAK,KAAK,EAAC,WAAX,GAHF,CADF,CADF;;;;AASD;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAM,EAAEhB,MAAF,KAAa,KAAKC,KAAxB;AACA,UAAM,EAAEO,KAAF,EAASS,eAAT,EAA0BC,mBAA1B,KAAkDlB,MAAxD;;AAEA,QAAI,CAACiB,eAAL,EAAsB;AACpB,aAAO,IAAP;AACD;;AAED;AACE;AACG,WAAKF,UAAL,EADH;AAEE,mCAAC,kBAAD,IAAW,GAAG,MAAd;AACE,mCAAC,yBAAD;AACE,QAAA,OAAO;AACL,qCAAC,iBAAD;AACE,UAAA,OAAO,EAAEE,eAAe,KAAKC,mBAD/B;AAEE,UAAA,QAAQ,EAAE,KAAKtB,uBAFjB,GAFJ;;;AAOE,QAAA,KAAK,EAAC,sBAPR,GADF,CAFF;;;AAaE,mCAAC,aAAD;AACGY,MAAAA,KAAK,CAACW,KAAN,CAAYC,GAAZ,CAAgB,CAAC,EAAEC,IAAF,EAAD;AACf,mCAAC,iBAAD,IAAU,GAAG,EAAEA,IAAI,CAACC,EAApB,EAAwB,MAAM,EAAEtB,MAAhC,EAAwC,IAAI,EAAEqB,IAA9C,GADD,CADH,CAbF,CADF;;;;;AAqBD,GArED,C;;;AAwEa;AACb,wBAAWpC,MAAX,EAAmB,uBAAWQ,QAAX,CAAnB,CADa,2E","sourcesContent":["// @flow\n\nimport AppBar from '@material-ui/core/AppBar'\n\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport FormGroup from '@material-ui/core/FormGroup'\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nimport List from '@material-ui/core/List'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { withRouter } from 'found'\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport Tabs from '@material-ui/core/Tabs'\n\nimport Tab from '@material-ui/core/Tab'\n\nimport ToDoListUpdateMarkAllMutation from '../../rb-example-todo-client/relay/ToDoListUpdateMarkAllMutation'\n\nimport ToDoItem from './ToDoItem'\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    background: theme.palette.background.paper\n  }\n})\n\nclass ToDoList extends React.Component<\n  {\n    Viewer: Object,\n    relay: Object,\n    router: Object\n  },\n  null\n> {\n  _handle_onClick_MarkAll = (event, checked) => {\n    const { relay, Viewer } = this.props\n    const { variables } = this.context.relay\n    const ToDo_Complete = checked\n\n    ToDoListUpdateMarkAllMutation.commit(\n      relay.environment,\n      Viewer,\n      Viewer.ToDos,\n      ToDo_Complete,\n      variables.status\n    )\n  }\n\n  _handle_onChange = (event, tabsValue) => {\n    const url =\n      tabsValue === 2\n        ? '/todo/completed'\n        : tabsValue === 1\n        ? '/todo/active'\n        : '/todo'\n    this.context.router.push(url)\n  }\n\n  renderTabs() {\n    const status = this.context.relay.variables.status\n    const tabsValue = status === 'active' ? 1 : status === 'completed' ? 2 : 0\n\n    return (\n      <AppBar position=\"static\">\n        <Tabs value={tabsValue} onChange={this._handle_onChange}>\n          <Tab label=\"All\" />\n          <Tab label=\"Active\" />\n          <Tab label=\"Completed\" />\n        </Tabs>\n      </AppBar>\n    )\n  }\n\n  render() {\n    const { Viewer } = this.props\n    const { ToDos, ToDo_TotalCount, ToDo_CompletedCount } = Viewer\n\n    if (!ToDo_TotalCount) {\n      return null\n    }\n\n    return (\n      <div>\n        {this.renderTabs()}\n        <FormGroup row>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={ToDo_TotalCount === ToDo_CompletedCount}\n                onChange={this._handle_onClick_MarkAll}\n              />\n            }\n            label=\"Mark all as complete\"\n          />\n        </FormGroup>\n        <List>\n          {ToDos.edges.map(({ node }) => (\n            <ToDoItem key={node.id} Viewer={Viewer} ToDo={node} />\n          ))}\n        </List>\n      </div>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles(styles)(withRouter(ToDoList)),\n  graphql`\n    fragment ToDoList_Viewer on Viewer {\n      ToDos(status: $status, first: 2147483647)\n        @connection(key: \"ToDoList_ToDos\") {\n        edges {\n          node {\n            id\n            ToDo_Complete\n            ...ToDoItem_ToDo\n          }\n        }\n      }\n      id\n      ToDo_TotalCount\n      ToDo_CompletedCount\n      ...ToDoItem_Viewer\n    }\n  `\n)\n"],"file":"ToDoList.js"}