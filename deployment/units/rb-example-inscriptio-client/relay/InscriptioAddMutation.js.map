{"version":3,"sources":["../../../../units/rb-example-inscriptio-client/relay/InscriptioAddMutation.js"],"names":["mutation","sharedUpdater","store","user","InscriptiosEdge","userProxy","get","id","connection","ConnectionHandler","getConnection","insertEdgeAfter","nextClientMutationId","commit","environment","Inscriptio_LocationLat","Inscriptio_LocationLon","Inscriptio_Notes","clientMutationId","variables","input","updater","payload","getRootField","getLinkedRecord","optimisticUpdater","aInscriptio","create","setValue","setLinkedRecord"],"mappings":";;AAEA;AACA,6C,CAHA;;AAKA,MAAMA,QAAQ,iFAAd;;;;;;;;;;;;;;;;;;;AAmBA,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,eAApC,EAAqD;AACnD,QAAMC,SAAS,GAAGH,KAAK,CAACI,GAAN,CAAUH,IAAI,CAACI,EAAf,CAAlB;;AAEA,QAAMC,UAAU,GAAGC,gCAAkBC,aAAlB;AACjBL,EAAAA,SADiB;AAEjB,8BAFiB,CAAnB;;AAIA,MAAIG,UAAJ,EAAgB;AACdC,oCAAkBE,eAAlB,CAAkCH,UAAlC,EAA8CJ,eAA9C;AACD;AACF;;AAED,IAAIQ,oBAAoB,GAAG,CAA3B;;AAEA,SAASC,MAAT;AACEC,WADF;AAEEX,IAFF;AAGEY,sBAHF;AAIEC,sBAJF;AAKEC,gBALF;AAME;AACA,QAAMC,gBAAgB,GAAGN,oBAAoB,EAA7C;;AAEA,SAAO,gCAAeE,WAAf,EAA4B;AACjCd,IAAAA,QADiC;AAEjCmB,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AACLL,QAAAA,sBADK;AAELC,QAAAA,sBAFK;AAGLC,QAAAA,gBAHK;AAILC,QAAAA,gBAAgB,EAAG,GAAEA,gBAAiB,EAJjC,EADE,EAFsB;;;;AAWjCG,IAAAA,OAAO,CAACnB,KAAD,EAAQ;AACb,YAAMoB,OAAO,GAAGpB,KAAK,CAACqB,YAAN,CAAmB,eAAnB,CAAhB;AACAtB,MAAAA,aAAa,CAACC,KAAD,EAAQC,IAAR,EAAcmB,OAAO,CAACE,eAAR,CAAwB,iBAAxB,CAAd,CAAb;AACD,KAdgC;;AAgBjCC,IAAAA,iBAAiB,CAACvB,KAAD,EAAQ;AACvB,YAAMK,EAAE,GAAI,mCAAkCW,gBAAiB,EAA/D;AACA,YAAMQ,WAAW,GAAGxB,KAAK,CAACyB,MAAN,CAAapB,EAAb,EAAiB,YAAjB,CAApB;AACAmB,MAAAA,WAAW,CAACE,QAAZ,CAAqBb,sBAArB,EAA6C,wBAA7C;AACAW,MAAAA,WAAW,CAACE,QAAZ,CAAqBZ,sBAArB,EAA6C,wBAA7C;AACAU,MAAAA,WAAW,CAACE,QAAZ,CAAqBX,gBAArB,EAAuC,kBAAvC;AACAS,MAAAA,WAAW,CAACE,QAAZ,CAAqBrB,EAArB,EAAyB,IAAzB;;AAEA,YAAMH,eAAe,GAAGF,KAAK,CAACyB,MAAN;AACrB,8CAAuCT,gBAAiB,EADnC;AAEtB,uBAFsB,CAAxB;;AAIAd,MAAAA,eAAe,CAACyB,eAAhB,CAAgCH,WAAhC,EAA6C,MAA7C;;AAEAzB,MAAAA,aAAa,CAACC,KAAD,EAAQC,IAAR,EAAcC,eAAd,CAAb;AACD,KA/BgC,EAA5B,CAAP;;AAiCD,C;;AAEc,EAAES,MAAF,E","sourcesContent":["// @flow weak\n\nimport { commitMutation, graphql } from 'react-relay'\nimport { ConnectionHandler } from 'relay-runtime'\n\nconst mutation = graphql`\n  mutation InscriptioAddMutation($input: InscriptioAddInput!) {\n    InscriptioAdd(input: $input) {\n      Viewer {\n        id\n      }\n      InscriptiosEdge {\n        cursor\n        node {\n          id\n          Inscriptio_LocationLat\n          Inscriptio_LocationLon\n          Inscriptio_Notes\n        }\n      }\n    }\n  }\n`\n\nfunction sharedUpdater(store, user, InscriptiosEdge) {\n  const userProxy = store.get(user.id)\n\n  const connection = ConnectionHandler.getConnection(\n    userProxy,\n    'InscriptioList_Inscriptios',\n  )\n  if (connection) {\n    ConnectionHandler.insertEdgeAfter(connection, InscriptiosEdge)\n  }\n}\n\nlet nextClientMutationId = 0\n\nfunction commit(\n  environment,\n  user,\n  Inscriptio_LocationLat,\n  Inscriptio_LocationLon,\n  Inscriptio_Notes,\n) {\n  const clientMutationId = nextClientMutationId++\n\n  return commitMutation(environment, {\n    mutation,\n    variables: {\n      input: {\n        Inscriptio_LocationLat,\n        Inscriptio_LocationLon,\n        Inscriptio_Notes,\n        clientMutationId: `${clientMutationId}`,\n      },\n    },\n\n    updater(store) {\n      const payload = store.getRootField('InscriptioAdd')\n      sharedUpdater(store, user, payload.getLinkedRecord('InscriptiosEdge'))\n    },\n\n    optimisticUpdater(store) {\n      const id = `client:InscriptioAdd:Inscriptio:${clientMutationId}`\n      const aInscriptio = store.create(id, 'Inscriptio')\n      aInscriptio.setValue(Inscriptio_LocationLat, 'Inscriptio_LocationLat')\n      aInscriptio.setValue(Inscriptio_LocationLon, 'Inscriptio_LocationLon')\n      aInscriptio.setValue(Inscriptio_Notes, 'Inscriptio_Notes')\n      aInscriptio.setValue(id, 'id')\n\n      const InscriptiosEdge = store.create(\n        `client:InscriptioAdd:InscriptiosEdge:${clientMutationId}`,\n        'InscriptiosEdge',\n      )\n      InscriptiosEdge.setLinkedRecord(aInscriptio, 'node')\n\n      sharedUpdater(store, user, InscriptiosEdge)\n    },\n  })\n}\n\nexport default { commit }\n"],"file":"InscriptioAddMutation.js"}