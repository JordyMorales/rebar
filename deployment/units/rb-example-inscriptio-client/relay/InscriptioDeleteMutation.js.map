{"version":3,"sources":["../../../../units/rb-example-inscriptio-client/relay/InscriptioDeleteMutation.js"],"names":["mutation","sharedUpdater","store","user","deletedId","userProxy","get","id","connection","ConnectionHandler","getConnection","deleteNode","commit","environment","aInscriptio","variables","input","updater","payload","getRootField","getValue","optimisticUpdater"],"mappings":";;AAEA;AACA,6C,CAHA;;AAKA,MAAMA,QAAQ,oFAAd;;;;;;;;AAQA,SAASC,aAAT,CAAwBC,KAAxB,EAA+BC,IAA/B,EAAqCC,SAArC,EAAiD;AAC/C,QAAMC,SAAS,GAAGH,KAAK,CAACI,GAAN,CAAWH,IAAI,CAACI,EAAhB,CAAlB;;AAEA,QAAMC,UAAU,GAAGC,gCAAkBC,aAAlB,CAAiCL,SAAjC,EAA4C,4BAA5C,CAAnB;AACA,MAAKG,UAAL,EAAkB;AAChBC,oCAAkBE,UAAlB,CAA8BH,UAA9B,EAA0CJ,SAA1C;AACD;AACF;;AAED,SAASQ,MAAT,CAAiBC,WAAjB,EAA8BV,IAA9B,EAAoCW,WAApC,EAAkD;AAChD,SAAO,gCAAgBD,WAAhB,EAA6B;AAClCb,IAAAA,QADkC;AAElCe,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE,EAAET,EAAE,EAAEO,WAAW,CAACP,EAAlB,EADE,EAFuB;;;AAMlCU,IAAAA,OAAO,CAAEf,KAAF,EAAU;AACf,YAAMgB,OAAO,GAAGhB,KAAK,CAACiB,YAAN,CAAoB,kBAApB,CAAhB;AACAlB,MAAAA,aAAa,CAAEC,KAAF,EAASC,IAAT,EAAee,OAAO,CAACE,QAAR,CAAkB,WAAlB,CAAf,CAAb;AACD,KATiC;;AAWlCC,IAAAA,iBAAiB,CAAEnB,KAAF,EAAU;AACzBD,MAAAA,aAAa,CAAEC,KAAF,EAASC,IAAT,EAAeW,WAAW,CAACP,EAA3B,CAAb;AACD,KAbiC,EAA7B,CAAP;;AAeD,C;;AAEc,EAAEK,MAAF,E","sourcesContent":["// @flow weak\n\nimport { commitMutation, graphql } from 'react-relay'\nimport { ConnectionHandler } from 'relay-runtime'\n\nconst mutation = graphql`\n  mutation InscriptioDeleteMutation($input: InscriptioDeleteInput!) {\n    InscriptioDelete(input: $input) {\n      deletedId\n    }\n  }\n`\n\nfunction sharedUpdater( store, user, deletedId ) {\n  const userProxy = store.get( user.id )\n\n  const connection = ConnectionHandler.getConnection( userProxy, 'InscriptioList_Inscriptios' )\n  if ( connection ) {\n    ConnectionHandler.deleteNode( connection, deletedId )\n  }\n}\n\nfunction commit( environment, user, aInscriptio ) {\n  return commitMutation( environment, {\n    mutation,\n    variables: {\n      input: { id: aInscriptio.id },\n    },\n\n    updater( store ) {\n      const payload = store.getRootField( 'InscriptioDelete' )\n      sharedUpdater( store, user, payload.getValue( 'deletedId' ) )\n    },\n\n    optimisticUpdater( store ) {\n      sharedUpdater( store, user, aInscriptio.id )\n    },\n  })\n}\n\nexport default { commit }\n"],"file":"InscriptioDeleteMutation.js"}