{"version":3,"sources":["../../../units/urb-appbase-server/defaultRequestLoggerGraphQL.js"],"names":["defaultRequestLoggerGraphQL","requestAndResponse","logLevel","response","indexOf","debugWriteToLogServerRequestGraphQL","log"],"mappings":";;AAEA;AACA;AACA,0F,8FAJA;;AAMe,SAASA,2BAAT,CAAsCC,kBAAtC,EAA2D;AACxE,MAAIC,QAAQ,GAAG,IAAf;;AAEA;AACA,MAAKD,kBAAkB,CAACE,QAAnB,CAA4BC,OAA5B,CAAqC,aAArC,IAAuD,CAA5D,EAAgEF,QAAQ,GAAG,OAAX,CAAhE;AACK,MAAK,2BAAcD,kBAAd,EAAkCI,0CAAlC,CAAL;AACH;AACAH,IAAAA,QAAQ,GAAG,MAAX;;AAEF,MAAKA,QAAL,EAAgBI,aAAIA,GAAJ,CAASJ,QAAT,EAAmB,iBAAnB,EAAsCD,kBAAtC;AACjB","sourcesContent":["// @flow weak\n\nimport { debugWriteToLogServerRequestGraphQL } from '../_configuration/debug'\nimport log from '../urb-base-server/log'\nimport matchInDepth from '../urb-base-universal/matchInDepth'\n\nexport default function defaultRequestLoggerGraphQL( requestAndResponse ) {\n  let logLevel = null\n\n  // If there is an error, log it as an error\n  if ( requestAndResponse.response.indexOf( '\"errors\": [' ) > 0 ) logLevel = 'error'\n  else if ( matchInDepth( requestAndResponse, debugWriteToLogServerRequestGraphQL ) )\n    // Otherwise, if it is a trace, log it as info\n    logLevel = 'info'\n\n  if ( logLevel ) log.log( logLevel, 'GraphQL request', requestAndResponse )\n}\n"],"file":"defaultRequestLoggerGraphQL.js"}