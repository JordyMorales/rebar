{"version":3,"sources":["../../../../../units/urb-appbase-server/graphql/type/ViewerType.js"],"names":["GraphQLObjectType","name","interfaces","NodeInterface","isTypeOf","object","User","fields","id","User_IsAnonymous","type","GraphQLBoolean","resolve","obj","defaultPersister","uuidEquals","uuidNull","UserToken2","GraphQLString","User_DisplayName","User_Email","User_PhoneNumberMobile","ObjectUserPermissions","ObjectUserPermissionsConnection","connectionType","args","connectionArgs","ObjectUserPermission_Name","GraphQLNonNull","context","rootValue","objectManager","arr","getObjectList","ObjectUserPermission","ObjectUserPermissionType","GraphQLID","parent","local_id","uuidFromString","getOneObject","_materialized_view","ResourceUserAllowances","ResourceUserAllowancesConnection","ResourceUserAllowance","ResourceUserAllowanceType","_ViewerFields"],"mappings":"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","file":"ViewerType.js","sourcesContent":["// @flow\n\nimport {\n  GraphQLBoolean,\n  GraphQLID,\n  GraphQLNonNull,\n  GraphQLString,\n  GraphQLObjectType,\n} from 'graphql'\nimport { connectionArgs, connectionFromArray, fromGlobalId, globalIdField } from 'graphql-relay'\n\nimport defaultPersister from '../../../_configuration/urb-base-server/graphql/defaultPersister'\nimport NodeInterface from '../NodeInterface'\nimport _ViewerFields from '../../../_configuration/urb-base-server/graphql/_ViewerFields'\nimport User from '../../../_configuration/urb-base-server/graphql/model/User'\n\nimport ObjectUserPermissionsConnection from './ObjectUserPermissionsConnection'\nimport ObjectUserPermissionType from './ObjectUserPermissionType'\nimport ResourceUserAllowancesConnection from './ResourceUserAllowancesConnection'\nimport ResourceUserAllowanceType from './ResourceUserAllowanceType'\n\nexport default new GraphQLObjectType({\n  name: 'Viewer',\n  interfaces: [ NodeInterface ],\n  isTypeOf: object => object instanceof User,\n  fields: {\n    id: globalIdField( 'Viewer' ),\n    User_IsAnonymous: {\n      type: GraphQLBoolean,\n      resolve: obj => defaultPersister.uuidEquals( obj.id, defaultPersister.uuidNull() ),\n    },\n    UserToken2: { type: GraphQLString, resolve: obj => obj.UserToken2 },\n    User_DisplayName: {\n      type: GraphQLString,\n      resolve: obj => obj.User_DisplayName,\n    },\n    User_Email: { type: GraphQLString, resolve: obj => obj.User_Email },\n    User_PhoneNumberMobile: {\n      type: GraphQLString,\n      resolve: obj => obj.User_PhoneNumberMobile,\n    },\n\n    ObjectUserPermissions: {\n      type: ObjectUserPermissionsConnection.connectionType,\n\n      args: {\n        ...connectionArgs,\n        ObjectUserPermission_Name: { type: new GraphQLNonNull( GraphQLString ) },\n      },\n\n      resolve: async( obj, { ...args }, context, { rootValue: objectManager }) => {\n        const { ObjectUserPermission_Name } = args\n        const arr = await objectManager.getObjectList( 'ObjectUserPermission', {\n          ObjectUserPermission_Name,\n        })\n        return connectionFromArray( arr, args )\n      },\n    },\n\n    ObjectUserPermission: {\n      type: ObjectUserPermissionType,\n\n      args: { ...{ id: { type: GraphQLID } } },\n\n      resolve: async( parent, { id }, context, { rootValue: objectManager }) => {\n        const local_id = objectManager.uuidFromString( 'ObjectUserPermission', fromGlobalId( id ).id )\n\n        return await objectManager.getOneObject( 'ObjectUserPermission', {\n          id: local_id,\n          _materialized_view: 'ObjectUserPermission_by_ID',\n        })\n      },\n    },\n\n    ResourceUserAllowances: {\n      type: ResourceUserAllowancesConnection.connectionType,\n\n      args: { ...connectionArgs },\n\n      resolve: async( obj, { ...args }, context, { rootValue: objectManager }) => {\n        const arr = await objectManager.getObjectList( 'ResourceUserAllowance', {})\n        return connectionFromArray( arr, args )\n      },\n    },\n\n    ResourceUserAllowance: {\n      type: ResourceUserAllowanceType,\n\n      args: { ...{ id: { type: GraphQLID } } },\n\n      resolve: async( parent, { id }, context, { rootValue: objectManager }) => {\n        const local_id = objectManager.uuidFromString( 'ResourceUserAllowance', fromGlobalId( id ).id )\n\n        return await objectManager.getOneObject( 'ResourceUserAllowance', {\n          id: local_id,\n\n          _materialized_view: 'ResourceUserAllowance_by_ID',\n        })\n      },\n    },\n\n    ..._ViewerFields,\n  },\n})\n"]}