{"version":3,"sources":["../../../../units/rb-appbase-webapp/components/TextFieldWithError.jsx"],"names":["styles","TextFieldWithError","React","Component","render","errorText","id","label","onChange","value","props","isError"],"mappings":";;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sD;;AAEA,MAAMA,MAAM,GAAG,EAAf;;AAEA,MAAMC,kBAAN,SAAiCC,eAAMC;;;;;;;AAOpC;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM,EAAEC,SAAF,EAAaC,EAAb,EAAiBC,KAAjB,EAAwBC,QAAxB,EAAkCC,KAAlC,KAA4C,KAAKC,KAAvD;;AAEA,UAAMC,OAAO,GAAGN,SAAS,KAAK,EAA9B;;AAEA;AACA;AACE,mCAAC,oBAAD;AACE,QAAA,KAAK,EAAEM,OADT;AAEE,QAAA,SAAS,EAAE,IAFb;AAGE,QAAA,EAAE,EAAEL,EAHN;AAIE,QAAA,MAAM,EAAC,OAJT;AAKE,QAAA,OAAO,EAAC,UALV;;AAOE,mCAAC,mBAAD;AACE,QAAA,OAAO,EAAEK,OAAO,GAAG,aAAH,GAAmB,YADrC;AAEE,QAAA,MAAM,EAAC,OAFT;AAGE,QAAA,OAAO,EAAC,UAHV;;AAKGJ,MAAAA,KALH,CAPF;;AAcE,mCAAC,cAAD,IAAO,EAAE,EAAC,OAAV,EAAkB,KAAK,EAAEE,KAAzB,EAAgC,QAAQ,EAAED,QAA1C,GAdF;AAeE,mCAAC,uBAAD,QAAiBG,OAAO,GAAGN,SAAH,GAAe,EAAvC,CAfF,CADF;;;AAmBD,GA1BA,C;;;AA6BY,wBAAWL,MAAX,EAAmBC,kBAAnB,C","sourcesContent":["// @flow\n\nimport FormControl from '@material-ui/core/FormControl'\n\nimport FormHelperText from '@material-ui/core/FormHelperText'\n\nimport Input from '@material-ui/core/Input'\n\nimport InputLabel from '@material-ui/core/InputLabel'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport React from 'react'\n\nconst styles = {}\n\nclass TextFieldWithError extends React.Component<{\n  classes: Object,\n  errorText: string,\n  id: string,\n  label: string,\n  onChange: Function,\n  value: string\n}> {\n  render() {\n    const { errorText, id, label, onChange, value } = this.props\n\n    const isError = errorText !== ''\n\n    // TODO TextFieldWithError does not show outline border\n    return (\n      <FormControl\n        error={isError}\n        fullWidth={true}\n        id={id}\n        margin=\"dense\"\n        variant=\"outlined\"\n      >\n        <InputLabel\n          htmlFor={isError ? 'name-simple' : 'name-error'}\n          margin=\"dense\"\n          variant=\"outlined\"\n        >\n          {label}\n        </InputLabel>\n        <Input id=\"value\" value={value} onChange={onChange} />\n        <FormHelperText>{isError ? errorText : ''}</FormHelperText>\n      </FormControl>\n    )\n  }\n}\n\nexport default withStyles(styles)(TextFieldWithError)\n"],"file":"TextFieldWithError.js"}