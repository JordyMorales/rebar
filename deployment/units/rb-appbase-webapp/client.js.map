{"version":3,"sources":["../../../units/rb-appbase-webapp/client.js"],"names":["render","relayPayloads","siteConfiguration","window","__rebar_properties__","fetcher","FetcherClient","data","Viewer","UserToken2","resolver","Router","historyProtocol","BrowserProtocol","historyMiddlewares","routeConfig","contentComponent","document","location","href","ReactDOM","hydrate","getElementById"],"mappings":";;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA,0D,8FAhBA;AAeA;AAGA,MAAMA,MAAM,GAAG,2BAAa,EAAb;;AAEb;AAFF,CAGC,CAAE,YAAW;AACZ,QAAM,EAAEC,aAAF,EAAiBC,iBAAjB,KAAuCC,MAAM,CAACC,oBAApD;;AAEA;AACA,QAAMC,OAAO,GAAG,IAAIC,sBAAJ;AACd,qCADc;AAEdL,EAAAA,aAFc;AAGdA,EAAAA,aAAa,CAAC,CAAD,CAAb,CAAiBM,IAAjB,CAAsBC,MAAtB,CAA6BC,UAHf,CAAhB;;AAKA,QAAMC,QAAQ,GAAG,4BAAgBL,OAAhB,CAAjB;;AAEA,QAAMM,MAAM,GAAG,MAAM,uCAAyB;AAC5CC,IAAAA,eAAe,EAAE,IAAIC,wBAAJ,EAD2B;AAE5CC,IAAAA,kBAAkB,EAAlBA,0BAF4C;AAG5CC,IAAAA,WAAW,EAAE,yBAAab,iBAAb,CAH+B;AAI5CQ,IAAAA,QAJ4C;AAK5CV,IAAAA,MAL4C,EAAzB,CAArB;;;AAQA,QAAMgB,gBAAgB;AACpB,+BAAC,mBAAD,IAAY,iBAAiB,EAAEd,iBAA/B,EAAkD,GAAG,EAAEe,QAAQ,CAACC,QAAT,CAAkBC,IAAzE;AACE,+BAAC,MAAD,IAAQ,QAAQ,EAAET,QAAlB,GADF,CADF;;;;AAMAU,oBAASC,OAAT;AACEL,EAAAA,gBADF;AAEE;AACAC,EAAAA,QAAQ,CAACK,cAAT,CAAyB,MAAzB,CAHF;AAIE,QAAM;AACJ;AACA;AACA;AACA;AACA;AACA;AACD,GAXH;;AAaD,CAtCA","sourcesContent":["// @flow\n\n// In order to use ES7 async/await\nimport 'babel-polyfill'\n\nimport BrowserProtocol from 'farce/lib/BrowserProtocol'\nimport createInitialFarceRouter from 'found/lib/createInitialFarceRouter'\nimport createRender from 'found/lib/createRender'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport getGraphQLServerURL from '../_configuration/rb-appbase-webapp/getGraphQLServerURL'\nimport AppWrapper from '../_configuration/rb-appbase-webapp/AppWrapper'\n\nimport FetcherClient from './fetcherClient'\nimport { createResolver, historyMiddlewares, routeConfig } from './router'\n\n// Include global CSS used in all units. Will not be chunked\nimport '../_configuration/rb-appbase-webapp/global.css'\n\nconst render = createRender({})\n\n  //\n;( async() => {\n  const { relayPayloads, siteConfiguration } = window.__rebar_properties__\n\n  // eslint-disable-next-line no-underscore-dangle\n  const fetcher = new FetcherClient(\n    getGraphQLServerURL(),\n    relayPayloads,\n    relayPayloads[0].data.Viewer.UserToken2, // It is critical that the app frame has UserToken2 retrieved\n  )\n  const resolver = createResolver( fetcher )\n\n  const Router = await createInitialFarceRouter({\n    historyProtocol: new BrowserProtocol(),\n    historyMiddlewares,\n    routeConfig: routeConfig( siteConfiguration ),\n    resolver,\n    render,\n  })\n\n  const contentComponent = (\n    <AppWrapper siteConfiguration={siteConfiguration} url={document.location.href}>\n      <Router resolver={resolver} />\n    </AppWrapper>\n  )\n\n  ReactDOM.hydrate(\n    contentComponent,\n    // $AssureFlow\n    document.getElementById( 'root' ),\n    () => {\n      // TODO [2 Crossroads][Designer][webapp] Research if removal of styles if necessary\n      // Previous version of react required removing of JSS styles but the new one seems to handle\n      // them OK.\n      // // We don't need the static css any more once we have launched our application.\n      // const ssStyles = document.getElementById( 'server-side-styles' )\n      // ssStyles.parentNode.removeChild( ssStyles )\n    },\n  )\n})()\n"],"file":"client.js"}