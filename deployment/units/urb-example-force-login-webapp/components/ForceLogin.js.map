{"version":3,"sources":["../../../../units/urb-example-force-login-webapp/components/ForceLogin.jsx"],"names":["styles","theme","card","minWidth","ForceLogin","React","Component","render","classes","Viewer","props","User_IsAnonymous"],"mappings":";;AAEA,8C;;AAEA;;AAEA,8B;AACA;;AAEA,0D;;AAEA,+G;AACA,+F;;AAEA,MAAMA,SAASC,UAAU;AACvBC,QAAM;AACJC,cAAU,GADN,EADiB,EAAV,CAAf;;;;AAMA,MAAMC,UAAN,SAAyBC,gBAAMC,SAA/B,CAA8E;AAC5EC,WAAS;AACP,UAAM,EAAEC,OAAF,EAAWC,MAAX,KAAsB,KAAKC,KAAjC;;AAEA,QAAKD,OAAOE,gBAAZ,EAA+B,OAAO,8BAAC,gCAAD,OAAP;AAC/B;AADA;AAGE;AACE,sCAAC,+BAAD;AACE,wCAAC,cAAD,IAAM,WAAWH,QAAQN,IAAzB;AACE,0CAAC,gBAAD,IAAY,OAAM,iBAAlB,EAAoC,WAAU,iCAA9C,GADF;AAEE,0CAAC,iBAAD;AACE,4CAAC,oBAAD,IAAY,eAAZ,uCADF,CAFF,CADF,CADF;;;;;AAUH,GAjB2E,C;;;AAoB/D;AACb,wBAAYF,MAAZ,EAAsBI,UAAtB,CADa,yF","file":"ForceLogin.js","sourcesContent":["// @flow\n\nimport Card, { CardHeader, CardContent } from '@material-ui/core/Card'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport RequiresAuthenticationNotice from '../../urb-account-management-webapp/components/RequiresAuthentication'\nimport ResponsiveContentArea from '../../urb-base-webapp/components/ResponsiveContentArea'\n\nconst styles = theme => ({\n  card: {\n    minWidth: 275,\n  },\n})\n\nclass ForceLogin extends React.Component<{ classes: Object, Viewer: Object }> {\n  render() {\n    const { classes, Viewer } = this.props\n\n    if ( Viewer.User_IsAnonymous ) return <RequiresAuthenticationNotice />\n    // Anonymous users do not get to have a profile\n    else\n      return (\n        <ResponsiveContentArea>\n          <Card className={classes.card}>\n            <CardHeader title=\"Only Authorized\" subheader=\"Only users who log in see this.\" />\n            <CardContent>\n              <Typography paragraph>Content seen by authorized users</Typography>\n            </CardContent>\n          </Card>\n        </ResponsiveContentArea>\n      )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles( styles )( ForceLogin ),\n  graphql`\n    fragment ForceLogin_Viewer on Viewer {\n      User_IsAnonymous\n    }\n  `,\n)\n"]}