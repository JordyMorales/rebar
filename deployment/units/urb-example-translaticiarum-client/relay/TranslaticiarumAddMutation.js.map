{"version":3,"sources":["../../../../units/urb-example-translaticiarum-client/relay/TranslaticiarumAddMutation.js"],"names":["mutation","sharedUpdater","store","user","TranslaticiarumsEdge","userProxy","get","id","connection","ConnectionHandler","getConnection","insertEdgeAfter","nextClientMutationId","commit","environment","Translaticiarum_Start","Translaticiarum_Stop","Translaticiarum_Description","clientMutationId","variables","input","updater","payload","getRootField","getLinkedRecord","optimisticUpdater","aTranslaticiarum","create","setValue","setLinkedRecord"],"mappings":";;AAEA;AACA,6C,CAHA;;AAKA,MAAMA,8FAAN;;;;;;;;;;;;;;;;;;;AAmBA,SAASC,aAAT,CAAwBC,KAAxB,EAA+BC,IAA/B,EAAqCC,oBAArC,EAA4D;AAC1D,QAAMC,YAAYH,MAAMI,GAAN,CAAWH,KAAKI,EAAhB,CAAlB;;AAEA,QAAMC,aAAaC,gCAAkBC,aAAlB;AACjBL,WADiB;AAEjB,wCAFiB,CAAnB;;AAIA,MAAKG,UAAL,EAAkB;AAChBC,oCAAkBE,eAAlB,CAAmCH,UAAnC,EAA+CJ,oBAA/C;AACD;AACF;;AAED,IAAIQ,uBAAuB,CAA3B;;AAEA,SAASC,MAAT;AACEC,WADF;AAEEX,IAFF;AAGEY,qBAHF;AAIEC,oBAJF;AAKEC,2BALF;AAME;AACA,QAAMC,mBAAmBN,sBAAzB;;AAEA,SAAO,gCAAgBE,WAAhB,EAA6B;AAClCd,YADkC;AAElCmB,eAAW;AACTC,aAAO;AACLL,6BADK;AAELC,4BAFK;AAGLC,mCAHK;AAILC,wBAJK,EADE,EAFuB;;;;AAWlCG,YAASnB,KAAT,EAAiB;AACf,YAAMoB,UAAUpB,MAAMqB,YAAN,CAAoB,oBAApB,CAAhB;AACAtB;AACEC,WADF;AAEEC,UAFF;AAGEmB,cAAQE,eAAR,CAAyB,sBAAzB,CAHF;;AAKD,KAlBiC;;AAoBlCC,sBAAmBvB,KAAnB,EAA2B;AACzB,YAAMK,KAAM,6CAA4CW,gBAAiB,EAAzE;AACA,YAAMQ,mBAAmBxB,MAAMyB,MAAN,CAAcpB,EAAd,EAAkB,iBAAlB,CAAzB;AACAmB,uBAAiBE,QAAjB,CAA2Bb,qBAA3B,EAAkD,uBAAlD;AACAW,uBAAiBE,QAAjB,CAA2BZ,oBAA3B,EAAiD,sBAAjD;AACAU,uBAAiBE,QAAjB;AACEX,iCADF;AAEE,mCAFF;;AAIAS,uBAAiBE,QAAjB,CAA2BrB,EAA3B,EAA+B,IAA/B;;AAEA,YAAMH,uBAAuBF,MAAMyB,MAAN;AAC1B,wDAAiDT,gBAAiB,EADxC;AAE3B,4BAF2B,CAA7B;;AAIAd,2BAAqByB,eAArB,CAAsCH,gBAAtC,EAAwD,MAAxD;;AAEAzB,oBAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,oBAA5B;AACD,KAtCiC,EAA7B,CAAP;;AAwCD,C;;AAEc,EAAES,MAAF,E","file":"TranslaticiarumAddMutation.js","sourcesContent":["// @flow weak\n\nimport { commitMutation, graphql } from 'react-relay'\nimport { ConnectionHandler } from 'relay-runtime'\n\nconst mutation = graphql`\n  mutation TranslaticiarumAddMutation($input: TranslaticiarumAddInput!) {\n    TranslaticiarumAdd(input: $input) {\n      Viewer {\n        id\n      }\n      TranslaticiarumsEdge {\n        cursor\n        node {\n          id\n          Translaticiarum_Start\n          Translaticiarum_Stop\n          Translaticiarum_Description\n        }\n      }\n    }\n  }\n`\n\nfunction sharedUpdater( store, user, TranslaticiarumsEdge ) {\n  const userProxy = store.get( user.id )\n\n  const connection = ConnectionHandler.getConnection(\n    userProxy,\n    'TranslaticiarumList_Translaticiarums'\n  )\n  if ( connection ) {\n    ConnectionHandler.insertEdgeAfter( connection, TranslaticiarumsEdge )\n  }\n}\n\nlet nextClientMutationId = 0\n\nfunction commit(\n  environment,\n  user,\n  Translaticiarum_Start,\n  Translaticiarum_Stop,\n  Translaticiarum_Description\n) {\n  const clientMutationId = nextClientMutationId++\n\n  return commitMutation( environment, {\n    mutation,\n    variables: {\n      input: {\n        Translaticiarum_Start,\n        Translaticiarum_Stop,\n        Translaticiarum_Description,\n        clientMutationId,\n      },\n    },\n\n    updater( store ) {\n      const payload = store.getRootField( 'TranslaticiarumAdd' )\n      sharedUpdater(\n        store,\n        user,\n        payload.getLinkedRecord( 'TranslaticiarumsEdge' )\n      )\n    },\n\n    optimisticUpdater( store ) {\n      const id = `client:TranslaticiarumAdd:Translaticiarum:${clientMutationId}`\n      const aTranslaticiarum = store.create( id, 'Translaticiarum' )\n      aTranslaticiarum.setValue( Translaticiarum_Start, 'Translaticiarum_Start' )\n      aTranslaticiarum.setValue( Translaticiarum_Stop, 'Translaticiarum_Stop' )\n      aTranslaticiarum.setValue(\n        Translaticiarum_Description,\n        'Translaticiarum_Description'\n      )\n      aTranslaticiarum.setValue( id, 'id' )\n\n      const TranslaticiarumsEdge = store.create(\n        `client:TranslaticiarumAdd:TranslaticiarumsEdge:${clientMutationId}`,\n        'TranslaticiarumsEdge'\n      )\n      TranslaticiarumsEdge.setLinkedRecord( aTranslaticiarum, 'node' )\n\n      sharedUpdater( store, user, TranslaticiarumsEdge )\n    },\n  })\n}\n\nexport default { commit }\n"]}