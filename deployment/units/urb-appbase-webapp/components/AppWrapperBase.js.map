{"version":3,"sources":["../../../../units/urb-appbase-webapp/components/AppWrapperBase.jsx"],"names":["AppWrapperBase","React","Component","constructor","props","context","handle_onResize","totalWidth","window","innerWidth","totalHeight","innerHeight","setState","state","componentDidMount","createMUITheme","render","siteConfiguration","children"],"mappings":";;AAEA;;AAEA;AACA;;AAEA;AACA,4E;;AAEe,MAAMA,cAAN,SAA6BC,eAAMC;;;;;;;AAOhD;AACAC,EAAAA,WAAW,CAAEC,KAAF,EAAiBC,OAAjB,EAAmC;AAC5C,UAAOD,KAAP,EAAcC,OAAd,EAD4C;;;;;;;;;;;;;;AAe9CC,IAAAA,eAf8C,GAe5B,MAAM;AACtB,YAAMC,UAAU,GAAGC,MAAM,CAACC,UAA1B;AACA,YAAMC,WAAW,GAAGF,MAAM,CAACG,WAA3B;;AAEA,WAAKC,QAAL,CAAc,EAAEL,UAAF,EAAcG,WAAd,EAAd;AACD,KApB6C,CAG5C,KAAKG,KAAL,GAAa,EAAEN,UAAU,EAAE,GAAd,EAAmBG,WAAW,EAAE,GAAhC,EAAb,CACD,CAEDI,iBAAiB,GAAG,CAClB,KAAKR,eAAL,GADkB,CACK;AACxB,GATD,CAWA;AACAS,EAAAA,cAAc,GAAG,CACf,OAAO,IAAP,CACD,CASDC,MAAM,GAAG;AACP,UAAM,EAAET,UAAF,EAAcG,WAAd,KAA8B,KAAKG,KAAzC;;AAEA;AACE,mCAAC,2BAAD,IAAe,MAAM,EAAC,QAAtB,EAA+B,QAAQ,EAAE,KAAKP,eAA9C;AACE,mCAAC,yBAAD,IAAkB,KAAK,EAAE,KAAKS,cAAL,EAAzB;AACE,mCAAC,wBAAD,CAAiB,QAAjB,IAA0B,KAAK,EAAE,EAAER,UAAF,EAAcG,WAAd,EAAjC;AACE,mCAAC,iCAAD,CAA0B,QAA1B,IAAmC,KAAK,EAAE,KAAKN,KAAL,CAAWa,iBAArD;AACG,WAAKb,KAAL,CAAWc,QADd,CADF,CADF,CADF,CADF;;;;;;AAWD,GArCD,C","sourcesContent":["// @flow\n\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\n\nimport React from 'react'\nimport EventListener from 'react-event-listener'\n\nimport SiteConfigurationContext from './SiteConfigurationContext'\nimport ViewportContext from './ViewportContext'\n\nexport default class AppWrapperBase extends React.Component<\n  {\n    siteConfiguration: Object,\n    children: any,\n    url: string,\n  },\n  { totalWidth: number, totalHeight: number },\n> {\n  constructor( props: Object, context: Object ) {\n    super( props, context )\n\n    this.state = { totalWidth: 100, totalHeight: 100 }\n  }\n\n  componentDidMount() {\n    this.handle_onResize() // Will populate the data structures for dimensions with current values\n  }\n\n  // This should be overridden in AppDrawer\n  createMUITheme() {\n    return null\n  }\n\n  handle_onResize = () => {\n    const totalWidth = window.innerWidth\n    const totalHeight = window.innerHeight\n\n    this.setState({ totalWidth, totalHeight })\n  }\n\n  render() {\n    const { totalWidth, totalHeight } = this.state\n\n    return (\n      <EventListener target=\"window\" onResize={this.handle_onResize}>\n        <MuiThemeProvider theme={this.createMUITheme()}>\n          <ViewportContext.Provider value={{ totalWidth, totalHeight }}>\n            <SiteConfigurationContext.Provider value={this.props.siteConfiguration}>\n              {this.props.children}\n            </SiteConfigurationContext.Provider>\n          </ViewportContext.Provider>\n        </MuiThemeProvider>\n      </EventListener>\n    )\n  }\n}\n"],"file":"AppWrapperBase.js"}