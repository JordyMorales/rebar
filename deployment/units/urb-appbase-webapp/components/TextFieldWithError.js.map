{"version":3,"sources":["../../../../units/urb-appbase-webapp/components/TextFieldWithError.jsx"],"names":["styles","theme","formControl","marginBottom","spacing","unit","TextFieldWithError","React","Component","render","classes","errorText","id","label","onChange","value","props","isError"],"mappings":";;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sD;;AAEA,MAAMA,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,YAAY,EAAEF,KAAK,CAACG,OAAN,CAAcC,IADjB,EADU,EAAL,CAApB;;;;AAMA,MAAMC,kBAAN,SAAiCC,eAAMC;;;;;;;AAOpC;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM,EAAEC,OAAF,EAAWC,SAAX,EAAsBC,EAAtB,EAA0BC,KAA1B,EAAiCC,QAAjC,EAA2CC,KAA3C,KAAqD,KAAKC,KAAhE;;AAEA,UAAMC,OAAO,GAAGN,SAAS,KAAK,EAA9B;;AAEA;AACE,mCAAC,oBAAD,IAAa,SAAS,EAAED,OAAO,CAACR,WAAhC,EAA6C,KAAK,EAAEe,OAApD,EAA6D,EAAE,EAAEL,EAAjE,EAAqE,SAAS,EAAE,IAAhF;AACE,mCAAC,mBAAD,IAAY,OAAO,EAAEK,OAAO,GAAG,aAAH,GAAmB,YAA/C,IAA8DJ,KAA9D,CADF;AAEE,mCAAC,cAAD,IAAO,EAAE,EAAC,OAAV,EAAkB,KAAK,EAAEE,KAAzB,EAAgC,QAAQ,EAAED,QAA1C,GAFF;AAGE,mCAAC,uBAAD,QAAiBG,OAAO,GAAGN,SAAH,GAAe,EAAvC,CAHF,CADF;;;AAOD,GAbA,C;;;AAgBY,wBAAYX,MAAZ,EAAsBM,kBAAtB,C","sourcesContent":["// @flow\n\nimport FormControl from '@material-ui/core/FormControl'\n\nimport FormHelperText from '@material-ui/core/FormHelperText'\n\nimport Input from '@material-ui/core/Input'\n\nimport InputLabel from '@material-ui/core/InputLabel'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport React from 'react'\n\nconst styles = theme => ({\n  formControl: {\n    marginBottom: theme.spacing.unit,\n  },\n})\n\nclass TextFieldWithError extends React.Component<{\n  classes: Object,\n  errorText: string,\n  id: string,\n  label: string,\n  onChange: Function,\n  value: string,\n}> {\n  render() {\n    const { classes, errorText, id, label, onChange, value } = this.props\n\n    const isError = errorText !== ''\n\n    return (\n      <FormControl className={classes.formControl} error={isError} id={id} fullWidth={true}>\n        <InputLabel htmlFor={isError ? 'name-simple' : 'name-error'}>{label}</InputLabel>\n        <Input id=\"value\" value={value} onChange={onChange} />\n        <FormHelperText>{isError ? errorText : ''}</FormHelperText>\n      </FormControl>\n    )\n  }\n}\n\nexport default withStyles( styles )( TextFieldWithError )\n"],"file":"TextFieldWithError.js"}