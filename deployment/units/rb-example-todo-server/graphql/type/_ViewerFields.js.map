{"version":3,"sources":["../../../../../units/rb-example-todo-server/graphql/type/_ViewerFields.js"],"names":["ToDos","type","ToDosConnection","connectionType","args","status","GraphQLString","defaultValue","connectionArgs","resolve","obj","context","rootValue","objectManager","arr","getObjectList_async","filter","a_ToDo","ToDo_Complete","ToDo_TotalCount","GraphQLInt","length","ToDo_CompletedCount"],"mappings":";;AAEA;AACA;;AAEA,4E,8FALA;;AAOe;AACbA,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAEC,yBAAgBC,cADjB;;AAGLC,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE;AACNJ,QAAAA,IAAI,EAAEK,sBADA;AAENC,QAAAA,YAAY,EAAE,KAFR,EADJ;;AAKJ,SAAGC,4BALC,EAHD;;;AAWLC,IAAAA,OAAO,EAAE,OAAOC,GAAP,EAAY,EAAEL,MAAF,EAAU,GAAGD,IAAb,EAAZ,EAAiCO,OAAjC,EAA0C,EAAEC,SAAS,EAAEC,aAAb,EAA1C,KAA2E;AAClF,YAAMC,GAAG,GAAG,MAAMD,aAAa,CAACE,mBAAd,CAAmC,MAAnC,EAA2C,EAA3C,CAAlB;;AAEA,aAAO;AACLD,MAAAA,GAAG,CAACE,MAAJ,CAAYC,MAAM,IAAIZ,MAAM,KAAK,KAAX,IAAoBY,MAAM,CAACC,aAAP,MAA2Bb,MAAM,KAAK,WAAtC,CAA1C,CADK;AAELD,MAAAA,IAFK,CAAP;;AAID,KAlBI,EADM;;;AAsBbe,EAAAA,eAAe,EAAE;AACflB,IAAAA,IAAI,EAAEmB,mBADS;;AAGfX,IAAAA,OAAO,EAAE,OAAOC,GAAP,EAAY,EAAE,GAAGN,IAAL,EAAZ,EAAyBO,OAAzB,EAAkC,EAAEC,SAAS,EAAEC,aAAb,EAAlC,KAAmE;AAC1E,YAAMC,GAAG,GAAG,MAAMD,aAAa,CAACE,mBAAd,CAAmC,MAAnC,EAA2C,EAA3C,CAAlB;;AAEA,aAAOD,GAAG,CAACO,MAAX;AACD,KAPc,EAtBJ;;;AAgCbC,EAAAA,mBAAmB,EAAE;AACnBrB,IAAAA,IAAI,EAAEmB,mBADa;;AAGnBX,IAAAA,OAAO,EAAE,OAAOC,GAAP,EAAY,EAAE,GAAGN,IAAL,EAAZ,EAAyBO,OAAzB,EAAkC,EAAEC,SAAS,EAAEC,aAAb,EAAlC,KAAmE;AAC1E,YAAMC,GAAG,GAAG,MAAMD,aAAa,CAACE,mBAAd,CAAmC,MAAnC,EAA2C,EAA3C,CAAlB;;AAEA,aAAOD,GAAG,CAACE,MAAJ,CAAYC,MAAM,IAAIA,MAAM,CAACC,aAA7B,EAA6CG,MAApD;AACD,KAPkB,EAhCR,E","sourcesContent":["// @flow weak\n\nimport { GraphQLInt, GraphQLString } from 'graphql'\nimport { connectionArgs, connectionFromArray } from 'graphql-relay'\n\nimport ToDosConnection from './ToDosConnection'\n\nexport default {\n  ToDos: {\n    type: ToDosConnection.connectionType,\n\n    args: {\n      status: {\n        type: GraphQLString,\n        defaultValue: 'any',\n      },\n      ...connectionArgs,\n    },\n\n    resolve: async( obj, { status, ...args }, context, { rootValue: objectManager }) => {\n      const arr = await objectManager.getObjectList_async( 'ToDo', {})\n\n      return connectionFromArray(\n        arr.filter( a_ToDo => status === 'any' || a_ToDo.ToDo_Complete === ( status === 'completed' ) ),\n        args,\n      )\n    },\n  },\n\n  ToDo_TotalCount: {\n    type: GraphQLInt,\n\n    resolve: async( obj, { ...args }, context, { rootValue: objectManager }) => {\n      const arr = await objectManager.getObjectList_async( 'ToDo', {})\n\n      return arr.length\n    },\n  },\n\n  ToDo_CompletedCount: {\n    type: GraphQLInt,\n\n    resolve: async( obj, { ...args }, context, { rootValue: objectManager }) => {\n      const arr = await objectManager.getObjectList_async( 'ToDo', {})\n\n      return arr.filter( a_ToDo => a_ToDo.ToDo_Complete ).length\n    },\n  },\n}\n"],"file":"_ViewerFields.js"}