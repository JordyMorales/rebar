{"version":3,"sources":["../../../../../units/rb-example-todo-server/graphql/mutation/ToDoUpdateRename.js"],"names":["name","inputFields","id","type","GraphQLNonNull","GraphQLID","ToDo_Text","GraphQLString","outputFields","ToDo","ToDoType","resolve","local_id","args","context","rootValue","objectManager","getOneObject_async","mutateAndGetPayload","update"],"mappings":";;AAEA;AACA;;AAEA,oE,8FALA;;AAOe,gDAA6B;AAC1CA,EAAAA,IAAI,EAAE,kBADoC;;AAG1CC,EAAAA,WAAW,EAAE;AACXC,IAAAA,EAAE,EAAE,EAAEC,IAAI,EAAE,IAAIC,uBAAJ,CAAoBC,kBAApB,CAAR,EADO;AAEXC,IAAAA,SAAS,EAAE,EAAEH,IAAI,EAAE,IAAIC,uBAAJ,CAAoBG,sBAApB,CAAR,EAFA,EAH6B;;;AAQ1CC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE;AACJN,MAAAA,IAAI,EAAEO,iBADF;AAEJC,MAAAA,OAAO,EAAE,CAAC,EAAEC,QAAF,EAAD,EAAe,EAAE,GAAGC,IAAL,EAAf,EAA4BC,OAA5B,EAAqC,EAAEC,SAAS,EAAEC,aAAb,EAArC;AACPA,MAAAA,aAAa,CAACC,kBAAd,CAAkC,MAAlC,EAA0C,EAAEf,EAAE,EAAEU,QAAN,EAA1C,CAHE,EADM,EAR4B;;;;AAgB1CM,EAAAA,mBAAmB,EAAE,OAAM,EAAEhB,EAAF,EAAMI,SAAN,EAAN,EAAyBQ,OAAzB,EAAkC,EAAEC,SAAS,EAAEC,aAAb,EAAlC,KAAmE;AACtF,UAAMJ,QAAQ,GAAG,gCAAcV,EAAd,EAAmBA,EAApC;;AAEA,UAAMc,aAAa,CAACG,MAAd,CAAsB,MAAtB,EAA8B;AAClCjB,MAAAA,EAAE,EAAEU,QAD8B;AAElCN,MAAAA,SAFkC,EAA9B,CAAN;;;AAKA,WAAO,EAAEM,QAAF,EAAP;AACD,GAzByC,EAA7B,C","sourcesContent":["// @flow weak\n\nimport { fromGlobalId, mutationWithClientMutationId } from 'graphql-relay'\nimport { GraphQLString, GraphQLID, GraphQLNonNull } from 'graphql'\n\nimport ToDoType from '../type/ToDoType'\n\nexport default mutationWithClientMutationId({\n  name: 'ToDoUpdateRename',\n\n  inputFields: {\n    id: { type: new GraphQLNonNull( GraphQLID ) },\n    ToDo_Text: { type: new GraphQLNonNull( GraphQLString ) },\n  },\n\n  outputFields: {\n    ToDo: {\n      type: ToDoType,\n      resolve: ({ local_id }, { ...args }, context, { rootValue: objectManager }) =>\n        objectManager.getOneObject_async( 'ToDo', { id: local_id }),\n    },\n  },\n\n  mutateAndGetPayload: async({ id, ToDo_Text }, context, { rootValue: objectManager }) => {\n    const local_id = fromGlobalId( id ).id\n\n    await objectManager.update( 'ToDo', {\n      id: local_id,\n      ToDo_Text,\n    })\n\n    return { local_id }\n  },\n})\n"],"file":"ToDoUpdateRename.js"}