{"version":3,"sources":["../../../../../units/rb-example-todo-server/graphql/mutation/ToDoAdd.js"],"names":["name","inputFields","ToDo_Text","type","GraphQLNonNull","GraphQLString","outputFields","ToDosEdge","ToDosConnection","edgeType","resolve","local_id","args","context","rootValue","objectManager","an_Object","getOneObject","id","arr","getObjectList","cursor","cursorForObjectInConnection","node","Viewer","ViewerType","parent","getViewerUserId","mutateAndGetPayload","add","ToDo_Complete"],"mappings":";;AAEA;AACA;;AAEA;AACA,iH,8FANA;;AAQe,gDAA6B;AAC1CA,EAAAA,IAAI,EAAE,SADoC;;AAG1CC,EAAAA,WAAW,EAAE;AACXC,IAAAA,SAAS,EAAE,EAAEC,IAAI,EAAE,IAAIC,uBAAJ,CAAoBC,sBAApB,CAAR,EADA,EAH6B;;;AAO1CC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAE;AACTJ,MAAAA,IAAI,EAAEK,yBAAgBC,QADb;AAETC,MAAAA,OAAO,EAAE,OAAM,EAAEC,QAAF,EAAN,EAAoB,EAAE,GAAGC,IAAL,EAApB,EAAiCC,OAAjC,EAA0C,EAAEC,SAAS,EAAEC,aAAb,EAA1C,KAA2E;AAClF,cAAMC,SAAS,GAAG,MAAMD,aAAa,CAACE,YAAd,CAA4B,MAA5B,EAAoC;AAC1DC,UAAAA,EAAE,EAAEP,QADsD,EAApC,CAAxB;;;AAIA,cAAMQ,GAAG,GAAG,MAAMJ,aAAa,CAACK,aAAd,CAA6B,MAA7B,EAAqC,EAArC,CAAlB;;AAEA,eAAO;AACLC,UAAAA,MAAM,EAAEN,aAAa,CAACO,2BAAd,CAA2C,MAA3C,EAAmDH,GAAnD,EAAwDH,SAAxD,CADH;AAELO,UAAAA,IAAI,EAAEP,SAFD,EAAP;;AAID,OAbQ,EADC;;;AAiBZQ,IAAAA,MAAM,EAAE;AACNrB,MAAAA,IAAI,EAAEsB,mBADA;AAENf,MAAAA,OAAO,EAAE,CAAEgB,MAAF,EAAUd,IAAV,EAAgBC,OAAhB,EAAyB,EAAEC,SAAS,EAAEC,aAAb,EAAzB;AACPA,MAAAA,aAAa,CAACE,YAAd,CAA4B,MAA5B,EAAoC;AAClCC,QAAAA,EAAE,EAAEH,aAAa,CAACY,eAAd,EAD8B,EAApC,CAHI,EAjBI,EAP4B;;;;;AAiC1CC,EAAAA,mBAAmB,EAAE,OAAM,EAAE1B,SAAF,EAAN,EAAqBW,OAArB,EAA8B,EAAEC,SAAS,EAAEC,aAAb,EAA9B,KAA+D;AAClF,UAAMJ,QAAQ,GAAG,MAAMI,aAAa,CAACc,GAAd,CAAmB,MAAnB,EAA2B;AAChD3B,MAAAA,SADgD;AAEhD4B,MAAAA,aAAa,EAAE,KAFiC,EAA3B,CAAvB;;AAIA,WAAO,EAAEnB,QAAF,EAAP;AACD,GAvCyC,EAA7B,C","sourcesContent":["// @flow weak\n\nimport { mutationWithClientMutationId } from 'graphql-relay'\nimport { GraphQLString, GraphQLNonNull } from 'graphql'\n\nimport ToDosConnection from '../type/ToDosConnection'\nimport ViewerType from '../../../../units/rb-appbase-server/graphql/type/ViewerType'\n\nexport default mutationWithClientMutationId({\n  name: 'ToDoAdd',\n\n  inputFields: {\n    ToDo_Text: { type: new GraphQLNonNull( GraphQLString ) },\n  },\n\n  outputFields: {\n    ToDosEdge: {\n      type: ToDosConnection.edgeType,\n      resolve: async({ local_id }, { ...args }, context, { rootValue: objectManager }) => {\n        const an_Object = await objectManager.getOneObject( 'ToDo', {\n          id: local_id,\n        })\n\n        const arr = await objectManager.getObjectList( 'ToDo', {})\n\n        return {\n          cursor: objectManager.cursorForObjectInConnection( 'ToDo', arr, an_Object ),\n          node: an_Object,\n        }\n      },\n    },\n\n    Viewer: {\n      type: ViewerType,\n      resolve: ( parent, args, context, { rootValue: objectManager }) =>\n        objectManager.getOneObject( 'User', {\n          id: objectManager.getViewerUserId(),\n        }),\n    },\n  },\n\n  mutateAndGetPayload: async({ ToDo_Text }, context, { rootValue: objectManager }) => {\n    const local_id = await objectManager.add( 'ToDo', {\n      ToDo_Text,\n      ToDo_Complete: false,\n    })\n    return { local_id }\n  },\n})\n"],"file":"ToDoAdd.js"}