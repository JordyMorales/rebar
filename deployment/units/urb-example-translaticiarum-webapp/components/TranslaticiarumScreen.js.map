{"version":3,"sources":["../../../../units/urb-example-translaticiarum-webapp/components/TranslaticiarumScreen.jsx"],"names":["BigCalendar","momentLocalizer","moment","styles","card","minWidth","TranslaticiarumScreen","React","Component","constructor","props","context","_handle_onView","view","setState","calendarView","_handle_onSelectSlot","slotInfo","console","log","state","render","classes","Viewer","translaticiarumEdges","Translaticiarums","edges","calendarEvents","map","translaticiarumEdge","translaticiarum","node","title","Translaticiarum_Description","start","Translaticiarum_Start","toDate","end","Translaticiarum_Stop","contextTypes","router","PropTypes","object"],"mappings":";;AAEA,8C;;AAEA,4D;;AAEA,0D;;AAEA;;AAEA,gC;AACA,uC;AACA,8B;AACA,sD;AACA;;AAEA,+F;;AAEAA,2BAAYC,eAAZ,CAA6BC,gBAA7B;;AAEA,MAAMC,SAAS;AACbC,QAAM;AACJC,cAAU,GADN;;;;AAKR;AACA;AACA;AARe,CAAf;AAUA,MAAMC,qBAAN,SAAoCC,gBAAMC;;;;;AAKxC;;;;;AAKAC,cAAaC,KAAb,EAA4BC,OAA5B,EAA8C;AAC5C,UAAOD,KAAP,EAAcC,OAAd,EAD4C;;;;;;;AAQ9CC,kBAR8C,GAQ7BC,QAAQ;AACvB,WAAKC,QAAL,CAAc,EAAEC,cAAcF,IAAhB,EAAd;AACD,KAV6C;;AAY9CG,wBAZ8C,GAYrBC,QAAF,IAA+D;AACpFC,cAAQC,GAAR,CAAaF,QAAb;AACD,KAd6C,CAG5C,KAAKG,KAAL,GAAa,EACXL,cAAc,MADH,EAAb,CAGD;;AAUDM,WAAS;AACP,UAAM,EAAEC,OAAF,EAAWC,MAAX,KAAsB,KAAKb,KAAjC;;AAEA,UAAMc,uBAAuBD,OAAOE,gBAAP,CAAwBC,KAArD;;AAEA,UAAMC,iBAAiBH,qBAAqBI,GAArB,CAA0BC,uBAAuB;AACtE,YAAMC,kBAAkBD,oBAAoBE,IAA5C;;AAEA,aAAO;AACLC,eAAOF,gBAAgBG,2BADlB;AAELC,eAAO,sBAAQJ,gBAAgBK,qBAAxB,EAAgDC,MAAhD,EAFF;AAGLC,aAAK,sBAAQP,gBAAgBQ,oBAAxB,EAA+CF,MAA/C,EAHA,EAAP;;AAKD,KARsB,CAAvB;;AAUAlB,YAAQC,GAAR,CAAa,KAAKC,KAAL,CAAWL,YAAxB;AACAG,YAAQC,GAAR,CAAaQ,cAAb;;AAEA;AACE,oCAAC,+BAAD;AACE,sCAAC,cAAD,IAAM,WAAWL,QAAQlB,IAAzB;AACE,wCAAC,oBAAD,IAAY,OAAM,iBAAlB,GADF;;AAGE,wCAAC,qBAAD;AACE,0CAAC,0BAAD;AACE,sBAAQuB,cADV;AAEE,oBAAM,KAAKP,KAAL,CAAWL,YAFnB;AAGE,sBAAQ,KAAKH,cAHf;AAIE,0BAAY,IAJd;AAKE,4BAAc,KAAKI,oBALrB,GADF,CAHF,CADF,CADF;;;;;;AAiBD,GAxDD,CALIV,qB,CAMGiC,Y,GAAe,EACpBC,QAAQC,oBAAUC,MADE,E;;;AA0DT;AACb,wBAAYvC,MAAZ,EAAsBG,qBAAtB,CADa,oG","file":"TranslaticiarumScreen.js","sourcesContent":["// @flow\n\nimport Card from '@material-ui/core/Card'\n\nimport CardContent from '@material-ui/core/CardContent'\n\nimport CardHeader from '@material-ui/core/CardHeader'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport moment from 'moment'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport BigCalendar from 'react-big-calendar'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport ResponsiveContentArea from '../../urb-base-webapp/components/ResponsiveContentArea'\n\nBigCalendar.momentLocalizer( moment )\n\nconst styles = {\n  card: {\n    minWidth: 275,\n  },\n}\n\n// truncate \"Translaticiarum\";\n// insert into \"Translaticiarum\"(id, \"Translaticiarum_User_id\", \"Translaticiarum_Description\",\"Translaticiarum_Start\", \"Translaticiarum_Stop\") values(0dba9aae-e84f-484a-9dc8-1a2be761c0ea, 00000000-0000-0000-0000-000000000000, 'item', '2017-09-09 10:00-0700', '2017-09-09 11:30-0700');\n// select * from \"Translaticiarum\";\n\nclass TranslaticiarumScreen extends React.Component<\n  any,\n  {\n    calendarView: 'month' | 'week' | 'day' | 'agenda',\n  },\n> {\n  static contextTypes = {\n    router: PropTypes.object,\n  }\n\n  constructor( props: Object, context: Object ) {\n    super( props, context )\n\n    this.state = {\n      calendarView: 'week',\n    }\n  }\n\n  _handle_onView = view => {\n    this.setState({ calendarView: view })\n  }\n\n  _handle_onSelectSlot = ( slotInfo: { start: Date, end: Date, slots: Array<Date> }) => {\n    console.log( slotInfo )\n  }\n\n  render() {\n    const { classes, Viewer } = this.props\n\n    const translaticiarumEdges = Viewer.Translaticiarums.edges\n\n    const calendarEvents = translaticiarumEdges.map( translaticiarumEdge => {\n      const translaticiarum = translaticiarumEdge.node\n\n      return {\n        title: translaticiarum.Translaticiarum_Description,\n        start: moment( translaticiarum.Translaticiarum_Start ).toDate(),\n        end: moment( translaticiarum.Translaticiarum_Stop ).toDate(),\n      }\n    })\n\n    console.log( this.state.calendarView )\n    console.log( calendarEvents )\n\n    return (\n      <ResponsiveContentArea>\n        <Card className={classes.card}>\n          <CardHeader title=\"Translaticiarum\" />\n\n          <CardContent>\n            <BigCalendar\n              events={calendarEvents}\n              view={this.state.calendarView}\n              onView={this._handle_onView}\n              selectable={true}\n              onSelectSlot={this._handle_onSelectSlot}\n            />\n          </CardContent>\n        </Card>\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles( styles )( TranslaticiarumScreen ),\n  graphql`\n    fragment TranslaticiarumScreen_Viewer on Viewer {\n      Translaticiarums(first: 2147483647)\n        @connection(key: \"TranslaticiarumScreen_Translaticiarums\") {\n        edges {\n          node {\n            id\n            Translaticiarum_Description\n            Translaticiarum_Start\n            Translaticiarum_Stop\n          }\n        }\n      }\n    }\n  `,\n)\n"]}