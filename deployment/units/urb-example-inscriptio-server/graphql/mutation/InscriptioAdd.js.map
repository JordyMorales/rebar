{"version":3,"sources":["../../../../../units/urb-example-inscriptio-server/graphql/mutation/InscriptioAdd.js"],"names":["name","inputFields","Inscriptio_LocationLat","type","GraphQLNonNull","GraphQLString","Inscriptio_LocationLon","Inscriptio_Notes","outputFields","InscriptiosEdge","InscriptiosConnection","edgeType","resolve","local_id","context","rootValue","objectManager","args","an_Object","getOneObject","id","arr","getObjectList","cursor","cursorForObjectInConnection","node","Viewer","ViewerType","parent","getViewerUserId","mutateAndGetPayload","add"],"mappings":";;AAEA;AACA;;AAEA,sE;AACA,uF,yWANA;;AAQe,gDAA6B;AAC1CA,QAAM,eADoC;;AAG1CC,eAAa;AACXC,4BAAwB,EAAEC,MAAM,IAAIC,uBAAJ,CAAoBC,sBAApB,CAAR,EADb;AAEXC,4BAAwB,EAAEH,MAAM,IAAIC,uBAAJ,CAAoBC,sBAApB,CAAR,EAFb;AAGXE,sBAAkB,EAAEJ,MAAM,IAAIC,uBAAJ,CAAoBC,sBAApB,CAAR,EAHP,EAH6B;;;AAS1CG,gBAAc;AACZC,qBAAiB;AACfN,YAAMO,gCAAsBC,QADb;AAEfC,eAAS,OAAM,EAAEC,QAAF,EAAN,QAAiCC,OAAjC,EAA0C,EAAEC,WAAWC,aAAb,EAA1C,KAA2E,KAAlDC,IAAkD;AAClF,cAAMC,YAAY,MAAMF,cAAcG,YAAd,CAA4B,YAA5B,EAA0C;AAChEC,cAAIP,QAD4D,EAA1C,CAAxB;;;AAIA,cAAMQ,MAAM,MAAML,cAAcM,aAAd,CAA6B,YAA7B,EAA2C,EAA3C,CAAlB;;AAEA,eAAO;AACLC,kBAAQP,cAAcQ,2BAAd,CAA2C,YAA3C,EAAyDH,GAAzD,EAA8DH,SAA9D,CADH;AAELO,gBAAMP,SAFD,EAAP;;AAID,OAbc,EADL;;;AAiBZQ,YAAQ;AACNvB,YAAMwB,oBADA;AAENf,eAAS,CAAEgB,MAAF,EAAUX,IAAV,EAAgBH,OAAhB,EAAyB,EAAEC,WAAWC,aAAb,EAAzB;AACPA,oBAAcG,YAAd,CAA4B,MAA5B,EAAoC;AAClCC,YAAIJ,cAAca,eAAd,EAD8B,EAApC,CAHI,EAjBI,EAT4B;;;;;AAmC1CC,uBAAqB;AACnB,IAAE5B,sBAAF,EAA0BI,sBAA1B,EAAkDC,gBAAlD,EADmB;AAEnBO,SAFmB;AAGnB,IAAEC,WAAWC,aAAb,EAHmB;AAIhB;AACH,UAAMH,WAAW,MAAMG,cAAce,GAAd,CAAmB,YAAnB,EAAiC;AACtD7B,4BADsD;AAEtDI,4BAFsD;AAGtDC,sBAHsD,EAAjC,CAAvB;;AAKA,WAAO,EAAEM,QAAF,EAAP;AACD,GA9CyC,EAA7B,C","file":"InscriptioAdd.js","sourcesContent":["// @flow weak\n\nimport { mutationWithClientMutationId } from 'graphql-relay'\nimport { GraphQLString, GraphQLNonNull } from 'graphql'\n\nimport InscriptiosConnection from '../type/InscriptiosConnection'\nimport ViewerType from '../../../../units/urb-base-server/graphql/type/ViewerType'\n\nexport default mutationWithClientMutationId({\n  name: 'InscriptioAdd',\n\n  inputFields: {\n    Inscriptio_LocationLat: { type: new GraphQLNonNull( GraphQLString ) },\n    Inscriptio_LocationLon: { type: new GraphQLNonNull( GraphQLString ) },\n    Inscriptio_Notes: { type: new GraphQLNonNull( GraphQLString ) },\n  },\n\n  outputFields: {\n    InscriptiosEdge: {\n      type: InscriptiosConnection.edgeType,\n      resolve: async({ local_id }, { ...args }, context, { rootValue: objectManager }) => {\n        const an_Object = await objectManager.getOneObject( 'Inscriptio', {\n          id: local_id,\n        })\n\n        const arr = await objectManager.getObjectList( 'Inscriptio', {})\n\n        return {\n          cursor: objectManager.cursorForObjectInConnection( 'Inscriptio', arr, an_Object ),\n          node: an_Object,\n        }\n      },\n    },\n\n    Viewer: {\n      type: ViewerType,\n      resolve: ( parent, args, context, { rootValue: objectManager }) =>\n        objectManager.getOneObject( 'User', {\n          id: objectManager.getViewerUserId(),\n        }),\n    },\n  },\n\n  mutateAndGetPayload: async(\n    { Inscriptio_LocationLat, Inscriptio_LocationLon, Inscriptio_Notes },\n    context,\n    { rootValue: objectManager },\n  ) => {\n    const local_id = await objectManager.add( 'Inscriptio', {\n      Inscriptio_LocationLat,\n      Inscriptio_LocationLon,\n      Inscriptio_Notes,\n    })\n    return { local_id }\n  },\n})\n"]}