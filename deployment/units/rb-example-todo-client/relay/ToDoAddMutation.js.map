{"version":3,"sources":["../../../../units/rb-example-todo-client/relay/ToDoAddMutation.js"],"names":["mutation","sharedUpdater","store","user","ToDosEdge","userProxy","get","id","forEach","status","connection","ConnectionHandler","getConnection","insertEdgeAfter","nextClientMutationId","commit","environment","ToDo_Text","clientMutationId","variables","input","updater","payload","getRootField","getLinkedRecord","optimisticUpdater","aToDo","create","setValue","setLinkedRecord","ToDo_TotalCount","getValue"],"mappings":";;AAEA;;;;;;;;AAQA,6C;;AAEA,MAAMA,QAAQ,yHAAd;;;;;;;;;;;;;;;;;;;;AAoBA,SAASC,aAAT;AACEC,KADF;AAEEC,IAFF;AAGEC,SAHF;AAIE;AACA,QAAMC,SAAS,GAAGH,KAAK,CAACI,GAAN,CAAUH,IAAI,CAACI,EAAf,CAAlB;AACC,GAAE,KAAF,EAAS,QAAT,EAAoBC,OAApB,CAA6BC,MAAD,IAAY;AACvC,UAAMC,UAAU,GAAGC,gCAAkBC,aAAlB;AACjBP,IAAAA,SADiB;AAEjB,oBAFiB;AAGjB,MAAEI,MAAF,EAHiB,CAAnB;;AAKA,QAAIC,UAAJ,EAAgB;AACdC,sCAAkBE,eAAlB,CAAkCH,UAAlC,EAA8CN,SAA9C;AACD;AACF,GATA;AAUF;;AAED,IAAIU,oBAAoB,GAAG,CAA3B;;AAEA,SAASC,MAAT;AACEC,WADF;AAEEb,IAFF;AAGEc,SAHF;AAIc;AACZ,QAAMC,gBAAgB,GAAGJ,oBAAoB,EAA7C;;AAEA,SAAO,gCAAeE,WAAf,EAA4B;AACjChB,IAAAA,QADiC;AAEjCmB,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE,EAAEH,SAAF,EAAaC,gBAAgB,EAAG,GAAEA,gBAAiB,EAAnD,EADE,EAFsB;;;AAMjCG,IAAAA,OAAO,CAACnB,KAAD,EAAQ;AACb,YAAMoB,OAAO,GAAGpB,KAAK,CAACqB,YAAN,CAAmB,SAAnB,CAAhB;AACAtB,MAAAA,aAAa,CAACC,KAAD,EAAQC,IAAR,EAAcmB,OAAO,CAACE,eAAR,CAAwB,WAAxB,CAAd,CAAb;AACD,KATgC;;AAWjCC,IAAAA,iBAAiB,CAACvB,KAAD,EAAQ;AACvB,YAAMK,EAAE,GAAI,uBAAsBW,gBAAiB,EAAnD;AACA,YAAMQ,KAAK,GAAGxB,KAAK,CAACyB,MAAN,CAAapB,EAAb,EAAiB,MAAjB,CAAd;AACAmB,MAAAA,KAAK,CAACE,QAAN,CAAeX,SAAf,EAA0B,WAA1B;AACAS,MAAAA,KAAK,CAACE,QAAN,CAAerB,EAAf,EAAmB,IAAnB;;AAEA,YAAMH,SAAS,GAAGF,KAAK,CAACyB,MAAN;AACf,kCAA2BT,gBAAiB,EAD7B;AAEhB,iBAFgB,CAAlB;;AAIAd,MAAAA,SAAS,CAACyB,eAAV,CAA0BH,KAA1B,EAAiC,MAAjC;;AAEAzB,MAAAA,aAAa,CAACC,KAAD,EAAQC,IAAR,EAAcC,SAAd,CAAb;;AAEA,YAAMC,SAAS,GAAGH,KAAK,CAACI,GAAN,CAAUH,IAAI,CAACI,EAAf,CAAlB;AACA,YAAMuB,eAAe,GAAGzB,SAAS,CAAC0B,QAAV,CAAmB,iBAAnB,CAAxB;AACA,UAAID,eAAe,IAAI,IAAvB,EAA6B;AAC3BzB,QAAAA,SAAS,CAACuB,QAAV,CAAmBE,eAAe,GAAG,CAArC,EAAwC,iBAAxC;AACD;AACF,KA9BgC,EAA5B,CAAP;;AAgCD,C;;AAEc,EAAEf,MAAF,E","sourcesContent":["// @flow\n\nimport {\n  commitMutation,\n  graphql,\n  type Disposable,\n  type Environment,\n  type RecordProxy,\n  type RecordSourceSelectorProxy,\n} from 'react-relay'\nimport { ConnectionHandler } from 'relay-runtime'\n\nconst mutation = graphql`\n  mutation ToDoAddMutation($input: ToDoAddInput!) {\n    ToDoAdd(input: $input) {\n      Viewer {\n        id\n        ToDo_TotalCount\n      }\n      ToDosEdge {\n        __typename\n        cursor\n        node {\n          id\n          ToDo_Complete\n          ToDo_Text\n        }\n      }\n    }\n  }\n`\n\nfunction sharedUpdater(\n  store: RecordSourceSelectorProxy,\n  user,\n  ToDosEdge: RecordProxy,\n) {\n  const userProxy = store.get(user.id)\n  ;[ 'any', 'active' ].forEach((status) => {\n    const connection = ConnectionHandler.getConnection(\n      userProxy,\n      'ToDoList_ToDos',\n      { status },\n    )\n    if (connection) {\n      ConnectionHandler.insertEdgeAfter(connection, ToDosEdge)\n    }\n  })\n}\n\nlet nextClientMutationId = 0\n\nfunction commit(\n  environment: Environment,\n  user: Object,\n  ToDo_Text: string,\n): Disposable {\n  const clientMutationId = nextClientMutationId++\n\n  return commitMutation(environment, {\n    mutation,\n    variables: {\n      input: { ToDo_Text, clientMutationId: `${clientMutationId}` },\n    },\n\n    updater(store) {\n      const payload = store.getRootField('ToDoAdd')\n      sharedUpdater(store, user, payload.getLinkedRecord('ToDosEdge'))\n    },\n\n    optimisticUpdater(store) {\n      const id = `client:ToDoAdd:ToDo:${clientMutationId}`\n      const aToDo = store.create(id, 'ToDo')\n      aToDo.setValue(ToDo_Text, 'ToDo_Text')\n      aToDo.setValue(id, 'id')\n\n      const ToDosEdge = store.create(\n        `client:ToDoAdd:ToDosEdge:${clientMutationId}`,\n        'ToDosEdge',\n      )\n      ToDosEdge.setLinkedRecord(aToDo, 'node')\n\n      sharedUpdater(store, user, ToDosEdge)\n\n      const userProxy = store.get(user.id)\n      const ToDo_TotalCount = userProxy.getValue('ToDo_TotalCount')\n      if (ToDo_TotalCount != null) {\n        userProxy.setValue(ToDo_TotalCount + 1, 'ToDo_TotalCount')\n      }\n    },\n  })\n}\n\nexport default { commit }\n"],"file":"ToDoAddMutation.js"}