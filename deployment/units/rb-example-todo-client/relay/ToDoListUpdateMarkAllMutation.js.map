{"version":3,"sources":["../../../../units/rb-example-todo-client/relay/ToDoListUpdateMarkAllMutation.js"],"names":["mutation","commit","environment","user","ToDos","ToDo_Complete","status","variables","input","updater","store","userProxy","get","id","connection","ConnectionHandler","getConnection","ToDosEdges","getRootField","getLinkedRecord","getLinkedRecords","setLinkedRecords","optimisticUpdater","optimisticResponse","payload","Viewer","ToDo_CompletedCount","changedToDos","edges","filter","node","map","ToDo_TotalCount","ToDoListUpdateMarkAll"],"mappings":";;AAEA;AACA,6C;;AAEA,MAAMA,QAAQ,iLAAd;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAASC,MAAT,CAAiBC,WAAjB,EAA8BC,IAA9B,EAAoCC,KAApC,EAA2CC,aAA3C,EAA0DC,MAA1D,EAAmE;AACjE,SAAO,gCAAgBJ,WAAhB,EAA6B;AAClCF,IAAAA,QADkC;AAElCO,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE,EAAEH,aAAF,EADE;AAETC,MAAAA,MAFS,EAFuB;;;AAOlCG,IAAAA,OAAO,CAAEC,KAAF,EAAU;AACf,YAAMC,SAAS,GAAGD,KAAK,CAACE,GAAN,CAAWT,IAAI,CAACU,EAAhB,CAAlB;AACA,YAAMC,UAAU,GAAGC,gCAAkBC,aAAlB,CAAiCL,SAAjC,EAA4C,gBAA5C,EAA8D,EAAEL,MAAF,EAA9D,CAAnB;AACA,YAAMW,UAAU,GAAGP,KAAK;AACrBQ,MAAAA,YADgB,CACF,uBADE;AAEhBC,MAAAA,eAFgB,CAEC,QAFD;AAGhBA,MAAAA,eAHgB,CAGC,OAHD,EAGU,EAAEb,MAAF,EAHV;AAIhBc,MAAAA,gBAJgB,CAIE,OAJF,CAAnB;AAKAN,MAAAA,UAAU,CAACO,gBAAX,CAA6BJ,UAA7B,EAAyC,OAAzC;AACD,KAhBiC;;AAkBlCK,IAAAA,iBAAiB,CAAEZ,KAAF,EAAU;AACzB,YAAMC,SAAS,GAAGD,KAAK,CAACE,GAAN,CAAWT,IAAI,CAACU,EAAhB,CAAlB;AACA,YAAMC,UAAU,GAAGC,gCAAkBC,aAAlB,CAAiCL,SAAjC,EAA4C,gBAA5C,EAA8D,EAAEL,MAAF,EAA9D,CAAnB;;AAEA,UAAOD,aAAa,IAAIC,MAAM,KAAK,QAA9B,IAA8C,CAACD,aAAD,IAAkBC,MAAM,KAAK,WAAhF,EAAgG;AAC9FQ,QAAAA,UAAU,CAACO,gBAAX,CAA4B,EAA5B,EAAgC,OAAhC;AACD;AACF,KAzBiC;;AA2BlCE,IAAAA,kBAAkB,GAAG;AACnB,YAAMC,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE;AACNZ,UAAAA,EAAE,EAAEV,IAAI,CAACU,EADH;AAENa,UAAAA,mBAAmB,EAAE,CAFf,EADM;;AAKdC,QAAAA,YAAY,EAAE,IALA,EAAhB;;;AAQA,UAAKvB,KAAK,IAAIA,KAAK,CAACwB,KAApB,EAA4B;AAC1BJ,QAAAA,OAAO,CAACG,YAAR,GAAuBvB,KAAK,CAACwB,KAAN;AACpBC,QAAAA,MADoB,CACZ,CAAC,EAAEC,IAAF,EAAD,KAAcA,IAAI,CAACzB,aAAL,KAAuBA,aADzB;AAEpB0B,QAAAA,GAFoB,CAEf,CAAC,EAAED,IAAF,EAAD,MAAe,EAAEjB,EAAE,EAAEiB,IAAI,CAACjB,EAAX,EAAeR,aAAf,EAAf,CAFe,CAAvB;AAGD;;AAED,UAAKA,aAAL,EAAqB;AACnB,YAAKF,IAAI,CAAC6B,eAAL,IAAwB,IAA7B,EAAoC;AAClCR,UAAAA,OAAO,CAACC,MAAR,CAAeC,mBAAf,GAAqCvB,IAAI,CAAC6B,eAA1C;AACD;AACF,OAJD,MAIO;AACLR,QAAAA,OAAO,CAACC,MAAR,CAAeC,mBAAf,GAAqC,CAArC;AACD;;AAED,aAAO;AACLO,QAAAA,qBAAqB,EAAET,OADlB,EAAP;;AAGD,KArDiC,EAA7B,CAAP;;AAuDD,C;;AAEc,EAAEvB,MAAF,E","sourcesContent":["// @flow weak\n\nimport { commitMutation, graphql } from 'react-relay'\nimport { ConnectionHandler } from 'relay-runtime'\n\nconst mutation = graphql`\n  mutation ToDoListUpdateMarkAllMutation($input: ToDoListUpdateMarkAllInput!, $status: String!) {\n    ToDoListUpdateMarkAll(input: $input) {\n      Viewer {\n        ToDos(status: $status) {\n          edges {\n            node {\n              id\n              ToDo_Complete\n              ToDo_Text\n            }\n          }\n        }\n        id\n        ToDo_CompletedCount\n      }\n      changedToDos {\n        id\n        ToDo_Complete\n      }\n    }\n  }\n`\n\nfunction commit( environment, user, ToDos, ToDo_Complete, status ) {\n  return commitMutation( environment, {\n    mutation,\n    variables: {\n      input: { ToDo_Complete },\n      status,\n    },\n\n    updater( store ) {\n      const userProxy = store.get( user.id )\n      const connection = ConnectionHandler.getConnection( userProxy, 'ToDoList_ToDos', { status })\n      const ToDosEdges = store\n        .getRootField( 'ToDoListUpdateMarkAll' )\n        .getLinkedRecord( 'Viewer' )\n        .getLinkedRecord( 'ToDos', { status })\n        .getLinkedRecords( 'edges' )\n      connection.setLinkedRecords( ToDosEdges, 'edges' )\n    },\n\n    optimisticUpdater( store ) {\n      const userProxy = store.get( user.id )\n      const connection = ConnectionHandler.getConnection( userProxy, 'ToDoList_ToDos', { status })\n\n      if ( ( ToDo_Complete && status === 'active' ) || ( !ToDo_Complete && status === 'completed' ) ) {\n        connection.setLinkedRecords([], 'edges' )\n      }\n    },\n\n    optimisticResponse() {\n      const payload = {\n        Viewer: {\n          id: user.id,\n          ToDo_CompletedCount: 0,\n        },\n        changedToDos: null,\n      }\n\n      if ( ToDos && ToDos.edges ) {\n        payload.changedToDos = ToDos.edges\n          .filter( ({ node }) => node.ToDo_Complete !== ToDo_Complete )\n          .map( ({ node }) => ({ id: node.id, ToDo_Complete }) )\n      }\n\n      if ( ToDo_Complete ) {\n        if ( user.ToDo_TotalCount != null ) {\n          payload.Viewer.ToDo_CompletedCount = user.ToDo_TotalCount\n        }\n      } else {\n        payload.Viewer.ToDo_CompletedCount = 0\n      }\n\n      return {\n        ToDoListUpdateMarkAll: payload,\n      }\n    },\n  })\n}\n\nexport default { commit }\n"],"file":"ToDoListUpdateMarkAllMutation.js"}