{"version":3,"sources":["../../../../../units/rb-example-inscriptio-server/graphql/mutation/InscriptioUpdate.js"],"names":["name","inputFields","id","type","GraphQLNonNull","GraphQLID","Inscriptio_LocationLat","GraphQLString","Inscriptio_LocationLon","Inscriptio_Notes","outputFields","Inscriptio","InscriptioType","resolve","local_id","args","context","rootValue","objectManager","getOneObject_async","mutateAndGetPayload","update"],"mappings":";;AAEA;AACA;;AAEA,gF,8FALA;;AAOe,gDAA6B;AAC1CA,EAAAA,IAAI,EAAE,kBADoC;;AAG1CC,EAAAA,WAAW,EAAE;AACXC,IAAAA,EAAE,EAAE,EAAEC,IAAI,EAAE,IAAIC,uBAAJ,CAAoBC,kBAApB,CAAR,EADO;AAEXC,IAAAA,sBAAsB,EAAE,EAAEH,IAAI,EAAE,IAAIC,uBAAJ,CAAoBG,sBAApB,CAAR,EAFb;AAGXC,IAAAA,sBAAsB,EAAE,EAAEL,IAAI,EAAE,IAAIC,uBAAJ,CAAoBG,sBAApB,CAAR,EAHb;AAIXE,IAAAA,gBAAgB,EAAE,EAAEN,IAAI,EAAE,IAAIC,uBAAJ,CAAoBG,sBAApB,CAAR,EAJP,EAH6B;;;AAU1CG,EAAAA,YAAY,EAAE;AACZC,IAAAA,UAAU,EAAE;AACVR,MAAAA,IAAI,EAAES,uBADI;AAEVC,MAAAA,OAAO,EAAE,CAAC,EAAEC,QAAF,EAAD,EAAe,EAAE,GAAGC,IAAL,EAAf,EAA4BC,OAA5B,EAAqC,EAAEC,SAAS,EAAEC,aAAb,EAArC;AACPA,MAAAA,aAAa,CAACC,kBAAd,CAAkC,YAAlC,EAAgD,EAAEjB,EAAE,EAAEY,QAAN,EAAhD,CAHQ,EADA,EAV4B;;;;AAkB1CM,EAAAA,mBAAmB,EAAE;AACnB,IAAElB,EAAF,EAAMI,sBAAN,EAA8BE,sBAA9B,EAAsDC,gBAAtD,EADmB;AAEnBO,EAAAA,OAFmB;AAGnB,IAAEC,SAAS,EAAEC,aAAb,EAHmB;AAIhB;AACH,UAAMJ,QAAQ,GAAG,gCAAcZ,EAAd,EAAmBA,EAApC;;AAEA,UAAMgB,aAAa,CAACG,MAAd,CAAsB,YAAtB,EAAoC;AACxCnB,MAAAA,EAAE,EAAEY,QADoC;AAExCR,MAAAA,sBAFwC;AAGxCE,MAAAA,sBAHwC;AAIxCC,MAAAA,gBAJwC,EAApC,CAAN;;;AAOA,WAAO,EAAEK,QAAF,EAAP;AACD,GAjCyC,EAA7B,C","sourcesContent":["// @flow weak\n\nimport { fromGlobalId, mutationWithClientMutationId } from 'graphql-relay'\nimport { GraphQLString, GraphQLID, GraphQLNonNull } from 'graphql'\n\nimport InscriptioType from '../type/InscriptioType'\n\nexport default mutationWithClientMutationId({\n  name: 'InscriptioUpdate',\n\n  inputFields: {\n    id: { type: new GraphQLNonNull( GraphQLID ) },\n    Inscriptio_LocationLat: { type: new GraphQLNonNull( GraphQLString ) },\n    Inscriptio_LocationLon: { type: new GraphQLNonNull( GraphQLString ) },\n    Inscriptio_Notes: { type: new GraphQLNonNull( GraphQLString ) },\n  },\n\n  outputFields: {\n    Inscriptio: {\n      type: InscriptioType,\n      resolve: ({ local_id }, { ...args }, context, { rootValue: objectManager }) =>\n        objectManager.getOneObject_async( 'Inscriptio', { id: local_id }),\n    },\n  },\n\n  mutateAndGetPayload: async(\n    { id, Inscriptio_LocationLat, Inscriptio_LocationLon, Inscriptio_Notes },\n    context,\n    { rootValue: objectManager },\n  ) => {\n    const local_id = fromGlobalId( id ).id\n\n    await objectManager.update( 'Inscriptio', {\n      id: local_id,\n      Inscriptio_LocationLat,\n      Inscriptio_LocationLon,\n      Inscriptio_Notes,\n    })\n\n    return { local_id }\n  },\n})\n"],"file":"InscriptioUpdate.js"}