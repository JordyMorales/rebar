{"version":3,"sources":["../../../../units/urb-example-viewport-dimensions-webapp/components/ViewportDimensionsScreen.jsx"],"names":["styles","card","minWidth","ViewportDimensionsScreen","React","Component","render","classes","props","totalWidth","totalHeight","data","name","value","map","n"],"mappings":";;AAEA,8C;;AAEA,4D;;AAEA,0D;;AAEA;;AAEA,gD;;AAEA,wD;;AAEA,wD;;AAEA,wD;;AAEA,sD;;AAEA,8B;AACA;;AAEA,kG;AACA,sF;;AAEA,MAAMA,SAAS;AACbC,QAAM;AACJC,cAAU,GADN,EADO,EAAf;;;;AAMA,MAAMC,wBAAN,SAAuCC,gBAAMC;;;AAG1C;AACDC,WAAS;AACP,UAAM,EAAEC,OAAF,KAAc,KAAKC,KAAzB;;AAEA;AACE,oCAAC,+BAAD;AACE,sCAAC,yBAAD,CAAiB,QAAjB;AACG,WAAC,EAAEC,UAAF,EAAcC,WAAd,EAAD,KAAiC;AAChC,kBAAMC,OAAO;AACX,cAAEC,MAAM,YAAR,EAAsBC,OAAOJ,UAA7B,EADW;AAEX,cAAEG,MAAM,aAAR,EAAuBC,OAAOH,WAA9B,EAFW,CAAb;;;AAKA;AACE,4CAAC,cAAD,IAAM,WAAWH,QAAQN,IAAzB;AACE,8CAAC,oBAAD,IAAY,OAAM,qBAAlB,GADF;AAEE,8CAAC,eAAD;AACE,gDAAC,mBAAD;AACE,kDAAC,kBAAD;AACE,oDAAC,mBAAD,mBADF;AAEE,oDAAC,mBAAD,IAAW,aAAX,YAFF,CADF,CADF;;;AAOE,gDAAC,mBAAD;AACGU,yBAAKG,GAAL,CAAUC,KAAK;AACd;AACE,sDAAC,kBAAD,IAAU,KAAKA,EAAEH,IAAjB;AACE,wDAAC,mBAAD,QAAYG,EAAEH,IAAd,CADF;AAEE,wDAAC,mBAAD,IAAW,aAAX,IAAoBG,EAAEF,KAAtB,CAFF,CADF;;;AAMD,qBAPA,CADH,CAPF,CAFF;;;AAoBE,8CAAC,qBAAD,OApBF,CADF;;;AAwBD,WA/BH,CADF,CADF;;;;AAqCD,GAzCA,C;;;AA4CY;AACb,wBAAYb,MAAZ,EAAsBG,wBAAtB,CADa,uG","file":"ViewportDimensionsScreen.js","sourcesContent":["// @flow\n\nimport Card from '@material-ui/core/Card'\n\nimport CardContent from '@material-ui/core/CardContent'\n\nimport CardHeader from '@material-ui/core/CardHeader'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport Table from '@material-ui/core/Table'\n\nimport TableBody from '@material-ui/core/TableBody'\n\nimport TableCell from '@material-ui/core/TableCell'\n\nimport TableHead from '@material-ui/core/TableHead'\n\nimport TableRow from '@material-ui/core/TableRow'\n\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport ResponsiveContentArea from '../../urb-appbase-webapp/components/ResponsiveContentArea'\nimport ViewportContext from '../../urb-appbase-webapp/components/ViewportContext'\n\nconst styles = {\n  card: {\n    minWidth: 275,\n  },\n}\n\nclass ViewportDimensionsScreen extends React.Component<{\n  classes: Object,\n  Viewer: Object,\n}> {\n  render() {\n    const { classes } = this.props\n\n    return (\n      <ResponsiveContentArea>\n        <ViewportContext.Consumer>\n          {({ totalWidth, totalHeight }) => {\n            const data = [\n              { name: 'totalWidth', value: totalWidth },\n              { name: 'totalHeight', value: totalHeight },\n            ]\n\n            return (\n              <Card className={classes.card}>\n                <CardHeader title=\"Viewport Dimensions\" />\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Property</TableCell>\n                      <TableCell numeric>Value</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {data.map( n => {\n                      return (\n                        <TableRow key={n.name}>\n                          <TableCell>{n.name}</TableCell>\n                          <TableCell numeric>{n.value}</TableCell>\n                        </TableRow>\n                      )\n                    })}\n                  </TableBody>\n                </Table>\n                <CardContent />\n              </Card>\n            )\n          }}\n        </ViewportContext.Consumer>\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles( styles )( ViewportDimensionsScreen ),\n  graphql`\n    fragment ViewportDimensionsScreen_Viewer on Viewer {\n      id\n    }\n  `,\n)\n"]}