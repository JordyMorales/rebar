{"version":3,"sources":["../../../../units/rb-persister-cassandra/graphql/CassandraOptions.js"],"names":["require","config","CassandraOptions","authProvider","contactPoints","process","env","CASSANDRA_CONNECTION_POINTS","split","keyspace","CASSANDRA_KEYSPACE","localDataCenter","policies","loadBalancing","cassandraDriver","RoundRobinPolicy","queryOptions","consistency","ExpressCassandra","consistencies","one","socketOptions","readTimeout","CASSANDRA_USER","auth","PlainTextAuthProvider","CASSANDRA_PASSWORD"],"mappings":";;AAEA;AACA,6E;;AAEA;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,YAAY,EAAE,IADS;AAEvB;AACAC,EAAAA,aAAa;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAYC,2BAAZ,IAA2C,IAA3C;AACIF,EAAAA,OAAO,CAACC,GAAR,CAAYC,2BAAZ,CAAwCC,KAAxC,CAA8C,GAA9C,CADJ;AAEI,GAAE,WAAF,CANiB;AAOvBC,EAAAA,QAAQ,EAAEJ,OAAO,CAACC,GAAR,CAAYI,kBAPC;AAQvBC,EAAAA,eAAe,EAAE,aARM;AASvBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,EAAE,IAAIC,yBAAgBF,QAAhB,CAAyBC,aAAzB;AAChBE,IAAAA,gBADY,EADP,EATa;;AAavBC,EAAAA,YAAY,EAAE,EAAEC,WAAW,EAAEC,0BAAiBC,aAAjB,CAA+BC,GAA9C,EAbS;AAcvBC,EAAAA,aAAa,EAAE,EAAEC,WAAW,EAAE,CAAf,EAdQ,EAAzB;;;AAiBA,IAAIjB,OAAO,CAACC,GAAR,CAAYiB,cAAhB,EAAgC;AAC9BrB,EAAAA,gBAAgB,CAACC,YAAjB,GAAgC,IAAIW,yBAAgBU,IAAhB;AACjCC,EAAAA,qBAD6B;AAE9BpB,EAAAA,OAAO,CAACC,GAAR,CAAYiB,cAFkB;AAG9BlB,EAAAA,OAAO,CAACC,GAAR,CAAYoB,kBAHkB,CAAhC;;AAKD,C;;AAEcxB,gB","sourcesContent":["// @flow\n\nimport cassandraDriver from 'cassandra-driver'\nimport ExpressCassandra from 'express-cassandra'\n\n// Read environment\nrequire('dotenv').config()\n\nconst CassandraOptions = {\n  authProvider: null,\n  // Assume localhost if not defined\n  contactPoints:\n    process.env.CASSANDRA_CONNECTION_POINTS != null\n      ? process.env.CASSANDRA_CONNECTION_POINTS.split(',')\n      : [ 'localhost' ],\n  keyspace: process.env.CASSANDRA_KEYSPACE,\n  localDataCenter: 'datacenter1',\n  policies: {\n    loadBalancing: new cassandraDriver.policies.loadBalancing\n      .RoundRobinPolicy(),\n  },\n  queryOptions: { consistency: ExpressCassandra.consistencies.one },\n  socketOptions: { readTimeout: 0 },\n}\n\nif (process.env.CASSANDRA_USER) {\n  CassandraOptions.authProvider = new cassandraDriver.auth\n    .PlainTextAuthProvider(\n    process.env.CASSANDRA_USER,\n    process.env.CASSANDRA_PASSWORD,\n  )\n}\n\nexport default CassandraOptions\n"],"file":"CassandraOptions.js"}